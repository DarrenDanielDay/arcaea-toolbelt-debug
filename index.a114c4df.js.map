{"mappings":"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","sources":["src/view/app.css.js","src/services/di.ts","src/utils/click-elsewhere.ts","src/view/components/result-card/index.tsx","src/view/components/result-card/style.css.js","src/view/components/asset-image/index.tsx","node_modules/@parcel/runtime-js/lib/runtime-071793461b199db0.js","src/utils/format.ts","src/utils/component.ts","src/utils/download.ts","node_modules/@parcel/runtime-js/lib/runtime-f3128c47a5e42c87.js","node_modules/@parcel/runtime-js/lib/helpers/browser/esm-js-loader.js","src/view/components/potential-badge/index.tsx","src/view/components/potential-badge/style.css.js","src/models/world-mode.ts","src/services/world-mode.ts","src/services/character.ts","src/main.ts","src/view/app.ts","src/view/components/nav-bar/index.tsx","node_modules/@parcel/runtime-js/lib/runtime-f75f8d2aef6c142a.js","node_modules/@parcel/runtime-js/lib/runtime-1cc3f3bdd070399c.js","node_modules/@parcel/runtime-js/lib/runtime-599036c667450453.js","node_modules/@parcel/runtime-js/lib/runtime-cb790cbd15e6f9e9.js","src/view/components/nav-bar/style.css.js","src/view/pages/router/index.ts","src/view/components/svg-icon/index.tsx","src/view/pages/index.ts","src/view/pages/about/index.tsx","src/view/components/b30-yukichan/index.tsx","src/view/components/b30-yukichan/style.css.js","src/view/components/help-tip/index.tsx","node_modules/@parcel/runtime-js/lib/runtime-71314cc45162c7c0.js","src/view/components/help-tip/style.css.js","src/view/pages/add-result/index.tsx","src/view/components/play-result-form/index.tsx","src/view/components/search-select/index.tsx","src/view/components/search-select/style.css.js","src/view/components/play-result-form/style.css.js","src/utils/browser.ts","src/view/pages/constant-tools/index.ts","src/view/components/constant-tools/index.tsx","src/view/components/character-picker/index.tsx","src/view/components/character-picker/style.css.js","src/utils/paging.ts","src/view/components/character-select/index.tsx","src/view/components/character-select/style.css.js","src/view/pages/player-b39/index.tsx","src/view/pages/player-b39/style.css.js","src/view/components/loading/index.tsx","src/utils/rpc.ts","src/utils/future.ts","src/utils/invoke-capture.ts","src/utils/transfer.ts","src/utils/uuid.ts","src/services/generator-api-impl.ts","src/utils/url.ts","src/view/components/image-clipper/index.tsx","src/view/components/image-clipper/style.css.js","src/utils/image-clip.ts","src/view/pages/profile/index.ts","src/view/components/profile/index.tsx","src/view/components/profile/style.css.js","src/view/components/route-link/index.tsx","src/view/pages/query-charts/index.ts","src/view/components/chart-query/index.tsx","src/view/components/chart-query/style.css.js","src/view/components/chart-info/index.tsx","src/view/components/chart-info/style.css.js","src/utils/experimental.ts","src/view/pages/world-mode/index.ts","src/view/components/world-map-calculator/index.tsx","src/view/components/world-map-calculator/style.css.js","src/view/components/world-map-select/index.tsx","src/view/components/world-map-select/style.css.js","src/view/components/world-map-normal/index.tsx","src/view/components/world-map-normal/style.css.js","src/services/assets.ts","src/services/assets-cache.ts","src/services/cache.ts","src/services/file-storage.ts"],"sourcesContent":["import { create } from \"sheetly\";\nexport let text = \":host,:root{--1:#f8c507;--2:#d1d4e2;--3:#f39b77;--no-color:var(--bs-secondary-bg);--pst:#5cbad3;--pst-light:#6ad6f3;--pst-border-color:#61a8c1;--prs:#b5c76f;--prs-light:#d0e580;--prs-border-color:#a7c276;--ftr:#913a79;--ftr-light:#a7428b;--ftr-border-color:#8f5a7f;--byd:#bf0d25;--byd-light:#dc0f2a;--byd-border-color:#b64356;--pure:#cc22ee;--far:#ffaa11;--lost:#dd4444;--side-light:#376e99;--side-conflict:#8456b3;--side-colorless:#d4c6d4}@font-face{font-family:Exo;src:url(\\\"https://fonts.gstatic.com/s/exo/v20/4UaZrEtFpBI4f1ZSIK9d4LjJ4rQwOwRmOw.woff2\\\") format(\\\"woff2\\\")}\";\nexport const sheet = create(text, import.meta.url);\n","import type { Container, Token } from \"classic-di\";\r\n\r\nlet globalContainer: Container | null = null;\r\n\r\nexport const Inject =\r\n  <T>(token: Token<T> | (new (...args: any[]) => T), options?: { once?: boolean }) =>\r\n  <E extends Node>(\r\n    _target: ClassAccessorDecoratorTarget<E, T>,\r\n    context: ClassAccessorDecoratorContext<E, T>\r\n  ): ClassAccessorDecoratorResult<E, T> => {\r\n    if (context.static) {\r\n      throw new Error(\"Cannot inject for static property.\");\r\n    }\r\n    let injected: any = null;\r\n    return {\r\n      get() {\r\n        if (options?.once && injected) {\r\n          return injected;\r\n        }\r\n        for (let node: Node | null = this; node; node = getParentContext(node)) {\r\n          const container = node[$$provider];\r\n          if (container) {\r\n            const resolution = container.resolve(token);\r\n            if (!resolution.circular) {\r\n              return (injected = container.create(resolution.path));\r\n            }\r\n          }\r\n        }\r\n        const container = globalContainer;\r\n        if (container) {\r\n          const resolution = container.resolve(token);\r\n          if (!resolution.circular) {\r\n            return (injected = container.create(resolution.path));\r\n          }\r\n        }\r\n        if (typeof token === \"function\") {\r\n          throw new Error(`Cannot create implementation for constructor \"${token.name}\"`);\r\n        }\r\n        throw new Error(`Cannot find implementation for token \"${token.key.description}\"`);\r\n      },\r\n    };\r\n  };\r\n\r\nconst getParentContext = (node: Node): Node | null => {\r\n  if (node instanceof ShadowRoot) {\r\n    return node.host;\r\n  }\r\n  return node.parentNode;\r\n};\r\n\r\nconst $$provider: unique symbol = Symbol(\"@@provider\");\r\n\r\ndeclare global {\r\n  interface Node {\r\n    [$$provider]?: Container;\r\n  }\r\n}\r\n\r\nexport const provide = (at: Node, container: Container) => {\r\n  if (!globalContainer) globalContainer = container;\r\n  at[$$provider] = container;\r\n};\r\n","export const clickElsewhere = (panel: Element, onClick: (e: MouseEvent) => void) => {\r\n  const handler = (e: MouseEvent) => {\r\n    const path = e.composedPath();\r\n    if (!path.includes(panel)) {\r\n      onClick(e);\r\n    }\r\n  };\r\n  window.addEventListener(\"click\", handler);\r\n  return () => {\r\n    window.removeEventListener(\"click\", handler);\r\n  };\r\n};\r\n","import { sheet } from \"./style.css.js\";\r\nimport { Chart, ScoreResult, Song, ClearRank, NoteResult, PlayResult } from \"../../../models/music-play\";\r\nimport { Component, HyplateElement, computed, content, element, signal, cssVar } from \"hyplate\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport {\r\n  $AssetsResolver,\r\n  $AssetsService,\r\n  $ChartService,\r\n  $MusicPlayService,\r\n  $PreferenceService,\r\n  AssetsResolver,\r\n  AssetsService,\r\n  ChartService,\r\n  MusicPlayService,\r\n  PreferenceService,\r\n} from \"../../../services/declarations\";\r\nimport { AssetImage } from \"../asset-image\";\r\nimport { duration } from \"../../../utils/time\";\r\n\r\nfunction formatScore(score: number) {\r\n  const raw = Math.floor(score).toString();\r\n  if (raw.length > 8 || score < 0) {\r\n    throw new Error(`Invalid score ${score}`);\r\n  }\r\n  const padded = raw.padStart(8, \"0\");\r\n  return `${padded.slice(0, 2)}'${padded.slice(2, 5)}'${padded.slice(5, 8)}`;\r\n}\r\n\r\nconst canvas = element(\"canvas\");\r\nconst ctx = canvas.getContext(\"2d\")!;\r\nconst measureSongTitle = (name: string, fontFamily: string): number => {\r\n  ctx.font = `600 48px / 80px ${fontFamily}`;\r\n  const measure = ctx.measureText(name);\r\n  return measure.width;\r\n};\r\n\r\nexport\r\n@Component({\r\n  tag: \"result-card\",\r\n  styles: [sheet],\r\n})\r\nclass ResultCard extends HyplateElement {\r\n  @Inject($ChartService)\r\n  accessor chart!: ChartService;\r\n  @Inject($MusicPlayService)\r\n  accessor musicPlay!: MusicPlayService;\r\n  @Inject($AssetsResolver)\r\n  accessor resolver!: AssetsResolver;\r\n  @Inject($AssetsService)\r\n  accessor assets!: AssetsService;\r\n  @Inject($PreferenceService)\r\n  accessor preference!: PreferenceService;\r\n\r\n  songTitle = element(\"div\");\r\n  chartInfo = signal<{ song: Song; chart: Chart } | null>(null);\r\n  bestNo = signal<number | null>(null);\r\n  noteResult = signal<Partial<NoteResult>>({});\r\n  scoreResult = signal<ScoreResult | null>(null);\r\n  clearRank = signal<ClearRank | null>(null);\r\n  playTime = signal<Date | null>(null);\r\n  now = signal<Date | null>(null);\r\n  hd = signal(false);\r\n  override render() {\r\n    const showMaxMinus = this.preference.signal(\"showMaxMinus\");\r\n    this.effect(() => {\r\n      this.resizeCard();\r\n      const ob = new ResizeObserver(() => {\r\n        this.resizeCard();\r\n        // Resize only once.\r\n        ob.disconnect();\r\n      });\r\n      ob.observe(this);\r\n      return () => {\r\n        ob.disconnect();\r\n      };\r\n    });\r\n    this.autorun(() => {\r\n      const info = this.chartInfo();\r\n      if (!info) return;\r\n      const { chart, song } = info;\r\n      const { difficulty } = chart;\r\n      cssVar(this, \"potential-color\", `var(--${difficulty}-light)`);\r\n      cssVar(this, \"constant-color\", `var(--${difficulty})`);\r\n      cssVar(this, \"badge-border\", `var(--${difficulty}-border)`);\r\n      const title = this.chart.getName(chart, song);\r\n      content(this.songTitle, title);\r\n      const fontFamily = getComputedStyle(this.shadowRoot.querySelector(\".song-title\")!).fontFamily;\r\n      const length = measureSongTitle(title, fontFamily);\r\n      const titleLength = length < 664 ? 664 : length;\r\n      cssVar(this, \"title-length\", `${titleLength}`);\r\n    });\r\n    return (\r\n      <div\r\n        class=\"card\"\r\n        part=\"card\"\r\n        var:no-color={computed(() => {\r\n          const bestNo = this.bestNo();\r\n          if (!bestNo || bestNo > 3) return null;\r\n          return `var(--${bestNo})`;\r\n        })}\r\n      >\r\n        <AssetImage\r\n          class=\"cover\"\r\n          src={computed(() => {\r\n            const info = this.chartInfo();\r\n            const hd = this.hd();\r\n            if (!info) return this.assets.getAssets(this.resolver.resolveUnknownCover());\r\n            const { chart, song } = info;\r\n            return this.assets.getAssets(this.resolver.resolveCover(chart, song, hd));\r\n          })}\r\n          width=\"288\"\r\n          height=\"288\"\r\n        />\r\n        <div class=\"details\">\r\n          <div class=\"data-badge\">\r\n            <div class=\"potential\">{computed(() => this.scoreResult()?.potential.toFixed(4) ?? \"\")}</div>\r\n            <div class=\"constant\">{computed(() => this.chartInfo()?.chart.constant.toFixed(1) ?? \"\")}</div>\r\n            <div class=\"rank\">\r\n              <AssetImage\r\n                class=\"grade\"\r\n                src={computed(() => {\r\n                  const grade = this.scoreResult()?.grade;\r\n                  return grade ? this.assets.getAssets(this.resolver.resolveGradeImg(grade)) : Promise.resolve(null);\r\n                })}\r\n                class:hidden={computed(() => !this.scoreResult())}\r\n              />\r\n              <AssetImage\r\n                class=\"clear\"\r\n                src={computed(() => {\r\n                  const clear = this.clearRank();\r\n                  return clear ? this.assets.getAssets(this.resolver.resolveClearImg(clear)) : Promise.resolve(null);\r\n                })}\r\n                class:hidden={computed(() => !this.clearRank())}\r\n              />\r\n            </div>\r\n            <div class=\"no-badge\">\r\n              {computed(() => {\r\n                const bestNo = this.bestNo();\r\n                return bestNo == null ? \"--\" : `#${bestNo}`;\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div ref={this.songTitle} class=\"song-title\">\r\n            --\r\n          </div>\r\n          <div class={computed(() => (this.clearRank() === ClearRank.Maximum ? \"score max\" : \"score\"))}>\r\n            {computed(() => formatScore(this.scoreResult()?.score ?? 0))}\r\n          </div>\r\n          <div class=\"play-result\">\r\n            <div class=\"pure\">\r\n              Pure/<span class=\"count\">{computed(() => this.noteResult().pure ?? \"?\")}</span>(\r\n              <span class=\"perfect\">\r\n                {computed(() => {\r\n                  const { perfect, pure } = this.noteResult();\r\n                  if (perfect == null || pure == null) {\r\n                    return \"?\";\r\n                  }\r\n                  if (showMaxMinus()) {\r\n                    const count = pure - perfect;\r\n                    return count ? `-${count}` : \"max\";\r\n                  }\r\n                  return `+${perfect}`;\r\n                })}\r\n              </span>\r\n              )\r\n            </div>\r\n            <div class=\"far\">\r\n              Far/<span class=\"count\">{computed(() => this.noteResult().far ?? \"?\")}</span>\r\n            </div>\r\n            <div class=\"lost\">\r\n              Lost/<span class=\"count\">{computed(() => this.noteResult().lost ?? \"?\")}</span>\r\n            </div>\r\n            <div class=\"time\">\r\n              <time\r\n                datetime={computed(() => this.playTime()?.toISOString())}\r\n                title={computed(() => this.playTime()?.toString())}\r\n              >\r\n                {computed(() => {\r\n                  const now = this.now();\r\n                  const time = this.playTime();\r\n                  if (!now || !time) {\r\n                    return \"-\";\r\n                  }\r\n                  return duration(+time, +now);\r\n                })}\r\n              </time>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  setChart(song: Song, chart: Chart) {\r\n    this.chartInfo.set({ song, chart });\r\n  }\r\n\r\n  setResult(noteResult: NoteResult | null, score: ScoreResult | null, clear: ClearRank | null) {\r\n    this.clearRank.set(clear);\r\n    this.noteResult.set(noteResult ?? {});\r\n    this.scoreResult.set(score);\r\n  }\r\n\r\n  setPlayTime(time: number | Date | null) {\r\n    this.playTime.set(time ? new Date(time) : null);\r\n  }\r\n\r\n  setNow(now: number | Date) {\r\n    this.now.set(new Date(now));\r\n  }\r\n\r\n  async setPlayResult(playResult: PlayResult | null) {\r\n    if (!playResult) {\r\n      this.chartInfo.set(null);\r\n      this.setResult(null, null, null);\r\n      this.setBest(null);\r\n      return;\r\n    }\r\n    const [searched] = await this.chart.searchChart(playResult.chartId);\r\n    if (!searched) {\r\n      return;\r\n    }\r\n    const { chart, song } = searched;\r\n    this.setChart(song, chart);\r\n    if (playResult.type === \"note\") {\r\n      this.setResult(\r\n        playResult.result,\r\n        this.musicPlay.computeScoreResult(this.musicPlay.computeScore(chart, playResult.result), chart),\r\n        playResult.clear\r\n      );\r\n    } else {\r\n      this.setResult(null, this.musicPlay.computeScoreResult(playResult.score, chart), playResult.clear);\r\n    }\r\n    this.setPlayTime(playResult.date ?? null);\r\n  }\r\n\r\n  setBest(bestNo: number | null) {\r\n    this.bestNo.set(bestNo);\r\n  }\r\n\r\n  setHD(hd: boolean) {\r\n    this.hd.set(hd);\r\n  }\r\n\r\n  private resizeCard() {\r\n    const width = this.offsetWidth;\r\n    cssVar(this, \"card-scale\", `${width / 1000}`);\r\n    this.style.height = `${width * 0.32}px`;\r\n  }\r\n}\r\n","import { create } from \"sheetly\";\nexport let text = \":host{display:block;box-sizing:border-box;--title-length:664}.card{background-color:var(--bs-body-bg);transform:scale(var(--card-scale,1));transform-origin:0 0;box-sizing:border-box;border-radius:16px;box-shadow:0 0 8px 8px rgba(0,0,0,.12);width:1000px;height:320px;display:grid;grid-template-columns:288px 664px;padding:16px;gap:16px}.details{position:relative;width:100%}.data-badge{height:60px;background-color:var(--bs-secondary-bg);border-radius:8px}.data-badge>div{box-sizing:border-box;display:inline-flex;align-items:center;position:absolute;padding-top:4px;border-radius:8px;height:60px;font-size:40px}.potential{z-index:5;color:#fff;width:192px;padding-left:12px;background-color:var(--potential-color);border:var(--badge-border)}.constant{z-index:4;color:#fff;left:180px;width:calc(315px - 180px);padding-left:32px;background-color:var(--constant-color);border:var(--badge-border)}.hidden{visibility:hidden}.rank{z-index:3;background-color:var(--bs-secondary-bg);position:absolute;display:flex;left:300px;width:240px;gap:8px;justify-content:center}.rank img{width:96px;height:96px}.no-badge{font-weight:600;width:144px;left:520px;padding-left:48px;background-color:var(--no-color)}.song-title{font-size:48px;white-space:nowrap;width:664px;transform:scaleX(calc(664 / var(--title-length)));transform-origin:0 0;line-height:80px;font-weight:600}.score{font-size:90px;line-height:100px}.score.max{text-shadow:4px 4px #0f7185dd}.play-result{display:grid;width:100%;font-size:32px;line-height:48px;grid-template-columns:6fr 3fr 3fr 1fr}.pure{color:var(--pure)}.far{color:var(--far)}.lost{color:var(--lost)}\";\nexport const sheet = create(text, import.meta.url);\n","import loading from \"../../../assets/loading.gif\";\r\nimport { isSubscribable, signal, useAutoRun } from \"hyplate\";\r\nimport type { HTMLImageElementAttributes, BindingPattern } from \"hyplate/types\";\r\nimport { PromiseOr, isString } from \"../../../utils/misc\";\r\n\r\ntype ImageSource = PromiseOr<string | null>;\r\n\r\ntype AssetImageProps = JSX.JSXAttributes<Omit<HTMLImageElementAttributes, \"src\">, HTMLImageElement> & {\r\n  src: BindingPattern<ImageSource>;\r\n  noLoading?: boolean;\r\n};\r\n\r\nexport const AssetImage = ({ src, noLoading, ...props }: AssetImageProps) => {\r\n  const $src = signal<string | null>(null);\r\n  let resolveingPromise: Promise<string | null> | null = null;\r\n  const handleSource = (source: ImageSource) => {\r\n    if (!source || isString(source)) {\r\n      $src.set(source || null);\r\n      return;\r\n    }\r\n    resolveingPromise = source;\r\n    if (!noLoading) {\r\n      $src.set(loading);\r\n    }\r\n    source\r\n      .then((url) => {\r\n        // Only the last resolved promise apply.\r\n        if (resolveingPromise === source) {\r\n          $src.set(url);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        if (resolveingPromise === source) {\r\n          $src.set(null);\r\n        }\r\n      });\r\n  };\r\n  isSubscribable(src)\r\n    ? useAutoRun(() => {\r\n        handleSource(src());\r\n      })\r\n    : handleSource(src);\r\n  return <img src={$src} {...props}></img>;\r\n};\r\n","module.exports = new __parcel__URL__(\"loading.cf56470b.gif\").toString();","const sizes = [\"B\", \"KB\", \"MB\"];\r\nconst rate = 1024;\r\nexport const formatSize = (byteSize: number) => {\r\n  let size = byteSize;\r\n  let i = 0;\r\n  const maxIndex = sizes.length - 1;\r\n  while (i < maxIndex && size >= rate) {\r\n    i++;\r\n    size /= rate;\r\n  }\r\n  return `${size.toFixed(2)}${sizes[i]}`;\r\n};\r\n\r\nexport const formatError = (error: unknown)=> {\r\n  if (error instanceof Error) {\r\n    return error.message;\r\n  }\r\n  return `Unexpected thrown: ${JSON.stringify(error)}`;\r\n}","import { ParseSelector } from \"typed-query-selector/parser\";\r\nimport { attr, element, listen, registerDirective } from \"hyplate\";\r\nimport type { ClassComponentInstance, CleanUpFunc, JSXDirective } from \"hyplate/types\";\r\n\r\nexport const css = String.raw;\r\n\r\nexport const query =\r\n  <T extends Record<string, string>>(queries: T): Query<T> =>\r\n  (host) =>\r\n    // @ts-expect-error Dynamic Implementation\r\n    Object.fromEntries(Object.entries(queries).map(([key, value]) => [key, host.querySelector(value)]));\r\n\r\nexport type Query<T extends Record<string, string>> = (host: ParentNode) => Refs<T>;\r\n\r\nexport type Refs<T extends Record<string, string>> = {\r\n  [K in keyof T]: ParseSelector<T[K]>;\r\n};\r\n\r\nexport type RefsOf<Q> = Q extends Query<infer T> ? Refs<T> : never;\r\n\r\nexport const input = () => element(\"input\");\r\n\r\nexport const syncProps = (component: ClassComponentInstance) => {\r\n  const props = component.props;\r\n  for (const key in props) {\r\n    if (key !== \"ref\" && key !== \"children\") {\r\n      // @ts-expect-error dynamic key property\r\n      const value = props[key];\r\n      if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\r\n        attr(component, key, value);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport class EnterSubmitDirective implements JSXDirective<boolean> {\r\n  prefix = \"keypress-submit\";\r\n  requireParams = false;\r\n  apply(el: Element, _params: string | null, input: boolean): void | CleanUpFunc {\r\n    if (input && el instanceof HTMLInputElement) {\r\n      return listen(el)(\"keypress\", (e) => {\r\n        if (e.key.toLowerCase() === \"enter\") el.form?.requestSubmit();\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nregisterDirective(new EnterSubmitDirective());\r\n\r\ndeclare module \"hyplate/types\" {\r\n  export interface ElementDirectives<E extends Element> {\r\n    \"keypress-submit\"?: boolean;\r\n  }\r\n}\r\n","export function download(url: string, filename: string) {\r\n  const link = document.createElement(\"a\");\r\n  link.download = filename;\r\n  link.href = url;\r\n  link.click();\r\n}\r\n\r\nexport function downloadJSON(json: object, filename: string) {\r\n  const url = URL.createObjectURL(new Blob([JSON.stringify(json, undefined, 2) + \"\\n\"], { type: \"application/json\" }));\r\n  download(url, filename);\r\n}\r\n","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = (load(\"4pm0v\")).then(() => parcelRequire('fXgWO'));","\"use strict\";\n\nfunction load(id) {\n  // eslint-disable-next-line no-undef\n  return __parcel__import__(require('../bundle-manifest').resolve(id));\n}\nmodule.exports = load;","import { Attribute, AutoRender, Component, HyplateElement } from \"hyplate\";\r\nimport type { GlobalAttributes, Signal } from \"hyplate/types\";\r\nimport { sheet } from \"./style.css.js\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport {\r\n  $AssetsResolver,\r\n  $AssetsService,\r\n  $MusicPlayService,\r\n  AssetsResolver,\r\n  AssetsService,\r\n  MusicPlayService,\r\n} from \"../../../services/declarations\";\r\nimport { syncProps } from \"../../../utils/component\";\r\nimport { AssetImage } from \"../asset-image\";\r\n\r\nexport interface PotentialBadgeProps {\r\n  potential?: number;\r\n}\r\n\r\nexport\r\n@Component({\r\n  tag: \"potential-badge\",\r\n  styles: [sheet],\r\n})\r\nclass PotentialBadge extends HyplateElement<PotentialBadgeProps> {\r\n  @Attribute(\"potential\", Number)\r\n  accessor potential!: Signal<number | undefined | null>;\r\n  @Inject($MusicPlayService)\r\n  accessor music!: MusicPlayService;\r\n  @Inject($AssetsResolver)\r\n  accessor resolver!: AssetsResolver;\r\n  @Inject($AssetsService)\r\n  accessor assets!: AssetsService;\r\n\r\n  override render() {\r\n    syncProps(this);\r\n    return (\r\n      <AutoRender>\r\n        {() => {\r\n          const potential = this.potential();\r\n          const rating = this.#getPotentialRating(potential);\r\n          return (\r\n            <>\r\n              <AssetImage noLoading src={this.assets.getAssets(this.resolver.resolvePotentialBadge(rating))} />\r\n              <div class=\"potential\">\r\n                {potential == null || potential < 0 ? (\r\n                  <span class=\"off\">-</span>\r\n                ) : (\r\n                  [\r\n                    <span class=\"decimal\">{Math.floor(potential)}</span>,\r\n                    <span class=\"fixed\">\r\n                      .{`${Math.floor(potential * 100 - Math.floor(potential) * 100)}`.padStart(2, \"0\")}\r\n                    </span>,\r\n                  ]\r\n                )}\r\n              </div>\r\n            </>\r\n          );\r\n        }}\r\n      </AutoRender>\r\n    );\r\n  }\r\n\r\n  #getPotentialRating(potential: number | undefined | null): number {\r\n    if (potential == null) {\r\n      return -1;\r\n    }\r\n    return this.music.getPotentialRating(potential);\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      \"potential-badge\": JSXAttributes<PotentialBadgeProps & GlobalAttributes, PotentialBadge>;\r\n    }\r\n  }\r\n}\r\n","import { create } from \"sheetly\";\nexport let text = \":host{display:inline-block;position:relative;width:60px;height:60px}img{display:none;user-select:none;width:100%;height:100%}img[src]{display:inline}.potential{position:absolute;color:#fff;font-weight:700;left:50%;top:50%;font-family:Exo;-webkit-text-stroke:1px #25152a;transform:translate(-50%,-50%)}.off{font-size:24px}.decimal{font-size:24px}.fixed{font-size:18px;padding-top:5px}\";\nexport const sheet = create(text, import.meta.url);\n","/**\r\n * 道具\r\n */\r\nexport interface ItemData {\r\n  name: string;\r\n  img: string;\r\n}\r\n\r\nexport enum RewardType {\r\n  Item,\r\n  Song,\r\n  Character,\r\n  Background,\r\n}\r\n\r\n/**\r\n * 主要用于通过奖励搜索，不包含残片奖励和以太之滴奖励\r\n */\r\nexport type WorldMapRewardData =\r\n  | {\r\n      type: RewardType.Song;\r\n      id: string;\r\n    }\r\n  | {\r\n      type: RewardType.Character;\r\n      id: number;\r\n    }\r\n  | {\r\n      type: RewardType.Background;\r\n      name: string;\r\n      img: string;\r\n    }\r\n  | {\r\n      type: RewardType.Item;\r\n      name: string;\r\n      count: number;\r\n    };\r\n\r\nexport type WorldMapReward =\r\n  | {\r\n      type: RewardType.Song;\r\n      id: string;\r\n      name: string;\r\n      img: string;\r\n    }\r\n  | {\r\n      type: RewardType.Character;\r\n      id: number;\r\n      img: string;\r\n      name: string;\r\n    }\r\n  | {\r\n      type: RewardType.Background;\r\n      img: string;\r\n      name: string;\r\n    }\r\n  | {\r\n      type: RewardType.Item;\r\n      img: string;\r\n      name: string;\r\n      count: number;\r\n    };\r\n\r\nexport interface ChapterData {\r\n  chapter: string;\r\n  maps: NormalWorldMapData[];\r\n}\r\n\r\nexport interface Chapter extends ChapterData {\r\n  maps: NormalWorldMap[]\r\n}\r\n\r\n/**\r\n * 爬梯的地图\r\n */\r\nexport interface NormalWorldMapData {\r\n  /**\r\n   * 暂时就用wiki上的id，同时也用作显示名称\r\n   */\r\n  id: string;\r\n  legacy?: boolean;\r\n  /**\r\n   * 仅活动地图有过期时间，无过期时间的是已经过去的活动\r\n   */\r\n  expire?: number;\r\n  platforms: { [level: number]: MapPlatformData | undefined | null; };\r\n}\r\n\r\nexport interface NormalWorldMapPlatforms {\r\n  [level: number]: MapPlatform | undefined | null;\r\n  length: number;\r\n}\r\n\r\nexport interface NormalWorldMap extends NormalWorldMapData {\r\n  \r\n  platforms: NormalWorldMapPlatforms;\r\n}\r\n\r\nexport enum PlatformType {\r\n  Stamina,\r\n  FixedSpeed,\r\n  Restriction,\r\n  Random,\r\n}\r\n\r\n/**\r\n * 爬梯地图格子，也可以叫平台\r\n */\r\nexport interface MapPlatformData {\r\n  length: number;\r\n  special?:\r\n    | {\r\n        type: PlatformType.Stamina;\r\n        count: number;\r\n      }\r\n    | {\r\n        type: PlatformType.FixedSpeed;\r\n        max: number;\r\n      }\r\n    | {\r\n        type: PlatformType.Restriction;\r\n        /**\r\n         * 单曲/曲包/曲目表，主要是展示用\r\n         */\r\n        range: string | string[];\r\n      }\r\n    | {\r\n        type: PlatformType.Random;\r\n        range: string | string[];\r\n      };\r\n  reward?: WorldMapRewardData;\r\n}\r\n\r\nexport interface MapPlatform extends MapPlatformData {\r\n  reward?: WorldMapReward;\r\n}\r\n\r\nexport interface CurrentProgress {\r\n  level: number;\r\n  progress: number;\r\n}","import {\r\n  Chapter,\r\n  CurrentProgress,\r\n  MapPlatform,\r\n  NormalWorldMap,\r\n  NormalWorldMapData,\r\n  NormalWorldMapPlatforms,\r\n  RewardType,\r\n} from \"../models/world-mode\";\r\nimport { CharacterImageKind, CharacterIndex, CharacterStatus } from \"../models/character\";\r\nimport {\r\n  $AssetsResolver,\r\n  $CharacterService,\r\n  $ChartService,\r\n  $CoreDataService,\r\n  $Gateway,\r\n  $MusicPlayService,\r\n  $WorldModeService,\r\n  AssetsResolver,\r\n  CharacterService,\r\n  ChartService,\r\n  ChartStatistics,\r\n  CoreDataService,\r\n  Gateway,\r\n  InverseProgressSolution,\r\n  MapDistance,\r\n  MusicPlayService,\r\n  MusicPlayStatistics,\r\n  NextRewardInfo,\r\n  RemainingProgress,\r\n  WorldMapBonus,\r\n  WorldModeService,\r\n} from \"./declarations\";\r\nimport { SongIndex } from \"../models/music-play\";\r\nimport { indexBy } from \"../utils/collections\";\r\nimport { Injectable } from \"classic-di\";\r\nimport { inferRange, isInt } from \"../utils/math\";\r\nimport { once } from \"../utils/misc\";\r\nconst BASE_PROG = 2.5;\r\nconst BASE_BOOST = 27;\r\nconst POTENTIAL_FACTOR = 2.45;\r\nconst CHARACTER_FACTOR_RATIO = 50;\r\n@Injectable({\r\n  requires: [$CoreDataService, $ChartService, $MusicPlayService, $AssetsResolver, $Gateway, $CharacterService] as const,\r\n  implements: $WorldModeService,\r\n})\r\nexport class WorldModeServiceImpl implements WorldModeService {\r\n  itemImages = once(async () => {\r\n    const items = await this.core.getItemsData();\r\n    return Object.fromEntries(items.map((item) => [item.name, item.img]));\r\n  });\r\n  #songIndex: SongIndex | null = null;\r\n  constructor(\r\n    private readonly core: CoreDataService,\r\n    private readonly chart: ChartService,\r\n    private readonly music: MusicPlayService,\r\n    private readonly resolver: AssetsResolver,\r\n    private readonly gateway: Gateway,\r\n    private readonly character: CharacterService\r\n  ) {}\r\n\r\n  async getLongtermMaps(): Promise<Chapter[]> {\r\n    const chapters = await this.core.getWorldMapLongTerm();\r\n    const songIndex = await this.getSongIndex();\r\n    const characterIndex = await this.character.getCharacterIndex();\r\n    const items = await this.itemImages();\r\n    return chapters.map((c) => ({\r\n      ...c,\r\n      maps: c.maps.map((m) => this.withRewardImgs(items, m, songIndex, characterIndex)),\r\n    }));\r\n  }\r\n\r\n  async getEventMaps(): Promise<NormalWorldMap[]> {\r\n    const maps = await this.core.getWorldMapEvents();\r\n    const items = await this.itemImages();\r\n    const songIndex = await this.getSongIndex();\r\n    const characterIndex = await this.character.getCharacterIndex();\r\n    // TODO 只显示当前可用的活动图\r\n    return maps.map((m) => this.withRewardImgs(items, m, songIndex, characterIndex));\r\n  }\r\n\r\n  getMapRewards(map: NormalWorldMap): Partial<Record<RewardType, string[]>> {\r\n    const res: Partial<Record<RewardType, string[]>> = {};\r\n    const { platforms } = map;\r\n    for (const key in platforms) {\r\n      const platform = platforms[key];\r\n      if (!platform) {\r\n        continue;\r\n      }\r\n      const { reward } = platform;\r\n      if (!reward) {\r\n        continue;\r\n      }\r\n      (res[reward.type] ??= []).push(\r\n        reward.type === RewardType.Background || reward.type === RewardType.Item\r\n          ? reward.name\r\n          : reward.type === RewardType.Character\r\n          ? reward.name\r\n          : reward.name\r\n      );\r\n    }\r\n    return res;\r\n  }\r\n\r\n  computePlayResult(potential: number) {\r\n    return BASE_PROG + POTENTIAL_FACTOR * Math.sqrt(potential);\r\n  }\r\n\r\n  computeBasicProgress(step: number, potential: number): number {\r\n    return (this.computePlayResult(potential) * step) / CHARACTER_FACTOR_RATIO;\r\n  }\r\n\r\n  computeProgress(step: number, potential: number, bonus: WorldMapBonus | null): number {\r\n    let result = this.computeBasicProgress(step, potential);\r\n    if (bonus) {\r\n      if (bonus.type === \"legacy\") {\r\n        result *= bonus.fragment;\r\n        result *= bonus.stamina;\r\n      } else if (bonus.type === \"new\") {\r\n        if (bonus.x4) result *= 4;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  computeProgressRange(\r\n    map: NormalWorldMap,\r\n    currentProgress: CurrentProgress,\r\n    targetLevel: number\r\n  ): [min: number, max: number] {\r\n    let min = this.computeDistance(map, currentProgress, targetLevel, false).distance,\r\n      max = this.computeDistance(map, currentProgress, targetLevel, true).distance;\r\n    if (min) {\r\n      // 超出0.1保证进入格子\r\n      min += 0.1;\r\n    }\r\n    if (max) {\r\n      // 少0.1保证不过头\r\n      max -= 0.1;\r\n    }\r\n    return [min, max];\r\n  }\r\n\r\n  computeRemainingProgress(map: NormalWorldMap, currentProgress: CurrentProgress): RemainingProgress {\r\n    const { level: reachedLevel } = currentProgress;\r\n    const platforms = map.platforms;\r\n    let nextRewardData = null;\r\n    loop: for (let currentLevel = reachedLevel; currentLevel <= platforms.length; currentLevel++) {\r\n      const platform = platforms[currentLevel]!;\r\n      const { reward } = platform;\r\n      if (reward) {\r\n        switch (reward.type) {\r\n          case RewardType.Character:\r\n          case RewardType.Song:\r\n            nextRewardData = {\r\n              img: reward.img,\r\n              level: currentLevel,\r\n            };\r\n            break loop;\r\n        }\r\n      }\r\n    }\r\n    let nextReward: NextRewardInfo | null = null;\r\n    if (nextRewardData) {\r\n      const distance = this.computeDistance(map, currentProgress, nextRewardData.level, false);\r\n      nextReward = {\r\n        img: nextRewardData.img,\r\n        remaining: distance,\r\n      };\r\n    }\r\n    const totalDistance = this.computeDistance(map, currentProgress, platforms.length, true);\r\n    return {\r\n      nextReward,\r\n      total: totalDistance,\r\n    };\r\n  }\r\n\r\n  inversePlayResult(progress: number, step: number) {\r\n    return (progress * CHARACTER_FACTOR_RATIO) / step;\r\n  }\r\n\r\n  private inverseBasicProgress(progress: number, step: number, overflow: boolean): number {\r\n    const rootOfPotential = (this.inversePlayResult(progress, step) - BASE_PROG) / POTENTIAL_FACTOR;\r\n    if (rootOfPotential < 0) {\r\n      // 平方根为负数，进度必然超过\r\n      if (overflow) {\r\n        // 作为下限的时候，可以用0\r\n        return 0;\r\n      }\r\n      return NaN;\r\n    }\r\n    const potential = rootOfPotential ** 2;\r\n    return potential;\r\n  }\r\n\r\n  async inverseProgress(step: number, range: [low: number, high: number]): Promise<InverseProgressSolution[]> {\r\n    const chartStats = await this.chart.getStatistics();\r\n    const musicStats = await this.music.getStatistics();\r\n    const solutions: InverseProgressSolution[] = [];\r\n    const [low, high] = range;\r\n    // 无加成\r\n    solutions.push(this.solveProgressRange(step, range, chartStats, musicStats));\r\n    // 新图\r\n    {\r\n      const solution = this.solveProgressRange(step, [low / 4, high / 4], chartStats, musicStats);\r\n      solution.world = {\r\n        type: \"new\",\r\n        x4: true,\r\n      };\r\n      solutions.push(solution);\r\n    }\r\n    // 老图\r\n    // 体力倍数\r\n    for (const stamina of [2, 4, 6]) {\r\n      // 残片加成\r\n      for (const fragment of [1, 1.1, 1.25, 1.5]) {\r\n        const ratio = fragment * stamina;\r\n        const solution = this.solveProgressRange(step, [low / ratio, high / ratio], chartStats, musicStats);\r\n        solution.world = {\r\n          type: \"legacy\",\r\n          fragment,\r\n          stamina,\r\n        };\r\n        solutions.push(solution);\r\n      }\r\n    }\r\n    return solutions;\r\n  }\r\n\r\n  inverseConstantRange(playResult: number, score: number, step: number, progress: number): [number, number] | null {\r\n    if (!score) return null;\r\n    let min = -Infinity,\r\n      max = Infinity;\r\n    if (playResult) {\r\n      const base = Math.floor(playResult * 10);\r\n      min = (base * 10) / 100;\r\n      max = (base * 10 + 10) / 100;\r\n    }\r\n    if (step && progress) {\r\n      // TODO 验证实际显示的progress是截尾还是舍入\r\n      const [minProgress, maxProgress] = inferRange(progress, 1, false);\r\n      const [minStep, maxStep] = isInt(step) ? inferRange(step, 1, false) : [step, step]\r\n      const minPlayResult = this.inversePlayResult(minProgress, maxStep);\r\n      const maxPlayResult = this.inversePlayResult(maxProgress, minStep);\r\n      // 缩小范围\r\n      min = Math.max(min, minPlayResult);\r\n      max = Math.min(max, maxPlayResult);\r\n    }\r\n    if (!(isFinite(min) && isFinite(max))) return null;\r\n    return [this.inverseConstant(min, score), this.inverseConstant(max, score)];\r\n  }\r\n\r\n  inverseBeyondBoost(difference: number, score: number, raw?: boolean): number {\r\n    const potentialRoot = (difference - BASE_BOOST) / POTENTIAL_FACTOR;\r\n    if (potentialRoot < 0) {\r\n      return NaN;\r\n    }\r\n    const potential = potentialRoot ** 2;\r\n    return this.music.inverseConstant(potential, score, raw);\r\n  }\r\n\r\n  inverseCharacterExp(difference: number, score: number, raw?: boolean): number {\r\n    const potential = difference / 6;\r\n    return this.music.inverseConstant(potential, score, raw);\r\n  }\r\n\r\n  inferConstant(min: number, max: number): number[] {\r\n    const possible: number[] = [];\r\n    const min10 = Math.ceil(min * 10);\r\n    const max10 = Math.floor(max * 10);\r\n    for (let rating10 = min10; rating10 <= max10; rating10++) {\r\n      // level 7 以下最小单位为.5\r\n      if (rating10 >= 80 || rating10 % 5 === 0) {\r\n        possible.push(rating10 / 10);\r\n      }\r\n    }\r\n    return possible;\r\n  }\r\n\r\n  private async getSongIndex() {\r\n    return (this.#songIndex ??= indexBy(await this.chart.getSongData(), (s) => s.id));\r\n  }\r\n\r\n  private solveProgressRange(\r\n    step: number,\r\n    [low, high]: [number, number],\r\n    chartStats: ChartStatistics,\r\n    musicStats: MusicPlayStatistics\r\n  ): InverseProgressSolution {\r\n    const maximum = chartStats.maximumConstant;\r\n    const minimum = chartStats.minimumConstant;\r\n    const maximumPtt = musicStats.maximumSinglePotential;\r\n    const lowPtt = this.inverseBasicProgress(low, step, true);\r\n    const highPtt = Math.min(maximumPtt, this.inverseBasicProgress(high, step, false));\r\n    const solution: InverseProgressSolution = {\r\n      world: null,\r\n      highPtt,\r\n      lowPtt,\r\n      invalidMessage: null,\r\n      pmRange: false,\r\n    };\r\n    if (isNaN(highPtt)) {\r\n      solution.invalidMessage = \"无法降落，放置0分结算也会前进过头\";\r\n    } else if (lowPtt > maximumPtt) {\r\n      solution.invalidMessage = `PM最高定数${maximum}谱面也无法前进这么多`;\r\n    } else {\r\n      const minConstant = Math.max(minimum, this.music.computePMConstant(lowPtt, true));\r\n      const maxConstant = this.music.computePMConstant(highPtt, false);\r\n      if (maxConstant <= maximum && minConstant <= maxConstant) {\r\n        solution.pmRange = [minConstant, maxConstant];\r\n      }\r\n    }\r\n    return solution;\r\n  }\r\n\r\n  private findItemImage(name: string, itemImages: Record<string, string>): string {\r\n    const result = itemImages[name];\r\n    if (!result) {\r\n      return \"\";\r\n    }\r\n    return this.assets(new URL(result));\r\n  }\r\n\r\n  private withRewardImgs(\r\n    items: Record<string, string>,\r\n    map: NormalWorldMapData,\r\n    songIndex: SongIndex,\r\n    characterIndex: CharacterIndex\r\n  ): NormalWorldMap {\r\n    return {\r\n      ...map,\r\n      platforms: Object.entries(map.platforms)\r\n        .map<[number, MapPlatform | null | undefined]>(([key, value]) => {\r\n          const level = +key + 1;\r\n          if (!value) {\r\n            return [level, value];\r\n          }\r\n          if (!value.reward) {\r\n            return [level, { ...value, reward: undefined }];\r\n          }\r\n          const { reward } = value;\r\n          return [\r\n            level,\r\n            {\r\n              ...value,\r\n              reward: (() => {\r\n                const type = reward.type;\r\n                switch (reward.type) {\r\n                  case RewardType.Background:\r\n                    return reward;\r\n                  case RewardType.Character:\r\n                    return {\r\n                      ...reward,\r\n                      img: this.assets(\r\n                        this.resolver.resoveCharacterImage({\r\n                          id: reward.id,\r\n                          kind: CharacterImageKind.Icon,\r\n                          status: CharacterStatus.Initial,\r\n                        })\r\n                      ),\r\n                      name: characterIndex[reward.id]!.name.zh,\r\n                    };\r\n                  case RewardType.Item:\r\n                    return {\r\n                      type: RewardType.Item,\r\n                      count: reward.count,\r\n                      name: reward.name,\r\n                      img: this.findItemImage(reward.name, items)!,\r\n                    };\r\n                  case RewardType.Song:\r\n                    const song = songIndex[reward.id]!;\r\n                    if (!song) {\r\n                      debugger;\r\n                    }\r\n                    return {\r\n                      ...reward,\r\n                      img: this.assets(this.resolver.resolveCover(song.charts[2]!, song, false)),\r\n                      name: song.name,\r\n                    };\r\n                  default:\r\n                    throw new Error(`Unknown reward type: ${type}`);\r\n                }\r\n              })(),\r\n            },\r\n          ];\r\n        })\r\n        .reduce<NormalWorldMapPlatforms>(\r\n          (acc, [k, v], i) => {\r\n            acc[k] = v;\r\n            acc.length = i + 1;\r\n            return acc;\r\n          },\r\n          { length: 0 }\r\n        ),\r\n    };\r\n  }\r\n\r\n  private computeDistance(\r\n    map: NormalWorldMap,\r\n    currentProgress: CurrentProgress,\r\n    targetLevel: number,\r\n    overflow: boolean\r\n  ): MapDistance {\r\n    let distance = 0;\r\n    let { level: reachedLevel, progress } = currentProgress;\r\n    const { platforms } = map;\r\n    for (let currentLevel = reachedLevel; currentLevel <= targetLevel; currentLevel++) {\r\n      if (!overflow && currentLevel === targetLevel) {\r\n        break;\r\n      }\r\n      distance += currentLevel === reachedLevel ? progress : platforms[currentLevel]!.length;\r\n    }\r\n    return {\r\n      distance,\r\n    };\r\n  }\r\n\r\n  private inverseConstant(playResult: number, score: number) {\r\n    const potentialRoot = (playResult - BASE_PROG) / POTENTIAL_FACTOR;\r\n    if (potentialRoot < 0) return NaN;\r\n    return this.music.inverseConstant(potentialRoot ** 2, score, true);\r\n  }\r\n\r\n  private assets(url: URL): string {\r\n    return this.gateway.direct(url).href;\r\n  }\r\n}\r\n","import { Injectable } from \"classic-di\";\r\nimport { $CharacterService, $CoreDataService, CharacterService, CoreDataService } from \"./declarations\";\r\nimport { CharacterData, CharacterIndex } from \"../models/character\";\r\nimport { once } from \"../utils/misc\";\r\nimport { indexBy } from \"../utils/collections\";\r\n\r\n@Injectable({\r\n  requires: [$CoreDataService],\r\n  implements: $CharacterService,\r\n})\r\nexport class CharacterServiceImpl implements CharacterService {\r\n  constructor(private readonly core: CoreDataService) {}\r\n  getCharacterIndex = once(async (): Promise<CharacterIndex> => {\r\n    const characters = await this.getAllCharacters();\r\n    return indexBy(characters, (char) => char.id);\r\n  });\r\n\r\n  async getAllCharacters(): Promise<CharacterData[]> {\r\n    const json = await this.core.getCharacterData();\r\n    return json;\r\n  }\r\n}\r\n","import type {} from \"typed-query-selector\";\r\nimport \"./view/app\";\r\n","import { sheet } from \"./app.css.js\";\r\nimport { bootstrap, theme, viewTransition } from \"./styles\";\r\nimport { provide } from \"../services/di\";\r\nimport { NavBar } from \"./components/nav-bar\";\r\nimport { ChartServiceImpl } from \"../services/chart-data\";\r\nimport { MusicPlayServiceImpl } from \"../services/music-play\";\r\nimport { ProfileServiceImpl } from \"../services/player-profile\";\r\nimport { $Router, Router } from \"./pages/router\";\r\nimport { routes } from \"./pages\";\r\nimport { WorldModeServiceImpl } from \"../services/world-mode\";\r\nimport { element } from \"hyplate\";\r\nimport { Container } from \"classic-di\";\r\nimport { AssetsServiceImpl } from \"../services/assets\";\r\nimport { AssetsResolverImpl } from \"../services/assets-resolver\";\r\nimport { PreferenceServiceImpl } from \"../services/preference\";\r\nimport { ArcaeaToolbeltDatabaseContext } from \"../services/database\";\r\nimport { CharacterServiceImpl } from \"../services/character\";\r\nimport { ProxyGateway } from \"../services/gateway\";\r\nimport { AssetsCacheServiceImpl } from \"../services/assets-cache\";\r\nimport { CoreDataServiceImpl } from \"../services/core-data\";\r\nimport { CoreDataProviderImpl } from \"../services/core-data-provider.js\";\r\nimport { FileStorageServiceImpl } from \"../services/file-storage.js\";\r\ndocument.adoptedStyleSheets = [bootstrap, theme, viewTransition, sheet];\r\n\r\nconst ioc = new Container();\r\nioc.register(CharacterServiceImpl);\r\nioc.register(ArcaeaToolbeltDatabaseContext);\r\nioc.register(PreferenceServiceImpl);\r\nioc.register(AssetsCacheServiceImpl);\r\nioc.register(FileStorageServiceImpl);\r\nioc.register(ProxyGateway);\r\nioc.register(CoreDataServiceImpl);\r\nioc.register(CoreDataProviderImpl);\r\nioc.register(AssetsResolverImpl);\r\nioc.register(AssetsServiceImpl);\r\nioc.register(ChartServiceImpl);\r\nioc.register(MusicPlayServiceImpl);\r\nioc.register(ProfileServiceImpl);\r\nioc.register(WorldModeServiceImpl);\r\nconst main = element(\"main\");\r\nconst router = new Router(main, routes, routes[0]!);\r\nioc.add($Router, router);\r\nprovide(document.body, ioc);\r\n\r\ndocument.body.append(new NavBar(), main);\r\n","import icon from \"../../../favicon.ico\";\r\nimport moon from \"bootstrap-icons/icons/moon-fill.svg\";\r\nimport sun from \"bootstrap-icons/icons/sun.svg\";\r\nimport github from \"../../../assets/github.svg\";\r\nimport { bootstrap } from \"../../styles\";\r\nimport { sheet } from \"./style.css.js\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport { $Router, Router } from \"../../pages/router\";\r\nimport { clickElsewhere } from \"../../../utils/click-elsewhere\";\r\nimport { AutoRender, Component, HyplateElement, attr, computed, signal, subscribe } from \"hyplate\";\r\nimport { $PreferenceService, ColorTheme, PreferenceService } from \"../../../services/declarations\";\r\nimport { SVGIcon } from \"../svg-icon\";\r\nexport\r\n@Component({\r\n  tag: \"nav-bar\",\r\n  styles: [bootstrap, sheet],\r\n})\r\nclass NavBar extends HyplateElement {\r\n  @Inject($Router)\r\n  accessor router!: Router;\r\n  @Inject($PreferenceService)\r\n  accessor preference!: PreferenceService;\r\n\r\n  showMenu = signal(false);\r\n  activeRoute = signal(\"\");\r\n  theme = signal<ColorTheme>(\"light\");\r\n  override render() {\r\n    this.effect(() =>\r\n      subscribe(this.preference.signal(\"theme\"), (theme) => {\r\n        const documentElement = document.documentElement;\r\n        attr(documentElement, \"data-bs-theme\", theme);\r\n        attr(documentElement, \"data-theme\", theme);\r\n        this.theme.set(theme);\r\n      })\r\n    );\r\n    this.effect(() => clickElsewhere(this, () => this.showMenu.set(false)));\r\n    this.effect(() => this.router.subscribe((newRoute) => this.activeRoute.set(newRoute.path)));\r\n    return (\r\n      <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"#\" onClick={(e) => e.preventDefault()}>\r\n            <img src={icon} alt=\"Logo\" width=\"24\" height=\"24\" class=\"d-inline-block align-text-top\" />\r\n            {\" Arcaea Toolbelt \"}\r\n          </a>\r\n          <button class=\"navbar-toggler\" type=\"button\" onClick={this.toggleMenu}>\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" class:show={this.showMenu}>\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              {this.router.routes.map((route) => (\r\n                <li class=\"nav-item\" class:active={computed(() => this.activeRoute() === route.path)}>\r\n                  <a\r\n                    class=\"nav-link\"\r\n                    role=\"button\"\r\n                    href={`#${route.path}`}\r\n                    onClick={(e) => {\r\n                      if (!e.ctrlKey) {\r\n                        this.router.navigate(route);\r\n                        this.showMenu.set(false);\r\n                      }\r\n                    }}\r\n                  >\r\n                    {route.title}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <ul class=\"navbar-nav\">\r\n              <li class=\"nav-item\">\r\n                <AutoRender>\r\n                  {() => {\r\n                    const theme = this.theme();\r\n                    const src = theme === \"light\" ? sun : moon;\r\n                    const toggleThemeText = `切换${theme === \"light\" ? \"纷争\" : \"光芒\"}侧`;\r\n                    return (\r\n                      <button class=\"btn btn-link nav-link\" title={toggleThemeText} onClick={this.toggleTheme}>\r\n                        <SVGIcon src={src} role=\"img\"></SVGIcon>\r\n                        <span class=\"d-lg-none\">{toggleThemeText}</span>\r\n                      </button>\r\n                    );\r\n                  }}\r\n                </AutoRender>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"https://github.com/DarrenDanielDay/arcaea-toolbelt\" target=\"_blank\">\r\n                  <SVGIcon src={github} class=\"github-link\" role=\"img\" />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.showMenu.update((show) => !show);\r\n  };\r\n\r\n  toggleTheme = () => {\r\n    this.preference.update({\r\n      theme: this.theme() === \"light\" ? \"dark\" : \"light\",\r\n    });\r\n  };\r\n}\r\n","module.exports = new __parcel__URL__(\"favicon.cc7e02d3.ico\").toString();","module.exports = new __parcel__URL__(\"moon-fill.0c6ba28c.svg\").toString();","module.exports = new __parcel__URL__(\"sun.76263975.svg\").toString();","module.exports = new __parcel__URL__(\"github.891ff76f.svg\").toString();","import { create } from \"sheetly\";\nexport let text = \"button.nav-link{height:100%;display:flex;align-items:center;gap:.25em}svg{width:1em;height:1em;fill:var(--bs-body-color)}svg.github-link{width:1.5em;height:1.5em}\";\nexport const sheet = create(text, import.meta.url);\n","import type { CleanUpFunc } from \"hyplate/types\";\r\nimport { token } from \"classic-di\";\r\n\r\nexport interface Route {\r\n  cahce?: boolean;\r\n  path: string;\r\n  title: string;\r\n  setup(): Element;\r\n}\r\n\r\nexport interface NavigateConfig<T> {\r\n  query: T;\r\n  cache: boolean;\r\n}\r\n\r\ntype RouteChangeCallback = (newRoute: Route) => void;\r\n\r\nexport type QueryParams<P extends string> = {\r\n  [key in P]: string | undefined | null;\r\n};\r\n\r\nexport class Router {\r\n  private currentRoute: Route | null = null;\r\n  private caches: Record<string, object> = {};\r\n  private subscribers = new Set<RouteChangeCallback>();\r\n  constructor(\r\n    private readonly container: Element,\r\n    public readonly routes: Route[],\r\n    public readonly defaultRoute: Route\r\n  ) {\r\n    queueMicrotask(() => {\r\n      this.navigate(this.matchRoute(location.hash.slice(1)), {\r\n        query: this.parseQuery(),\r\n      });\r\n    });\r\n  }\r\n\r\n  matchRoute(path: string): Route {\r\n    return this.routes.find((r) => r.path === path) || this.defaultRoute;\r\n  }\r\n\r\n  parseQuery<P extends string>(url: URL = this.getURL()): Partial<QueryParams<P>> {\r\n    const search: Partial<QueryParams<P>> = {};\r\n    url.searchParams.forEach((value, key) => {\r\n      Reflect.set(search, key, value);\r\n    });\r\n    return search;\r\n  }\r\n\r\n  updateLocation(url: URL) {\r\n    history.replaceState({}, \"\", url);\r\n  }\r\n\r\n  getURL() {\r\n    return new URL(location.href);\r\n  }\r\n\r\n  updateSearchParams(url: URL, search?: object) {\r\n    for (const key in search) {\r\n      const value = Reflect.get(search, key);\r\n      if (value != null) {\r\n        url.searchParams.set(key, `${value}`);\r\n      } else {\r\n        url.searchParams.delete(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateQuery<P extends string>(search?: Partial<QueryParams<P>>) {\r\n    const url = this.getURL();\r\n    this.updateSearchParams(url, search);\r\n    this.updateLocation(url);\r\n  }\r\n\r\n  navigate<T extends object>(route: Route, config?: Partial<NavigateConfig<T>>) {\r\n    const url = this.getURL();\r\n    const currentRoute = this.currentRoute;\r\n    if (currentRoute && (config?.cache ?? currentRoute.cahce)) {\r\n      this.caches[currentRoute.path] = this.parseQuery(url);\r\n    }\r\n    const newURL = new URL(url.pathname, url.origin);\r\n    newURL.hash = route.path;\r\n    this.updateSearchParams(newURL, config?.query ?? this.caches[route.path]);\r\n    this.updateLocation(newURL);\r\n    this.currentRoute = route;\r\n    this.container.innerHTML = \"\";\r\n    this.container.appendChild(route.setup());\r\n    this.dispatchChanges(route);\r\n  }\r\n\r\n  private dispatchChanges(route: Route) {\r\n    for (const subscriber of [...this.subscribers]) {\r\n      subscriber(route);\r\n    }\r\n  }\r\n\r\n  subscribe(subscriber: RouteChangeCallback): CleanUpFunc {\r\n    this.subscribers.add(subscriber);\r\n    return () => {\r\n      this.subscribers.delete(subscriber);\r\n    };\r\n  }\r\n}\r\n\r\nexport const $Router = token<Router>(\"router\");\r\n","import { Future, clone, element } from \"hyplate\";\r\nimport { SVGSVGElementAttributes } from \"hyplate/types\";\r\n\r\ntype SVGIconProps = JSX.JSXAttributes<SVGSVGElementAttributes, SVGSVGElement> & {\r\n  src: string;\r\n};\r\n\r\nconst memorySVGCache = new Map<string, Promise<SVGSVGElement>>();\r\n\r\nconst fetchSVG = async (src: string) => {\r\n  const response = await fetch(src);\r\n  const svg = await response.text();\r\n  const template = element(\"template\");\r\n  template.innerHTML = svg;\r\n  const el = template.content.firstElementChild;\r\n  // await delay(400000);\r\n  if (!(el instanceof SVGSVGElement)) throw new Error(\"Invalid SVG URL.\");\r\n  return el;\r\n};\r\n\r\nconst getSVG = async (src: string) => {\r\n  const cached = memorySVGCache.get(src);\r\n  if (cached) {\r\n    return clone(await cached);\r\n  }\r\n  const promise = fetchSVG(src);\r\n  memorySVGCache.set(src, promise);\r\n  const newEl = await promise;\r\n  return newEl;\r\n};\r\n\r\nexport const SVGIcon = ({ src, ...props }: SVGIconProps) => {\r\n  const { width, height } = props;\r\n  const fallback =\r\n    width && height ? <div style={`display: inline-block; width: ${width}px; height: ${height}px;`}></div> : undefined;\r\n  return (\r\n    <Future promise={getSVG(src)} fallback={fallback}>\r\n      {(el) => {\r\n        return <svg ref={el} {...props}></svg>;\r\n      }}\r\n    </Future>\r\n  );\r\n};\r\n","import { AboutRoute } from \"./about\";\r\nimport { AddResultRoute } from \"./add-result\";\r\nimport { ConstantToolsRoute } from \"./constant-tools\";\r\nimport { PlayerB30Route } from \"./player-b39\";\r\nimport { ProfileRoute } from \"./profile\";\r\nimport { ChartsRoute } from \"./query-charts\";\r\nimport { Route } from \"./router\";\r\nimport { WorldModeRoute } from \"./world-mode\";\r\n\r\nexport const routes: Route[] = [\r\n  ProfileRoute,\r\n  AddResultRoute,\r\n  PlayerB30Route,\r\n  ChartsRoute,\r\n  WorldModeRoute,\r\n  ConstantToolsRoute,\r\n  AboutRoute,\r\n];\r\n","import icon from \"../../../favicon.ico\";\r\nimport { Component, Future, HyplateElement, signal } from \"hyplate\";\r\nimport { bootstrap } from \"../../styles\";\r\nimport { Route } from \"../router\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport {\r\n  $ChartService,\r\n  ChartService,\r\n  $MusicPlayService,\r\n  MusicPlayService,\r\n  $ProfileService,\r\n  ProfileService,\r\n  ChartStatistics,\r\n  MusicPlayStatistics,\r\n  $AssetsService,\r\n  AssetsService,\r\n  PreferenceService,\r\n  $PreferenceService,\r\n  AssetsCacheService,\r\n  $AssetsCacheService,\r\n  $CoreDataService,\r\n  CoreDataService,\r\n} from \"../../../services/declarations\";\r\nimport { Best30YukiChan } from \"../../components/b30-yukichan\";\r\nimport { FancyDialog, alert, confirm } from \"../../components/fancy-dialog\";\r\nimport { B30Response } from \"../../../models/profile\";\r\nimport { JSXChildNode } from \"hyplate/types\";\r\nimport { HelpTip } from \"../../components/help-tip\";\r\nimport { formatSize } from \"../../../utils/format\";\r\nimport { ArcaeaToolbeltMeta } from \"../../../models/misc\";\r\n~HelpTip;\r\nexport const AboutRoute: Route = {\r\n  path: \"/about\",\r\n  title: \"关于\",\r\n  setup() {\r\n    return new About();\r\n  },\r\n};\r\n\r\n@Component({\r\n  tag: \"about-arcaea-toolbelt\",\r\n  styles: [bootstrap],\r\n})\r\nclass About extends HyplateElement {\r\n  @Inject($CoreDataService)\r\n  accessor core!: CoreDataService;\r\n  @Inject($AssetsCacheService)\r\n  accessor assetsCache!: AssetsCacheService;\r\n  @Inject($AssetsService)\r\n  accessor assets!: AssetsService;\r\n  @Inject($ChartService)\r\n  accessor chart!: ChartService;\r\n  @Inject($MusicPlayService)\r\n  accessor musicPlay!: MusicPlayService;\r\n  @Inject($ProfileService)\r\n  accessor profile!: ProfileService;\r\n  @Inject($PreferenceService)\r\n  accessor preference!: PreferenceService;\r\n\r\n  b30Dialog = new FancyDialog();\r\n  b30Panel = new Best30YukiChan();\r\n\r\n  override render() {\r\n    return <Future promise={this.init()}>{(args) => this._render(...args)}</Future>;\r\n  }\r\n\r\n  _render(\r\n    meta: ArcaeaToolbeltMeta,\r\n    chartStats: ChartStatistics,\r\n    musicPlayStats: MusicPlayStatistics,\r\n    maxB30: B30Response,\r\n    baseB30: B30Response,\r\n    freeB30: B30Response\r\n  ) {\r\n    const COMMIT_SHA = process.env.COMMIT_SHA;\r\n    const maxPotentialStats: Parameters<About[\"renderMaxPtt\"]>[] = [\r\n      [\"理论最大潜力值\", musicPlayStats.maximumPotential, maxB30],\r\n      [\"仅基础包（Arcaea）最大潜力值\", baseB30.maxPotential, baseB30],\r\n      [\r\n        <>\r\n          无氪<help-tip>仅考虑{this.chart.freePacks.join(\"、\")}曲包</help-tip>最大潜力值\r\n        </>,\r\n        freeB30.maxPotential,\r\n        freeB30,\r\n      ],\r\n    ];\r\n    return (\r\n      <div class=\"m-3\">\r\n        <h2>关于 Arcaea Toolbelt</h2>\r\n        <div>\r\n          <img src={icon}></img>\r\n        </div>\r\n        <p>\r\n          commit SHA: <span title={COMMIT_SHA}>{COMMIT_SHA?.slice(0, 8)}</span>\r\n        </p>\r\n        <p>数据更新时间：{new Date(meta.time).toLocaleString()}</p>\r\n        <p>\r\n          Arcaea版本: {meta.version}{\" \"}\r\n          <a target=\"_blank\" href={meta.apk}>\r\n            下载链接\r\n          </a>{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://webapi.lowiro.com/webapi/serve/static/bin/arcaea/apk\"\r\n            referrerpolicy=\"no-referrer\"\r\n          >\r\n            获取最新版本\r\n          </a>\r\n        </p>\r\n        <h3>统计信息</h3>\r\n        <h4>潜力值统计</h4>\r\n        {maxPotentialStats.map((args) => this.renderMaxPtt(...args))}\r\n        <h4>谱面统计</h4>\r\n        <div>\r\n          {Object.entries(chartStats.difficulties).map(([difficulty, { count, notes }]) => {\r\n            return (\r\n              <div>\r\n                <strong style:color={`var(--${difficulty})`}>{difficulty.toUpperCase()}</strong>:{count}个谱面，总物量\r\n                {notes}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h3>杂项</h3>\r\n        <div class=\"my-3\">\r\n          <button\r\n            class=\"btn btn-outline-danger\"\r\n            onClick={async () => {\r\n              const byteSize = await this.assetsCache.cacheUsage();\r\n              if (await confirm(<div>当前图片缓存占用空间为{formatSize(byteSize)}，是否确认全部清除？</div>)) {\r\n                await this.assetsCache.clearCache();\r\n                alert(\"图片缓存清除完毕。\");\r\n              }\r\n            }}\r\n          >\r\n            清除图片缓存\r\n          </button>\r\n          <help-tip class=\"mx-2\">\r\n            <p>为了减少重复的图片下载带来的体验不佳问题，一些图片（主要是曲绘）会在下载后缓存在浏览器内。</p>\r\n            <p>如果这些图片占用了过多的存储空间，您可以在此清空他们。本工具再次需要这些图片时，将会重新下载他们。</p>\r\n          </help-tip>\r\n        </div>\r\n        <div class=\"form-check form-switch my-3\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"use-gh-proxy\"\r\n            onChange={async () => {\r\n              this.preference.update({ ghproxy: !(await this.preference.get()).ghproxy });\r\n            }}\r\n            checked={this.preference.signal(\"ghproxy\")}\r\n          />\r\n          <label class=\"form-check-label\" for=\"use-gh-proxy\">\r\n            使用ghproxy加速\r\n            <help-tip class=\"mx-2\">\r\n              <p>\r\n                代理内容主要是Arcaea相关图片资源，以及本工具所必须的数据，ghproxy代理不一定稳定，目前默认是github.io直接访问。\r\n              </p>\r\n              <p>此设置与跨站脚本工具不互通。</p>\r\n            </help-tip>\r\n          </label>\r\n        </div>\r\n        <div class=\"form-check form-switch my-3\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"show-max-minus\"\r\n            onChange={async () => {\r\n              const { showMaxMinus } = await this.preference.get();\r\n              await this.preference.update({ showMaxMinus: !showMaxMinus });\r\n            }}\r\n            checked={this.preference.signal(\"showMaxMinus\")}\r\n          />\r\n          <label class=\"form-check-label\" for=\"use-gh-proxy\">\r\n            显示小P\r\n            <help-tip class=\"mx-2\">\r\n              <p>\r\n                开启后，在成绩卡片内，若成绩有判定信息，在Pure数量后将会显示小P数量（-小P数，不开启时是+大P数）。如果所有的Pure都是大P，则会显示Max（但不一定是理论值）。\r\n              </p>\r\n              <p>此设置与跨站脚本工具不互通。</p>\r\n            </help-tip>\r\n          </label>\r\n        </div>\r\n        <h3>问题反馈</h3>\r\n        <div>\r\n          <p>\r\n            如果您在使用本工具时遇到问题，欢迎提交\r\n            <a href=\"https://github.com/DarrenDanielDay/arcaea-toolbelt/issues\" target=\"_blank\">\r\n              issues\r\n            </a>\r\n            进行反馈。\r\n          </p>\r\n        </div>\r\n        {this.b30Dialog}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async init() {\r\n    const meta = await this.core.getMetaData();\r\n    const chartStats = await this.chart.getStatistics();\r\n    const musicPlayStats = await this.musicPlay.getStatistics();\r\n    const profile = await this.profile.generateMaxProfile();\r\n    const maxB30 = await this.profile.b30(profile);\r\n    const baseB30 = await this.profile.b30(profile, { packs: this.chart.freePacks.slice(0, 1) });\r\n    const freeB30 = await this.profile.b30(profile, { packs: this.chart.freePacks });\r\n    return [meta, chartStats, musicPlayStats, maxB30, baseB30, freeB30] as const;\r\n  }\r\n\r\n  renderMaxPtt(info: JSXChildNode, potential: number, b30: B30Response) {\r\n    const normalizedPotential = potential.toFixed(4);\r\n    return (\r\n      <div>\r\n        <div>\r\n          {/* 最大潜力值一定是0.1 / 40 = 0.0025的倍数，因此最多只有4位小数 */}\r\n          {info}：{normalizedPotential}\r\n        </div>\r\n        <div style=\"display: flex; align-items: center;\">\r\n          <potential-badge potential={+normalizedPotential}></potential-badge>\r\n          <button class=\"btn btn-secondary mx-3\" onClick={() => this.showB30(b30)}>\r\n            b30\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showB30(b30: B30Response) {\r\n    this.b30Panel.b30.set(b30);\r\n    this.b30Dialog.showAlert(<div var:inner-width=\"800px\">{this.b30Panel}</div>);\r\n  }\r\n}\r\n","import { sheet } from \"./style.css.js\";\r\nimport { ResultCard } from \"../result-card\";\r\nimport { B30Response, BestResultItem } from \"../../../models/profile\";\r\nimport { Component, HyplateElement, Show, cssVar, signal } from \"hyplate\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport {\r\n  $AssetsResolver,\r\n  $AssetsService,\r\n  $ChartService,\r\n  $PreferenceService,\r\n  AssetsResolver,\r\n  AssetsService,\r\n  ChartService,\r\n  ColorTheme,\r\n  PreferenceService,\r\n} from \"../../../services/declarations\";\r\n\r\nconst renderB30 = (response: B30Response) => {\r\n  const { queryTime, b30, b31_39, b30Average, maxPotential, minPotential, potential, r10Average, username } = response;\r\n  const now = new Date(queryTime);\r\n  const renderBest = (best: BestResultItem) => {\r\n    const card = new ResultCard();\r\n    card.setChart(best.song, best.chart);\r\n    card.setBest(best.no);\r\n    card.setResult(best.note, best.score, best.clear);\r\n    card.setPlayTime(best.date ?? null);\r\n    card.setNow(now);\r\n    return card;\r\n  };\r\n  return (\r\n    <div class=\"card\" part=\"b30-result-card\">\r\n      <div class=\"mask\">\r\n        <div class=\"row\">\r\n          <div class=\"c8\">\r\n            <div class=\"username\">\r\n              {username} ({potential})\r\n            </div>\r\n            <div class=\"details\">\r\n              B30Avg={b30Average.toFixed(4)} R10Avg={r10Average.toFixed(4)} Ptt Range [{minPotential.toFixed(4)},{\" \"}\r\n              {maxPotential.toFixed(4)}]\r\n            </div>\r\n          </div>\r\n          <div class=\"c4\">\r\n            <div class=\"banner\">Player Best30</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"divider\"></div>\r\n        <div class=\"b30\">\r\n          <div class=\"card-list best-1-10\">{b30.slice(0, 10).map(renderBest)}</div>\r\n          <div class=\"card-list best-11-20\">{b30.slice(10, 20).map(renderBest)}</div>\r\n          <div class=\"card-list best-21-30\">{b30.slice(20, 30).map(renderBest)}</div>\r\n        </div>\r\n        <div class=\"divider\"></div>\r\n        <div class=\"b39\">\r\n          <div class=\"card-list best-31-33\">{b31_39.slice(0, 3).map(renderBest)}</div>\r\n          <div class=\"card-list best-34-36\">{b31_39.slice(3, 6).map(renderBest)}</div>\r\n          <div class=\"card-list best-37-39\">{b31_39.slice(6, 9).map(renderBest)}</div>\r\n        </div>\r\n        <div class=\"footer\">\r\n          <div>\r\n            Generated by Arcaea Toolbelt@YukiChan -RESURRECTION-{\" \"}\r\n            <time datetime={now.toISOString()}>{now.toLocaleString()}</time>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport\r\n@Component({\r\n  tag: \"best-30-yukichan\",\r\n  styles: [sheet],\r\n})\r\nclass Best30YukiChan extends HyplateElement {\r\n  @Inject($ChartService)\r\n  accessor chart!: ChartService;\r\n  @Inject($AssetsResolver)\r\n  accessor resolver!: AssetsResolver;\r\n  @Inject($AssetsService)\r\n  accessor assets!: AssetsService;\r\n  @Inject($PreferenceService)\r\n  accessor preference!: PreferenceService;\r\n\r\n  b30 = signal<B30Response | null>(null);\r\n  hd = signal(false);\r\n  override render() {\r\n    this.autorun(() => {\r\n      const b30 = this.b30();\r\n      const hd = this.hd();\r\n      const theme = this.preference.signal(\"theme\")();\r\n      if (b30) {\r\n        this.#updateBg(hd, theme);\r\n        this.#updateResultCards(hd);\r\n      }\r\n    });\r\n    return <Show when={this.b30}>{(response) => renderB30(response)}</Show>;\r\n  }\r\n\r\n  getExportNode() {\r\n    const node = this.shadowRoot.querySelector(\".card\");\r\n    return node instanceof HTMLElement ? node : null;\r\n  }\r\n\r\n  #updateResultCards(hd: boolean) {\r\n    const node = this.getExportNode();\r\n    if (!node) return;\r\n    cssVar(node, \"inner-width\", hd ? `${(800 * 1000) / 240}` : null);\r\n    node.querySelectorAll<ResultCard>(\"result-card\").forEach((card) => {\r\n      card.setHD(hd);\r\n    });\r\n  }\r\n\r\n  async #updateBg(hd: boolean, theme: ColorTheme) {\r\n    const index = await this.chart.getSongIndex();\r\n    const song = theme === \"dark\" ? index[\"odysseia\"]! : index[\"lovelessdress\"]!;\r\n    const chart = song.charts[2]!;\r\n    const url = await this.assets.getAssets(this.resolver.resolveCover(chart, song, hd));\r\n    const card = this.getExportNode();\r\n    card!.style.backgroundImage = `url(\"${url}\")`;\r\n  }\r\n}\r\n","import { create } from \"sheetly\";\nexport let text = \":host{background-color:transparent}.b30,.b39{display:grid;grid-template-columns:repeat(3,1fr);gap:8px;justify-content:space-around}result-card{width:240px}.card{transform:scale(calc(var(--inner-width,800)/ 800));transform-origin:0 0;background-repeat:no-repeat;background-position:30% 0;background-size:cover;box-sizing:border-box;width:800px;border:1px solid var(--bs-border-color);border-radius:16px}.mask{padding:16px 31px;border-radius:16px;backdrop-filter:blur(4px);-webkit-backdrop-filter:blur(4px)}.banner,.username{font-weight:600;font-size:30px}.card-list{display:flex;flex-direction:column;gap:8px}.row{display:flex}.c8{width:66.67%}.c4{width:33.33%}.divider{border-top:1px solid var(--bs-border-color);margin:16px 0}.footer{height:32px;display:flex;justify-content:center;align-items:flex-end}.footer,time{word-break:keep-all;white-space:nowrap}\";\nexport const sheet = create(text, import.meta.url);\n","import help from \"../../../assets/help.svg\";\r\nimport { sheet } from \"./style.css.js\";\r\nimport { sheet as dialogSheet } from \"../fancy-dialog/style.css.js\";\r\nimport { Component, HyplateElement, element } from \"hyplate\";\r\nimport type { GlobalAttributes } from \"hyplate/types\";\r\nimport { bootstrap } from \"../../styles\";\r\nimport { SVGIcon } from \"../svg-icon\";\r\n\r\nexport interface HelpTipProps {}\r\n\r\nexport\r\n@Component({\r\n  tag: \"help-tip\",\r\n  styles: [bootstrap, sheet, dialogSheet],\r\n})\r\nclass HelpTip extends HyplateElement {\r\n  dialog = element(\"dialog\");\r\n  override render() {\r\n    return (\r\n      <div>\r\n        <SVGIcon src={help} onClick={() => this.dialog.showModal()} />\r\n        <dialog ref={this.dialog}>\r\n          <div class=\"modal-root\" part=\"modal-root\">\r\n            <div class=\"modal-content mb-3\">\r\n              <slot></slot>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-primary\" onClick={() => this.dialog.close()}>\r\n                了解\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      \"help-tip\": JSXAttributes<HelpTipProps & GlobalAttributes, HelpTip>;\r\n    }\r\n  }\r\n}\r\n","module.exports = new __parcel__URL__(\"help.c57e4871.svg\").toString();","import { create } from \"sheetly\";\nexport let text = \":host>div{display:inline-block;width:1em;height:1em;cursor:pointer}svg{fill:var(--bs-body-color)}\";\nexport const sheet = create(text, import.meta.url);\n","import { AutoRender, Component, HyplateElement, Show, signal } from \"hyplate\";\r\nimport { $MusicPlayService, $ProfileService, MusicPlayService, ProfileService } from \"../../../services/declarations\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport { PlayResultForm } from \"../../components/play-result-form\";\r\nimport { bootstrap } from \"../../styles\";\r\nimport { Route } from \"../router\";\r\nimport { ResultCard } from \"../../components/result-card\";\r\nimport { PlayResult } from \"../../../models/music-play\";\r\nimport { confirm } from \"../../components/fancy-dialog\";\r\nimport { getNow } from \"../../../utils/time\";\r\nimport { isSafari } from \"../../../utils/browser\";\r\n\r\n@Component({\r\n  tag: \"chart-potential\",\r\n  styles: [bootstrap],\r\n})\r\nclass ChartPotentialPage extends HyplateElement {\r\n  @Inject($ProfileService)\r\n  accessor profileService!: ProfileService;\r\n  @Inject($MusicPlayService)\r\n  accessor musicPlay!: MusicPlayService;\r\n\r\n  form = new PlayResultForm();\r\n  existingResultCard = new ResultCard();\r\n  currentResult = signal<PlayResult | null>(null);\r\n  override render() {\r\n    this.autorun(() => {\r\n      const selected = this.form.chartSelect.selectedItem();\r\n      if (!selected) {\r\n        this.currentResult.set(null);\r\n        return;\r\n      }\r\n      const { chart } = selected;\r\n      this.profileService.getProfile().then((profile) => {\r\n        const best = profile?.best?.[chart.id];\r\n        this.currentResult.set(best ?? null);\r\n        this.existingResultCard.setPlayResult(best ?? null);\r\n        this.existingResultCard.setNow(getNow());\r\n      });\r\n    });\r\n    return (\r\n      <>\r\n        {this.form}\r\n        <div class=\"m-3\">\r\n          <button type=\"button\" class=\"btn btn-primary\" name=\"add-result\" onClick={this.addResult}>\r\n            添加成绩\r\n          </button>\r\n        </div>\r\n        <Show when={this.currentResult}>\r\n          {(result) => {\r\n            return (\r\n              <div class=\"m-3\">\r\n                <div class=\"my-2\">\r\n                  <p>已有成绩：</p>\r\n                  {this.existingResultCard}\r\n                </div>\r\n                <div class=\"my-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-danger\"\r\n                    name=\"add-result\"\r\n                    onClick={() => this.removeResult(result)}\r\n                  >\r\n                    删除成绩\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          }}\r\n        </Show>\r\n      </>\r\n    );\r\n  }\r\n\r\n  addResult = async () => {\r\n    const res = this.form.getPlayResult();\r\n    if (res) {\r\n      await this.profileService.addResult(res);\r\n      this.currentResult.set(res);\r\n      this.existingResultCard.setPlayResult(res);\r\n      this.existingResultCard.setNow(getNow());\r\n      if (isSafari) {\r\n        return;\r\n      }\r\n      this.form.chartSelect.searchInput.focus();\r\n    }\r\n  };\r\n\r\n  removeResult = async (result: PlayResult) => {\r\n    if (!(await confirm(\"确认删除此谱面成绩？\"))) {\r\n      return;\r\n    }\r\n    await this.profileService.removeResult(result.chartId);\r\n    this.currentResult.set(null);\r\n    if (isSafari) {\r\n      return;\r\n    }\r\n    this.form.chartSelect.searchInput.focus();\r\n  };\r\n}\r\n\r\nexport const AddResultRoute: Route = {\r\n  path: \"/chart-ptt\",\r\n  title: \"单曲ptt\",\r\n  setup() {\r\n    return new ChartPotentialPage();\r\n  },\r\n};\r\n","import { input } from \"../../../utils/component\";\r\nimport { ResultCard } from \"../result-card\";\r\nimport { SearchSelect } from \"../search-select\";\r\nimport { bootstrap } from \"../../styles\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport {\r\n  $ChartService,\r\n  $MusicPlayService,\r\n  ChartService,\r\n  MusicPlayService,\r\n  SearchResult,\r\n} from \"../../../services/declarations\";\r\nimport {\r\n  ClearRank,\r\n  NoteResult,\r\n  PartnerClearRank,\r\n  PlayResult,\r\n  PlayerInputType,\r\n  ScoreResult,\r\n  Side,\r\n} from \"../../../models/music-play\";\r\nimport { Component, HyplateElement, cssVar, element, listen } from \"hyplate\";\r\nimport { addSheet } from \"sheetly\";\r\nimport { sheet } from \"./style.css.js\";\r\nimport type { AttachFunc, Rendered } from \"hyplate/types\";\r\nimport { getDateFromDatetimeLocal, getNow, setDateToDatetimeLocal } from \"../../../utils/time\";\r\n\r\nexport\r\n@Component({\r\n  tag: \"play-result-form\",\r\n  styles: [bootstrap],\r\n})\r\nclass PlayResultForm extends HyplateElement {\r\n  @Inject($ChartService)\r\n  accessor chartService!: ChartService;\r\n  @Inject($MusicPlayService)\r\n  accessor musicPlayService!: MusicPlayService;\r\n\r\n  form = element(\"form\");\r\n  far = input();\r\n  lost = input();\r\n  perfect = input();\r\n  score = input();\r\n  clear = element(\"select\");\r\n  playTime = input();\r\n  card = new ResultCard();\r\n  chartSelect = new SearchSelect<SearchResult>(\r\n    (result) => {\r\n      const {\r\n        song: { alias, pack, side },\r\n        cover,\r\n        chart: { note, designer },\r\n        constant,\r\n        bpm,\r\n        difficulty,\r\n        title,\r\n      } = result;\r\n      return (\r\n        <>\r\n          <img class=\"cover\" src={cover} loading=\"lazy\" var:color-side={`var(--side-${Side[side].toLowerCase()})`} />\r\n          <div class=\"details\">\r\n            <div class=\"column\">\r\n              <span class=\"notes\">{note}</span>\r\n              <span class=\"constant\" style={`background-color: var(--${difficulty})`}>\r\n                {constant.toFixed(1)}\r\n              </span>\r\n              <span class=\"bpm\">♩ = {bpm}</span>\r\n            </div>\r\n            <div class=\"column\">\r\n              <div class=\"info-row\">\r\n                <span class=\"pack-name\">曲包：{pack}</span>\r\n                <span class=\"chart-designer\">谱面设计：{designer}</span>\r\n              </div>\r\n              <span class=\"song-name\">{title}</span>\r\n              <span class=\"alias\">{alias.join(\" \")}</span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    },\r\n    async (text) => {\r\n      const results = await this.chartService.searchChart(text);\r\n      // 避免一次性加载过多图片\r\n      if (results.length > 10) {\r\n        return results.slice(0, 10);\r\n      }\r\n      return results;\r\n    },\r\n    (item) => item.chart.id\r\n  );\r\n\r\n  override mount(attach?: AttachFunc | undefined): Rendered<this> {\r\n    const rendered = super.mount(attach);\r\n    this.chartSelect.searchInput.placeholder = \"输入搜索谱面，支持别称（例如：骨折光）\";\r\n    addSheet(sheet, this.chartSelect.shadowRoot);\r\n    return rendered;\r\n  }\r\n\r\n  override render() {\r\n    this.effect(() => {\r\n      const formEvents = listen(this.form);\r\n      const unsubscribeChange = formEvents(\"change\", (e) => this.handleFormChange(e));\r\n      const unsubscribeSubmit = formEvents(\"submit\", (e) => e.preventDefault());\r\n      this.handleTypeChange(\"detailed\");\r\n      this.updateCardSize();\r\n      return () => {\r\n        unsubscribeChange();\r\n        unsubscribeSubmit();\r\n      };\r\n    });\r\n    return (\r\n      <div class=\"m-3\">\r\n        <form ref={this.form}>\r\n          <div class=\"row my-2\">\r\n            <div class=\"col\">{this.chartSelect}</div>\r\n          </div>\r\n          <div class=\"mx-3\">\r\n            <div>对于成绩信息……</div>\r\n            <div class=\"row my-2\">\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"type\" id=\"detailed\" value=\"detailed\" checked />\r\n                <label class=\"form-check-label\" for=\"detailed\">\r\n                  有大P的详细成绩信息（如bot生成b30）\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"row my-2\">\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"type\" id=\"screenshot\" value=\"screenshot\" />\r\n                <label class=\"form-check-label\" for=\"screenshot\">\r\n                  有游戏内成绩截图但没显示大P\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"row my-2\">\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"type\" id=\"score-only\" value=\"score-only\" />\r\n                <label class=\"form-check-label\" for=\"score-only\">\r\n                  只知道分数（好友/世界榜可查看）\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row my-2\">\r\n            <div class=\"col-2\">\r\n              <label for=\"perfect\" class=\"col-form-label\">\r\n                大P\r\n              </label>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <input ref={this.perfect} type=\"number\" class=\"form-control\" id=\"perfect\" name=\"perfect\" min=\"0\" />\r\n            </div>\r\n            <div class=\"col-1\">\r\n              <label for=\"far\" class=\"col-form-label\">\r\n                Far\r\n              </label>\r\n            </div>\r\n            <div class=\"col-2\">\r\n              <input ref={this.far} type=\"number\" class=\"form-control\" id=\"far\" name=\"far\" min=\"0\" />\r\n            </div>\r\n            <div class=\"col-1\">\r\n              <label for=\"lost\" class=\"col-form-label\">\r\n                Lost\r\n              </label>\r\n            </div>\r\n            <div class=\"col-2\">\r\n              <input ref={this.lost} type=\"number\" class=\"form-control\" id=\"lost\" name=\"lost\" min=\"0\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"row my-2\">\r\n            <div class=\"col-2\">\r\n              <label for=\"score\" class=\"col-form-label\">\r\n                分数\r\n              </label>\r\n            </div>\r\n            <div class=\"col\">\r\n              <input ref={this.score} type=\"number\" class=\"form-control\" id=\"score\" name=\"score\" min=\"0\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"row my-2\">\r\n            <div class=\"col-auto\">\r\n              <label for=\"clear\" class=\"col-form-label\">\r\n                通关类型（看搭档）\r\n              </label>\r\n            </div>\r\n            <div class=\"col\">\r\n              <select ref={this.clear} class=\"form-select\" name=\"clear\" id=\"clear\">\r\n                <option value=\"\">不知道</option>\r\n                <option value=\"HC\">Hard Clear</option>\r\n                <option value=\"NC\">Normal Clear</option>\r\n                <option value=\"EC\">Easy Clear</option>\r\n                <option value=\"TL\">Track Lost</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"row my-2\">\r\n            <div class=\"col-auto\">\r\n              <label for=\"play-time\" class=\"col-form-label\">\r\n                游玩时间（可选）\r\n              </label>\r\n            </div>\r\n            <div class=\"col\">\r\n              <input\r\n                ref={this.playTime}\r\n                type=\"datetime-local\"\r\n                class=\"form-control\"\r\n                id=\"play-time\"\r\n                name=\"play-time\"\r\n                step={1}\r\n              />\r\n            </div>\r\n            <div class=\"col\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary\"\r\n                onClick={() => {\r\n                  setDateToDatetimeLocal(this.playTime, getNow());\r\n                  this.playTime.dispatchEvent(new Event(\"change\", { bubbles: true }));\r\n                }}\r\n              >\r\n                现在\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"my-2\">\r\n            <p>谱面成绩预览：</p>\r\n            {this.card}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPlayResult(): PlayResult | null {\r\n    const results = this.getResults();\r\n    if (!results) {\r\n      return null;\r\n    }\r\n    const { scoreResult, clearRank, noteResult } = results;\r\n    if (!scoreResult) {\r\n      return null;\r\n    }\r\n    const { chartId, score } = scoreResult;\r\n    const date = getDateFromDatetimeLocal(this.playTime).getTime();\r\n    if (noteResult) {\r\n      return {\r\n        type: \"note\",\r\n        chartId,\r\n        clear: clearRank,\r\n        result: noteResult,\r\n        date,\r\n      };\r\n    }\r\n    return {\r\n      type: \"score\",\r\n      chartId,\r\n      clear: clearRank,\r\n      score,\r\n      date,\r\n    };\r\n  }\r\n\r\n  private updateCardSize() {\r\n    const zoom = this.form.clientWidth / 1000;\r\n    cssVar(this, \"card-scale\", `${zoom}`);\r\n  }\r\n\r\n  private handleFormChange(e: Event) {\r\n    const { target } = e;\r\n    if (target instanceof HTMLInputElement) {\r\n      if (target === this.chartSelect.searchInput && target.value === this.chartSelect.selectedItem()?.chart?.id) {\r\n        this.handleChartChange();\r\n      } else if (target === this.playTime) {\r\n        this.handlePlayTimeChange();\r\n      } else if (target.type === \"radio\" && target.name === \"type\") {\r\n        // @ts-expect-error skip radio value type check\r\n        this.handleTypeChange(target.value);\r\n      } else {\r\n        this.handlePlayResultChange();\r\n      }\r\n    } else {\r\n      this.handlePlayResultChange();\r\n    }\r\n  }\r\n\r\n  private async handleChartChange() {\r\n    const chart = this.chartSelect.selectedItem()?.chart;\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const songs = await this.chartService.getSongData();\r\n    const song = songs.find((s) => s.id === chart.songId);\r\n    if (!song) {\r\n      throw new Error(`数据出问题力，${chart.songId}歌曲未找到`);\r\n    }\r\n    this.card.setChart(song, chart);\r\n    // @ts-expect-error skip type check\r\n    this.handleTypeChange(new FormData(this.form).get(\"type\"));\r\n  }\r\n\r\n  private handleTypeChange(type: PlayerInputType) {\r\n    type Inputs = keyof Pick<PlayResultForm, \"perfect\" | \"far\" | \"lost\" | \"score\">;\r\n\r\n    const enableState: Record<Inputs, boolean> = {\r\n      far: false,\r\n      lost: false,\r\n      perfect: false,\r\n      score: false,\r\n    };\r\n\r\n    switch (type) {\r\n      case \"detailed\":\r\n        enableState.perfect = true;\r\n        enableState.far = true;\r\n        enableState.lost = true;\r\n        break;\r\n      case \"screenshot\":\r\n        enableState.far = true;\r\n        enableState.lost = true;\r\n        enableState.score = true;\r\n        break;\r\n      case \"score-only\":\r\n        enableState.score = true;\r\n        break;\r\n    }\r\n\r\n    for (const key of Object.keys(enableState) as Inputs[]) {\r\n      const input = this[key];\r\n      const enabled = enableState[key];\r\n      input.value = \"\";\r\n      input.disabled = !enabled;\r\n      input.required = enabled;\r\n    }\r\n    this.handlePlayResultChange();\r\n  }\r\n\r\n  private handlePlayResultChange() {\r\n    const results = this.getResults();\r\n    if (!results) {\r\n      return;\r\n    }\r\n    const { noteResult, scoreResult, clearRank } = results;\r\n    this.card.setResult(noteResult, scoreResult, clearRank);\r\n  }\r\n\r\n  private handlePlayTimeChange() {\r\n    this.card.setPlayTime(getDateFromDatetimeLocal(this.playTime));\r\n    this.card.setNow(getNow());\r\n  }\r\n\r\n  private getResults(): {\r\n    noteResult: NoteResult | null;\r\n    scoreResult: ScoreResult | null;\r\n    clearRank: ClearRank | null;\r\n  } | null {\r\n    const chart = this.chartSelect.selectedItem()?.chart;\r\n    if (!chart) {\r\n      return null;\r\n    }\r\n    const toNum = (input: HTMLInputElement) => (input.value ? +input.value : null);\r\n    const perfect = toNum(this.perfect);\r\n    const far = toNum(this.far);\r\n    const lost = toNum(this.lost);\r\n    let score = toNum(this.score);\r\n    const noteResult = this.musicPlayService.inferNoteResult(chart, perfect, far, lost, score);\r\n    if (noteResult) {\r\n      score = this.musicPlayService.computeScore(chart, noteResult);\r\n    }\r\n    // @ts-expect-error skip check\r\n    let clear: PartnerClearRank | null = this.clear.value || null;\r\n    let scoreResult: ScoreResult | null = null;\r\n    let clearRank: ClearRank | null = null;\r\n    clearRank = noteResult ? this.musicPlayService.computeClearRank(noteResult, chart, clear) : clear;\r\n    if (score != null) {\r\n      scoreResult = this.musicPlayService.computeScoreResult(score, chart);\r\n    }\r\n    return { noteResult, scoreResult, clearRank };\r\n  }\r\n}\r\n","import { clickElsewhere } from \"../../../utils/click-elsewhere\";\r\nimport { Component, HyplateElement, computed, element, mount, signal, unmount } from \"hyplate\";\r\nimport type { Rendered } from \"hyplate/types\";\r\nimport { sheet } from \"./style.css.js\";\r\n\r\n@Component({\r\n  tag: \"search-select\",\r\n  styles: [sheet],\r\n  formAssociated: true,\r\n})\r\nexport class SearchSelect<T> extends HyplateElement {\r\n  panel = element(\"div\");\r\n  searchInput = element(\"input\");\r\n  selectedItem = signal<T | null>(null);\r\n  lastRendered: Rendered<any> | null = null;\r\n\r\n  panelVisible = signal(false);\r\n\r\n  constructor(\r\n    public renderItem: (this: SearchSelect<T>, item: T) => JSX.Element,\r\n    public searchItems: (this: SearchSelect<T>, text: string) => T[] | Promise<T[]>,\r\n    public getItemValue: (this: SearchSelect<T>, item: T) => string\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  override render() {\r\n    this.effect(() => {\r\n      let count = 0;\r\n      const onInput = async () => {\r\n        count++;\r\n        const current = count;\r\n        const result = await this.searchItems(this.searchInput.value);\r\n        if (count === current) {\r\n          this.renderSearchResults(result);\r\n        }\r\n      };\r\n      const onFocus = () => {\r\n        this.searchInput.select();\r\n      };\r\n      const onKeyDown = (e: KeyboardEvent) => {\r\n        const key = e.key.toLowerCase();\r\n        if (key === \"arrowdown\") {\r\n          this.panel.querySelector(\"div[tabindex]\")?.focus();\r\n        }\r\n        if (key === \"escape\" && this.panelVisible()) {\r\n          e.preventDefault();\r\n          this.togglePanelVisible(false);\r\n        }\r\n      };\r\n      const rendered = mount(\r\n        <input\r\n          ref={this.searchInput}\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          autocomplete=\"off\"\r\n          onInput={onInput}\r\n          onFocus={onFocus}\r\n          onKeydown={onKeyDown}\r\n        />,\r\n        this\r\n      );\r\n      this.togglePanelVisible(false);\r\n      return () => {\r\n        unmount(rendered);\r\n      };\r\n    });\r\n    this.effect(() =>\r\n      clickElsewhere(this.panel, () => {\r\n        this.togglePanelVisible(false);\r\n      })\r\n    );\r\n    return (\r\n      <>\r\n        <slot></slot>\r\n        <div\r\n          ref={this.panel}\r\n          class=\"search-panel\"\r\n          style:display={computed(() => (this.panelVisible() ? \"block\" : \"none\"))}\r\n        ></div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  private togglePanelVisible(visible: boolean) {\r\n    this.panelVisible.set(visible);\r\n  }\r\n\r\n  private renderSearchResults(results: T[]) {\r\n    this.togglePanelVisible(true);\r\n    if (this.lastRendered) unmount(this.lastRendered);\r\n    const items = results.map((result) => ({ el: element(\"div\"), result }));\r\n    this.lastRendered = mount(\r\n      <>\r\n        {items.map(({ el, result }, i) => {\r\n          const handleSelect = () => {\r\n            this.selectItem(result);\r\n            this.togglePanelVisible(false);\r\n          };\r\n          const handleKeyDown = (e: KeyboardEvent) => {\r\n            const key = e.key.toLowerCase();\r\n            if (key === \"enter\") {\r\n              handleSelect();\r\n            }\r\n            if (key === \"arrowdown\") {\r\n              items[(i + 1) % items.length]?.el.focus();\r\n            }\r\n            if (key === \"arrowup\") {\r\n              items[(i - 1 + items.length) % items.length]?.el.focus();\r\n            }\r\n            if (key === \"escape\") {\r\n              e.preventDefault();\r\n              this.togglePanelVisible(false);\r\n              this.searchInput?.focus();\r\n            }\r\n          };\r\n          return (\r\n            <div ref={el} class=\"search-item\" tabindex={0} onClick={handleSelect} onKeydown={handleKeyDown}>\r\n              {this.renderItem(result)}\r\n            </div>\r\n          );\r\n        })}\r\n      </>,\r\n      this.panel\r\n    );\r\n  }\r\n\r\n  private selectItem(item: T) {\r\n    if (this.searchInput) {\r\n      this.selectedItem.set(item);\r\n      const formValue = this.getItemValue(item);\r\n      this.searchInput.value = formValue;\r\n      this.internals!.setFormValue(formValue);\r\n      this.searchInput.dispatchEvent(new Event(\"change\", { bubbles: true }));\r\n    }\r\n  }\r\n}\r\n","import { create } from \"sheetly\";\nexport let text = \":host{width:100%;position:relative;display:block}.search-item{display:flex;align-items:center;gap:8px;cursor:pointer;transition:background-color .7s cubic-bezier(.075, .82, .165, 1)}.search-item:not(:last-child){margin-bottom:.5em}.search-item:focus-within,.search-item:hover{background-color:var(--bs-secondary-bg)}.search-panel{min-width:320px;max-height:400px;transform:translateY(12px);overflow-y:auto;box-sizing:border-box;padding:8px;position:absolute;background-color:var(--bs-body-bg);border-radius:8px;box-shadow:0 0 8px 8px rgba(0,0,0,.12);width:100%;z-index:10}\";\nexport const sheet = create(text, import.meta.url);\n","import { create } from \"sheetly\";\nexport let text = \".details{display:flex;gap:8px;align-items:center}.column{display:flex;flex-direction:column}.info-row,.notes{font-size:8px}.info-row :not(:last-child){margin-right:1em}.constant,.song-name{font-weight:600}.alias{font-size:12px}.notes{text-align:center;color:#c2e}.notes::before{content:\\\"+\\\"}.constant{color:#fff;display:inline-block;width:48px;height:24px;padding:4px 8px;border-radius:4px;text-align:left}.bpm{font-size:10px;text-align:center}.cover{width:72px;height:72px;box-shadow:0 0 .5em .125em var(--color-side)}\";\nexport const sheet = create(text, import.meta.url);\n","const ua = navigator.userAgent;\r\nexport const isSafari = /Safari/.test(ua) && !/Chrome/.test(ua);\r\n","import { ConstantTools } from \"../../components/constant-tools\";\r\nimport type { Route } from \"../router\";\r\n\r\nexport const ConstantToolsRoute: Route = {\r\n  path: \"/constant-tools\",\r\n  title: \"定数测算\",\r\n  setup() {\r\n    return new ConstantTools();\r\n  },\r\n};\r\n","import { AutoRender, Component, HyplateElement, nil, signal } from \"hyplate\";\r\nimport { bootstrap, title } from \"../../styles\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport { $WorldModeService, WorldModeService } from \"../../../services/declarations\";\r\nimport { CharacterPicker, renderCharacterStepInput } from \"../character-picker\";\r\nimport { inferRange, isInt } from \"../../../utils/math\";\r\n\r\nexport\r\n@Component({\r\n  tag: \"constant-tools\",\r\n  styles: [bootstrap, title],\r\n})\r\nclass ConstantTools extends HyplateElement {\r\n  @Inject($WorldModeService)\r\n  accessor worldMode!: WorldModeService;\r\n\r\n  characterPicker = new CharacterPicker();\r\n\r\n  stepScore = signal(NaN);\r\n  playResult = signal(NaN);\r\n  step = signal(NaN);\r\n  progress = signal(NaN);\r\n\r\n  beyondBoostScore = signal(NaN);\r\n  beyondBoost1 = signal(NaN);\r\n  beyondBoost2 = signal(NaN);\r\n\r\n  override render() {\r\n    return (\r\n      <div>\r\n        {this.characterPicker}\r\n        <div class=\"title\">Step法</div>\r\n        <div class=\"mx-3\">\r\n          <div class=\"row my-3\">\r\n            <div class=\"col-auto\">\r\n              <label for=\"step-score\" class=\"col-form-label\">\r\n                分数\r\n              </label>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"number\"\r\n                h-model:number={this.stepScore}\r\n                class=\"form-control\"\r\n                step={1}\r\n                min={0}\r\n                id=\"step-score\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div class=\"row my-3\">\r\n            <div class=\"col-auto\">\r\n              <label for=\"play-result\" class=\"col-form-label\">\r\n                游玩结果\r\n              </label>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"number\"\r\n                h-model:number={this.playResult}\r\n                class=\"form-control\"\r\n                min={2.5}\r\n                id=\"play-result\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-auto\">\r\n              <span class=\"form-text\">以下用于辅助计算更精确的游玩结果范围</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row my-3\">\r\n            <div class=\"col-auto\">\r\n              <label for=\"progress\" class=\"col-form-label\">\r\n                前进步数（不含技能、残片、源韵强化等加成）\r\n              </label>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <input type=\"number\" h-model:number={this.progress} class=\"form-control\" id=\"progress\"></input>\r\n            </div>\r\n          </div>\r\n          <div class=\"row my-3\">\r\n            <div class=\"col-auto\">\r\n              <label for=\"step\" class=\"col-form-label\">\r\n                角色step（若角色游玩后升级，应取升级后step）\r\n              </label>\r\n            </div>\r\n            {renderCharacterStepInput(this.characterPicker, this.step, \"step\")}\r\n          </div>\r\n          <AutoRender>\r\n            {() => {\r\n              const score = this.stepScore();\r\n              const playResult = this.playResult();\r\n              const step = this.step();\r\n              const progress = this.progress();\r\n              const result = this.worldMode.inverseConstantRange(playResult, score, step, progress);\r\n              if (!result) return nil;\r\n              const [min, max] = result;\r\n              return this.#renderTextRow(this.#inferRange(min, max));\r\n            }}\r\n          </AutoRender>\r\n        </div>\r\n        <div class=\"title\">Beyond Boost法</div>\r\n        <div class=\"mx-3\">\r\n          <div class=\"form-text\">\r\n            注：虽然游戏内只能看到beyond boost的整数值，但官网接口返回的是比较精确的数据，接口路径为\r\n            <code>/webapi/user/me</code>，字段为<code>value.beyond_boost_gauge</code>。本站在官网的\r\n            <a href=\"docs/plugin-usage.html\" target=\"_blank\">\r\n              跨站脚本插件\r\n            </a>\r\n            集成了beyond boost测算定数功能，此处的手动录入仅作为不使用该脚本的备选工具。\r\n          </div>\r\n          <div class=\"row my-3\">\r\n            <div class=\"col-auto\">\r\n              <label for=\"beyond-boost1\" class=\"col-form-label\">\r\n                游玩前Beyond能量\r\n              </label>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"number\"\r\n                h-model:number={this.beyondBoost1}\r\n                class=\"form-control\"\r\n                min={0}\r\n                max={200}\r\n                id=\"beyond-boost1\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div class=\"row my-3\">\r\n            <div class=\"col-auto\">\r\n              <label for=\"beyond-score\" class=\"col-form-label\">\r\n                分数\r\n              </label>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"number\"\r\n                h-model:number={this.beyondBoostScore}\r\n                class=\"form-control\"\r\n                min={0}\r\n                id=\"beyond-score\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div class=\"row my-3\">\r\n            <div class=\"col-auto\">\r\n              <label for=\"beyond-boost2\" class=\"col-form-label\">\r\n                游玩后Beyond能量\r\n              </label>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"number\"\r\n                h-model:number={this.beyondBoost2}\r\n                class=\"form-control\"\r\n                step={1}\r\n                min={0}\r\n                max={200}\r\n                id=\"beyond-boost2\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <AutoRender>\r\n            {() => {\r\n              const byd1 = this.beyondBoost1();\r\n              const byd2 = this.beyondBoost2();\r\n              const score = this.beyondBoostScore();\r\n              if (isNaN(byd1) || isNaN(byd2) || isNaN(score)) {\r\n                return nil;\r\n              }\r\n              const bound = 200;\r\n              if (byd1 >= bound || byd2 >= bound) {\r\n                return this.#renderTextRow(\"能量溢出时无法测算定数\");\r\n              }\r\n              if (isInt(byd1) && isInt(byd2)) {\r\n                const [min, max] = inferRange(byd2 - byd1, 1, false);\r\n                const minConstant = this.worldMode.inverseBeyondBoost(min, score, true);\r\n                const maxConstant = this.worldMode.inverseBeyondBoost(max, score, true);\r\n                return this.#renderTextRow(this.#inferRange(minConstant, maxConstant));\r\n              }\r\n              // 非整数输入认为是接口弄来的准确数据\r\n              return this.#renderTextRow(`推测定数：${this.worldMode.inverseBeyondBoost(byd2 - byd1, score)}`);\r\n            }}\r\n          </AutoRender>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  #renderTextRow(text: string) {\r\n    return (\r\n      <div class=\"row\">\r\n        <div class=\"col-auto\">{text}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  #inferRange(min: number, max: number) {\r\n    return `推测定数范围：[${min}, ${max}] => ${this.worldMode.inferConstant(min, max).join(\" or \")}`;\r\n  }\r\n}\r\n","import { sheet } from \"./style.css.js\";\r\nimport {\r\n  AutoRender,\r\n  Component,\r\n  HyplateElement,\r\n  Show,\r\n  computed,\r\n  effect,\r\n  element,\r\n  nil,\r\n  signal,\r\n  watch,\r\n} from \"hyplate\";\r\nimport { bootstrap } from \"../../styles\";\r\nimport { CharacterImageKind, CharacterInstanceData, CharacterStatus } from \"../../../models/character\";\r\nimport { pageInto } from \"../../../utils/paging\";\r\nimport { CharacterSelect } from \"../character-select\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport {\r\n  $AssetsResolver,\r\n  $AssetsService,\r\n  $ProfileService,\r\n  AssetsResolver,\r\n  AssetsService,\r\n  ProfileService,\r\n} from \"../../../services/declarations\";\r\nimport { FancyDialog } from \"../fancy-dialog\";\r\nimport type { WritableSignal } from \"hyplate/types\";\r\nimport { AssetImage } from \"../asset-image\";\r\n\r\nexport\r\n@Component({\r\n  tag: \"character-picker\",\r\n  styles: [bootstrap, sheet],\r\n})\r\nclass CharacterPicker extends HyplateElement {\r\n  @Inject($ProfileService)\r\n  accessor profile!: ProfileService;\r\n  @Inject($AssetsResolver)\r\n  accessor resolver!: AssetsResolver;\r\n  @Inject($AssetsService)\r\n  accessor assets!: AssetsService;\r\n\r\n  modal = new FancyDialog();\r\n  characterSelect = new CharacterSelect();\r\n  useStaticData = signal(false);\r\n  resultStep = signal<number | null>(null);\r\n\r\n  override render() {\r\n    return <>{this.modal}</>;\r\n  }\r\n\r\n  async pickStep(): Promise<number | null> {\r\n    const { resultStep } = this;\r\n    const profile = await this.profile.getProfile();\r\n    const [body, unsubscribe] = this.#renderStepPickerBody(profile?.characters ?? []);\r\n    const confirmed = await this.modal.showPicker<number>((done, cancel) => [\r\n      body,\r\n      <AutoRender>\r\n        {() => {\r\n          const step = resultStep();\r\n          if (step != null) return <span slot=\"footer\">当前使用的step值：{step.toFixed(4)}</span>;\r\n          return nil;\r\n        }}\r\n      </AutoRender>,\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary mx-2\"\r\n        slot=\"footer\"\r\n        disabled={computed(() => resultStep() == null)}\r\n        onClick={() => done(resultStep()!)}\r\n      >\r\n        确认\r\n      </button>,\r\n      <button type=\"button\" class=\"btn btn-secondary\" slot=\"footer\" onClick={cancel}>\r\n        取消\r\n      </button>,\r\n    ]);\r\n    unsubscribe();\r\n    if (confirmed) {\r\n      const result = resultStep();\r\n      return result;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  #renderStepPickerBody(profileCharacters: CharacterInstanceData[]) {\r\n    const { useStaticData, characterSelect, resultStep } = this;\r\n    const selectedCharacter = characterSelect.selectedItem;\r\n    const profileCharacter = computed(() => {\r\n      const character = selectedCharacter();\r\n      if (!character) return null;\r\n      return profileCharacters.find((c) => c.id === character.id);\r\n    });\r\n    const unsubscribeWatch = watch(profileCharacter, (character) => {\r\n      // 存档中角色变更时默认优先使用存档中角色数据\r\n      useStaticData.set(!character);\r\n    });\r\n    let firstUpdate = true;\r\n    const unsubscribeSync = effect(() => {\r\n      const character = profileCharacter();\r\n      const isStatic = useStaticData();\r\n      if (!isStatic) {\r\n        resultStep.set(character?.factors.step ?? null);\r\n      } else {\r\n        if (firstUpdate) {\r\n          firstUpdate = false;\r\n        } else {\r\n          resultStep.set(null);\r\n        }\r\n      }\r\n    });\r\n    return [\r\n      <div slot=\"content\">\r\n        <form>\r\n          <div class=\"row\">\r\n            <label class=\"form-label\">选择角色</label>\r\n          </div>\r\n          <character-select ref={characterSelect} name=\"character\"></character-select>\r\n          <Show when={selectedCharacter}>\r\n            {(character) => {\r\n              const pagedCharacterLevels = pageInto(\r\n                Object.entries(character.levels).flatMap(([level, factors]) => {\r\n                  if (!factors) return [];\r\n                  return [[level, factors] as const];\r\n                }),\r\n                10\r\n              );\r\n              const hasStepModifier = [\r\n                35, // 风暴对立\r\n                55, // 宿命光\r\n              ].includes(character.id);\r\n              return (\r\n                <>\r\n                  <div class=\"row my-3\">\r\n                    <div class=\"col-auto\">\r\n                      <AssetImage\r\n                        src={this.assets.getAssets(\r\n                          this.resolver.resoveCharacterImage({\r\n                            id: character.id,\r\n                            kind: CharacterImageKind.Icon,\r\n                            status: CharacterStatus.Initial,\r\n                          })\r\n                        )}\r\n                        width={64}\r\n                        height={64}\r\n                      />\r\n                    </div>\r\n                    {character.can?.awake ? (\r\n                      <div class=\"col-auto\">\r\n                        <AssetImage\r\n                          src={this.assets.getAssets(\r\n                            this.resolver.resoveCharacterImage({\r\n                              id: character.id,\r\n                              status: CharacterStatus.Awaken,\r\n                              kind: CharacterImageKind.Icon,\r\n                            })\r\n                          )}\r\n                          width={64}\r\n                          height={64}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      nil\r\n                    )}\r\n                    {hasStepModifier ? (\r\n                      <div class=\"col-auto\" style:color=\"var(--bs-danger)\">\r\n                        注意：此角色有step加成的因子，静态数据不包括加成的值。\r\n                      </div>\r\n                    ) : (\r\n                      nil\r\n                    )}\r\n                    <div class=\"col-auto\">\r\n                      <Show\r\n                        when={profileCharacter}\r\n                        fallback={() => (\r\n                          <div class=\"form-check-label\">\r\n                            存档中没有此角色。\r\n                            <a href=\"docs/plugin-usage#user-profile\" target=\"_blank\">\r\n                              如何添加？\r\n                            </a>\r\n                          </div>\r\n                        )}\r\n                      >\r\n                        {(character) => <div class=\"form-check-label\">存档中的角色数据：{character.factors.step}</div>}\r\n                      </Show>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-auto\">\r\n                      <div class=\"form-check col-form-label\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          h-model:boolean={useStaticData}\r\n                          disabled={computed(() => !profileCharacter())}\r\n                          class=\"form-check-input\"\r\n                          name=\"use-static\"\r\n                          id=\"use-static\"\r\n                        ></input>\r\n                        <label class=\"form-check-label\" for=\"use-static\">\r\n                          使用静态等级数据\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <Show when={useStaticData}>\r\n                    {() => (\r\n                      <>\r\n                        <div class=\"row\">\r\n                          <div class=\"col my-2\">点击表格中等级/数值进行选择：</div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col\">\r\n                            <table>\r\n                              <tbody>\r\n                                {pagedCharacterLevels.map((characterLevels) => {\r\n                                  return (\r\n                                    <>\r\n                                      <tr>\r\n                                        <th>等级</th>\r\n                                        {characterLevels.map(([key, factors]) => (\r\n                                          <th onClick={() => resultStep.set(factors.step)}>{key}</th>\r\n                                        ))}\r\n                                      </tr>\r\n                                      <tr>\r\n                                        <td>step</td>\r\n                                        {characterLevels.map(([, factors]) => (\r\n                                          <td onClick={() => resultStep.set(factors.step)}>{factors.step}</td>\r\n                                        ))}\r\n                                      </tr>\r\n                                    </>\r\n                                  );\r\n                                })}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </Show>\r\n                </>\r\n              );\r\n            }}\r\n          </Show>\r\n        </form>\r\n      </div>,\r\n      () => {\r\n        unsubscribeSync();\r\n        unsubscribeWatch();\r\n      },\r\n    ] as const;\r\n  }\r\n}\r\n\r\nexport const renderCharacterStepInput = (picker: CharacterPicker, binding: WritableSignal<number>, field: string) => {\r\n  const input = element(\"input\");\r\n  const pickCharacterStep = async () => {\r\n    const result = await picker.pickStep();\r\n    if (result != null) {\r\n      binding.set(result);\r\n      input.form?.dispatchEvent(new Event(\"change\"));\r\n    }\r\n  };\r\n  return [\r\n    <div class=\"col-auto\">\r\n      <input\r\n        ref={input}\r\n        type=\"number\"\r\n        h-model:number={binding}\r\n        name={field}\r\n        id={field}\r\n        step=\"any\"\r\n        min=\"0\"\r\n        class=\"form-control\"\r\n        required\r\n      />\r\n    </div>,\r\n    <div class=\"col-auto\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" onClick={pickCharacterStep}>\r\n        使用角色数据\r\n      </button>\r\n    </div>,\r\n  ];\r\n};\r\n","import { create } from \"sheetly\";\nexport let text = \"fancy-dialog::part(modal-root){width:80vw;max-width:400px;min-height:540px}table{width:100%}table{display:block;overflow-x:auto}table td,table th{padding:.25em;border-collapse:collapse;border:1px solid var(--bs-border-color)}td:not(:first-child),th:not(:first-child){cursor:pointer}\";\nexport const sheet = create(text, import.meta.url);\n","export const pageInto = <T>(arr: T[], pageSize: number): T[][] => {\r\n  const paged: T[][] = [];\r\n  const pageCount = Math.ceil(arr.length / pageSize);\r\n  for (let pageIndex = 0; pageIndex < pageCount; pageIndex++) {\r\n    const begin = pageIndex * pageSize,\r\n      end = begin + pageSize;\r\n    paged.push(arr.slice(begin, end));\r\n  }\r\n  return paged;\r\n};\r\n","import { Component, nil } from \"hyplate\";\r\nimport { CharacterData, CharacterImageKind, CharacterStatus } from \"../../../models/character\";\r\nimport { SearchSelect } from \"../search-select\";\r\nimport { sheet } from \"./style.css.js\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport {\r\n  $AssetsResolver,\r\n  $AssetsService,\r\n  $CharacterService,\r\n  AssetsResolver,\r\n  AssetsService,\r\n  CharacterService,\r\n} from \"../../../services/declarations\";\r\nimport { AssetImage } from \"../asset-image\";\r\nimport type { GlobalAttributes } from \"hyplate/types\";\r\n@Component({\r\n  tag: \"character-select\",\r\n  styles: [...SearchSelect.styles, sheet],\r\n})\r\nexport class CharacterSelect extends SearchSelect<CharacterData> {\r\n  @Inject($AssetsResolver)\r\n  accessor resolver!: AssetsResolver;\r\n  @Inject($AssetsService)\r\n  accessor assets!: AssetsService;\r\n  @Inject($CharacterService)\r\n  accessor characters!: CharacterService;\r\n\r\n  constructor() {\r\n    super(\r\n      ({ id, can: { awake, lost } = {}, name }) => (\r\n        <div class=\"container\">\r\n          <div class=\"images\">\r\n            <AssetImage\r\n              src={this.assets.getAssets(\r\n                this.resolver.resoveCharacterImage({\r\n                  id,\r\n                  kind: CharacterImageKind.Icon,\r\n                  status: CharacterStatus.Initial,\r\n                })\r\n              )}\r\n              width={64}\r\n              height={64}\r\n            ></AssetImage>\r\n            {awake ? (\r\n              <AssetImage\r\n                src={this.assets.getAssets(\r\n                  this.resolver.resoveCharacterImage({\r\n                    id,\r\n                    status: CharacterStatus.Awaken,\r\n                    kind: CharacterImageKind.Icon,\r\n                  })\r\n                )}\r\n                width={64}\r\n                height={64}\r\n              ></AssetImage>\r\n            ) : lost ? (\r\n              <AssetImage\r\n                src={this.assets.getAssets(\r\n                  this.resolver.resoveCharacterImage({\r\n                    id,\r\n                    status: CharacterStatus.Lost,\r\n                    kind: CharacterImageKind.Icon,\r\n                  })\r\n                )}\r\n                width={64}\r\n                height={64}\r\n              ></AssetImage>\r\n            ) : (\r\n              nil\r\n            )}\r\n          </div>\r\n          <div class=\"info\">{name.zh}</div>\r\n        </div>\r\n      ),\r\n      async (text) => {\r\n        const data = await this.characters.getAllCharacters();\r\n        return data.filter(\r\n          (d) =>\r\n            d.name.zh.toLowerCase().includes(text.toLowerCase()) || d.name.en.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n      },\r\n      (character) => character.name.zh\r\n    );\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      \"character-select\": JSXAttributes<GlobalAttributes, CharacterSelect>;\r\n    }\r\n  }\r\n}\r\n","import { create } from \"sheetly\";\nexport let text = \".container{display:flex}.images{display:flex;width:10em;gap:.5em}.info{display:flex;align-items:center}\";\nexport const sheet = create(text, import.meta.url);\n","import { sheet } from \"./style.css.js\";\r\nimport loadingImg from \"../../../assets/loading.gif\";\r\nimport {\r\n  AutoRender,\r\n  Component,\r\n  Future,\r\n  HyplateElement,\r\n  Show,\r\n  computed,\r\n  cssVar,\r\n  effect,\r\n  element,\r\n  listen,\r\n  nil,\r\n  signal,\r\n} from \"hyplate\";\r\nimport {\r\n  $ChartService,\r\n  $FileStorage,\r\n  $Gateway,\r\n  $MusicPlayService,\r\n  $ProfileService,\r\n  ChartService,\r\n  ChartStatistics,\r\n  FileStorageService,\r\n  Gateway,\r\n  MusicPlayService,\r\n  ProfileService,\r\n} from \"../../../services/declarations\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport { Best30YukiChan } from \"../../components/b30-yukichan\";\r\nimport { FancyDialog, alert } from \"../../components/fancy-dialog\";\r\nimport { $Router, Route, Router } from \"../router\";\r\nimport { download } from \"../../../utils/download\";\r\nimport { bootstrap } from \"../../styles/index\";\r\nimport { loading } from \"../../components/loading\";\r\nimport { ClearRank, Grade } from \"../../../models/music-play\";\r\nimport { HelpTip } from \"../../components/help-tip\";\r\nimport { esModule } from \"../../../utils/misc\";\r\nimport { RPC, RPCConnection, WindowMessageHub } from \"../../../utils/rpc\";\r\nimport type {\r\n  CandidateResult,\r\n  ClientAPI,\r\n  CustomImageOptions,\r\n  CustomImageResult,\r\n  HostAPI,\r\n  ImageCandidate,\r\n  ImageFile,\r\n  PickImageOptions,\r\n  PickImageResult,\r\n} from \"../../../services/generator-api\";\r\nimport { HostAPIImpl } from \"../../../services/generator-api-impl\";\r\nimport { CleanUpFunc } from \"hyplate/types\";\r\nimport { ImageClipper } from \"../../components/image-clipper\";\r\n\r\n~HelpTip;\r\n\r\nexport type B30Params = \"template\" | \"url\";\r\n\r\n@Component({\r\n  tag: \"player-b30\",\r\n  styles: [bootstrap, sheet],\r\n})\r\nclass PlayerB39 extends HyplateElement {\r\n  @Inject($ProfileService)\r\n  accessor profileService!: ProfileService;\r\n  @Inject($MusicPlayService)\r\n  accessor musicPlay!: MusicPlayService;\r\n  @Inject($Gateway)\r\n  accessor gateway!: Gateway;\r\n  @Inject($Router)\r\n  accessor router!: Router;\r\n  @Inject($FileStorage)\r\n  accessor fs!: FileStorageService;\r\n\r\n  @Inject($ChartService)\r\n  accessor chart!: ChartService;\r\n  @Inject(HostAPIImpl, { once: true })\r\n  accessor host!: HostAPIImpl;\r\n\r\n  best30 = new Best30YukiChan();\r\n  imagePicker = new FancyDialog();\r\n  downloadModal = new FancyDialog();\r\n  customTemplateIframe: HTMLIFrameElement | null = null;\r\n\r\n  packs = element(\"select\");\r\n  gradeFilter = signal<Grade | ClearRank.PureMemory | ClearRank.Maximum | \"\">(\"\");\r\n  minConstant = signal(NaN);\r\n  maxConstant = signal(NaN);\r\n  template = signal(\"yuki-chan\");\r\n  custom = signal(\"\");\r\n  customTemplateStarted = signal(false);\r\n  currentSite: URL | null = null;\r\n  rpc = new RPC<HostAPI, ClientAPI>({\r\n    hub: new WindowMessageHub(() => {\r\n      const targetWindow = this.customTemplateIframe!.contentWindow!;\r\n      return {\r\n        input: window,\r\n        output: targetWindow,\r\n      };\r\n    }),\r\n    impl: {\r\n      exportAsImage: (...args) => this.exportAsImageFile(...args),\r\n      getAllCharacters: (...args) => this.host.getAllCharacters(...args),\r\n      getImages: (...args) => this.host.getImages(...args),\r\n      getPackList: (...args) => this.host.getPackList(...args),\r\n      getPreference: (...args) => this.host.getPreference(...args),\r\n      getSongList: (...args) => this.host.getSongList(...args),\r\n      resolveAssets: (...args) => this.host.resolveAssets(...args),\r\n      pickImage: (...args) => this.pickImage(...args),\r\n      resolveBackgrounds: (...args) => this.host.resolveBackgrounds(...args),\r\n      resolveCharacterImages: (...args) => this.host.resolveCharacterImages(...args),\r\n      resolveCovers: (...args) => this.host.resolveCovers(...args),\r\n      resolveGradeImgs: (...args) => this.host.resolveGradeImgs(...args),\r\n      resolvePotentialBadge: (...args) => this.host.resolvePotentialBadge(...args),\r\n      savePreference: (...args) => this.host.savePreference(...args),\r\n    },\r\n  });\r\n  #connection: RPCConnection<ClientAPI> | null = null;\r\n\r\n  override render() {\r\n    this.effect(() => {\r\n      const { template, url } = this.router.parseQuery<B30Params>();\r\n      if (template === \"custom-template\") {\r\n        this.template.set(template);\r\n      }\r\n      if (url) {\r\n        this.custom.set(url);\r\n      }\r\n\r\n      const cleanupParams = effect(() => {});\r\n      queueMicrotask(this.computeConditionalB30);\r\n      const events = listen(this.best30 as HTMLElement);\r\n      const unsubscribe = events(\"dblclick\", () => {\r\n        this.best30.requestFullscreen({\r\n          navigationUI: \"hide\",\r\n        });\r\n      });\r\n      return () => {\r\n        unsubscribe();\r\n        this.stopConnection();\r\n        cleanupParams();\r\n      };\r\n    });\r\n    this.autorun(() => {\r\n      const template = this.template();\r\n      const url = this.custom();\r\n      const isCustomTemplate = template === \"custom-template\";\r\n      if (!isCustomTemplate) {\r\n        queueMicrotask(() => {\r\n          this.stopConnection();\r\n        });\r\n      }\r\n      this.router.updateQuery<B30Params>({\r\n        template: isCustomTemplate ? template : null,\r\n        url: url || null,\r\n      });\r\n    });\r\n    return <Future promise={this.chart.getStatistics()}>{(chartStats) => this._render(chartStats)}</Future>;\r\n  }\r\n\r\n  _render({ minimumConstant, maximumConstant }: ChartStatistics) {\r\n    const notUsingYukiChan = computed(() => this.template() !== \"yuki-chan\");\r\n    const notUsingCustomTemplate = computed(() => this.template() !== \"custom-template\");\r\n    return (\r\n      <div>\r\n        {this.imagePicker}\r\n        {this.downloadModal}\r\n        <form class=\"m-3\">\r\n          <details class=\"mb-3\">\r\n            <summary>高级查询</summary>\r\n            <div class=\"input-group\">\r\n              <label for=\"packs\" class=\"input-group-text\">\r\n                仅免费曲包\r\n                <help-tip>\r\n                  <p>以下曲包内曲目均可直接/在世界模式常驻地图/限时地图免费获得：</p>\r\n                  {this.chart.freePacks.map((pack) => (\r\n                    <p>{pack}</p>\r\n                  ))}\r\n                  <p>\r\n                    可多选，电脑是按住<kbd>Ctrl</kbd>后点击进行多选。\r\n                  </p>\r\n                  <p>若不选择任何曲包或仅选择“无”，视为无此过滤条件。</p>\r\n                </help-tip>\r\n              </label>\r\n              <select ref={this.packs} class=\"form-select\" size=\"4\" multiple name=\"packs\">\r\n                <option value=\"\">无</option>\r\n                {this.chart.freePacks.map((pack) => (\r\n                  <option value={pack}>{pack}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label class=\"input-group-text\" for=\"grade\">\r\n                评级≥\r\n              </label>\r\n              <select h-model={this.gradeFilter} class=\"form-select\" id=\"grade\" name=\"grade\">\r\n                <option value=\"\">无</option>\r\n                <option value={ClearRank.Maximum}>理论值</option>\r\n                <option value={ClearRank.PureMemory}>PM</option>\r\n                {this.musicPlay.grades.map((grade) => (\r\n                  <option value={grade}>{grade}</option>\r\n                ))}\r\n              </select>\r\n              <input\r\n                name=\"min-constant\"\r\n                type=\"number\"\r\n                min={minimumConstant}\r\n                max={maximumConstant}\r\n                step=\"0.1\"\r\n                placeholder={minimumConstant.toFixed(1)}\r\n                class=\"form-control\"\r\n                h-model:number={this.minConstant}\r\n                keypress-submit\r\n              />\r\n              <span class=\"input-group-text\">≤ 定数 ≤</span>\r\n              <input\r\n                name=\"max-constant\"\r\n                type=\"number\"\r\n                min={maximumConstant}\r\n                max={maximumConstant}\r\n                step=\"0.1\"\r\n                placeholder={maximumConstant.toFixed(1)}\r\n                class=\"form-control\"\r\n                h-model:number={this.maxConstant}\r\n                keypress-submit\r\n              />\r\n            </div>\r\n            <div class=\"row action\">\r\n              <button type=\"button\" class=\"btn btn-primary\" onClick={this.computeConditionalB30}>\r\n                计算条件b30\r\n              </button>\r\n            </div>\r\n          </details>\r\n          <div>\r\n            <div class=\"input-group my-2\">\r\n              <div class=\"input-group-text\">\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"yuki-chan\"\r\n                    id=\"yuki-chan\"\r\n                    class=\"form-check-input\"\r\n                    h-model={this.template}\r\n                  ></input>\r\n                  <label for=\"yuki-chan\" class=\"form-check-label\">\r\n                    暮雪酱\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div class=\"input-group-text\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  h-model:boolean={this.best30.hd}\r\n                  name=\"hd\"\r\n                  id=\"hd\"\r\n                  class=\"form-check-input\"\r\n                  disabled={notUsingYukiChan}\r\n                />\r\n                <label for=\"hd\" class=\"form-check-label\">\r\n                  高清\r\n                </label>\r\n                <help-tip>\r\n                  <p>\r\n                    高清选项可导出更清晰的曲绘和文字的b30图，但同时也比较大（约10M），导出较慢，也会消耗更多流量。\r\n                    <span class=\"ios-issue\">iOS设备有Safari的内存限制，可能无法导出高清图片。</span>\r\n                  </p>\r\n                </help-tip>\r\n              </div>\r\n              <button class=\"btn btn-primary\" onClick={this.exportImg} type=\"button\" disabled={notUsingYukiChan}>\r\n                导出图片\r\n              </button>\r\n            </div>\r\n            <div class=\"input-group my-2\">\r\n              <div class=\"input-group-text\">\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"custom-template\"\r\n                    id=\"custom\"\r\n                    class=\"form-check-input\"\r\n                    h-model={this.template}\r\n                  ></input>\r\n                  <label for=\"custom-template\" class=\"form-check-label\">\r\n                    自定义模板\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <label for=\"custom\" class=\"input-group-text form-check-label\">\r\n                地址\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                h-model={this.custom}\r\n                name=\"custom\"\r\n                id=\"custom\"\r\n                placeholder=\"默认AOL模板\"\r\n                class=\"form-control\"\r\n                disabled={computed(() => notUsingCustomTemplate() || this.customTemplateStarted())}\r\n              />\r\n              <button\r\n                class={computed(() => `btn btn-${this.customTemplateStarted() ? \"danger\" : \"primary\"}`)}\r\n                onClick={this.toggleConnection}\r\n                type=\"button\"\r\n                disabled={notUsingCustomTemplate}\r\n              >\r\n                {computed(() => (this.customTemplateStarted() ? \"停止\" : \"启动\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div class=\"b30-container\">\r\n          <AutoRender>\r\n            {() => {\r\n              if (this.template() === \"yuki-chan\") {\r\n                return <>{this.best30}</>;\r\n              }\r\n              if (!this.customTemplateStarted()) {\r\n                return nil;\r\n              }\r\n              return <iframe ref={this.customTemplateIframe!}></iframe>;\r\n            }}\r\n          </AutoRender>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  computeConditionalB30 = async () => {\r\n    const profile = await this.profileService.getProfile();\r\n    if (!profile) {\r\n      alert(\"未选择存档\");\r\n      return;\r\n    }\r\n    const packs = Array.from(this.packs.querySelectorAll(\"option\"))\r\n      .filter((o) => o.selected && o.value)\r\n      .map((o) => o.value);\r\n    const rankFilter = this.gradeFilter(),\r\n      minConstant = this.minConstant(),\r\n      maxConstant = this.maxConstant();\r\n    const b30 = await this.profileService.b30(profile, {\r\n      packs,\r\n      filter: (result) => {\r\n        const {\r\n          score: { grade },\r\n          chart: { constant },\r\n          clear,\r\n        } = result;\r\n        if (rankFilter) {\r\n          if (rankFilter === ClearRank.PureMemory || rankFilter === ClearRank.Maximum) {\r\n            const levels = [ClearRank.PureMemory, ClearRank.Maximum];\r\n            if (levels.indexOf(rankFilter) > levels.indexOf(clear!)) return false;\r\n          } else if (this.musicPlay.compareGrade(grade, rankFilter) > 0) {\r\n            return false;\r\n          }\r\n        }\r\n        if (constant < minConstant || constant > maxConstant) {\r\n          return false;\r\n        }\r\n        return true;\r\n      },\r\n    });\r\n    this.best30.b30.set(b30);\r\n    await this.#connection?.api.setB30(b30);\r\n  };\r\n\r\n  exportImg = async () => {\r\n    const b30 = this.best30.b30();\r\n    if (!b30) {\r\n      alert(\"b30计算尚未完成，请稍后……\");\r\n      return;\r\n    }\r\n    const exportNode = this.best30.getExportNode();\r\n    const profile = await this.profileService.getProfile();\r\n    if (!exportNode || !profile) return;\r\n    const progress = signal(\"\");\r\n    const { blob, filename } = await loading(\r\n      (async () => {\r\n        progress.set(\"正在加载模块\");\r\n        const html2canvas = await esModule(import(\"html2canvas\"));\r\n        progress.set(\"正在绘制图片\");\r\n        const canvas = await html2canvas(exportNode);\r\n        progress.set(\"正在导出图片\");\r\n        const blob = await new Promise<Blob>((resolve, reject) => {\r\n          canvas.toBlob((blob) => {\r\n            if (blob) {\r\n              resolve(blob);\r\n            } else {\r\n              reject();\r\n            }\r\n          }, \"image/jpeg\");\r\n        });\r\n        const now = new Date(b30.queryTime);\r\n        const pad2 = (n: number) => `${n}`.padStart(2, \"0\");\r\n        const filename = `b30 ${now.getFullYear()}-${pad2(now.getMonth() + 1)}-${pad2(now.getDate())} ${pad2(\r\n          now.getHours()\r\n        )}-${pad2(now.getMinutes())}-${pad2(now.getSeconds())}.jpg`;\r\n        return {\r\n          blob,\r\n          filename,\r\n        };\r\n      })(),\r\n      <div style=\"display: flex; flex-direction: column; align-items: center;\">\r\n        <p>{progress}</p>\r\n        <img src={loadingImg} width=\"48\" height=\"48\"></img>\r\n      </div>\r\n    );\r\n    await this.exportAsImageFile(blob, {\r\n      filename,\r\n      autoDownload: false,\r\n    });\r\n  };\r\n\r\n  toggleConnection = async () => {\r\n    const started = !this.customTemplateStarted();\r\n    if (started) {\r\n      this.startConnection();\r\n    } else {\r\n      this.stopConnection();\r\n    }\r\n  };\r\n\r\n  async startConnection() {\r\n    const custom = this.custom();\r\n    let siteURL: URL;\r\n    if (custom) {\r\n      try {\r\n        siteURL = new URL(custom);\r\n      } catch {\r\n        alert(\"地址格式不正确\");\r\n        return;\r\n      }\r\n    } else {\r\n      siteURL = new URL(process.env.ARCAEA_TOOLBELT_AOL_B30, process.env.BASE_URI);\r\n    }\r\n    this.currentSite = siteURL;\r\n    const site = siteURL.href;\r\n    this.customTemplateIframe = element(\"iframe\");\r\n    this.customTemplateStarted.set(true);\r\n    this.customTemplateIframe.src = site;\r\n    this.host.site = site;\r\n    this.#connection = this.rpc.start();\r\n    await this.computeConditionalB30();\r\n  }\r\n\r\n  stopConnection() {\r\n    this.customTemplateStarted.set(false);\r\n    this.#connection?.stop();\r\n    this.customTemplateIframe = null;\r\n    this.currentSite = null;\r\n  }\r\n\r\n  pickImage = async <T extends ImageCandidate>(candidates: T[], options: PickImageOptions) => {\r\n    const { currentSite } = this;\r\n    if (!currentSite) {\r\n      throw new Error(\"Site not connected\");\r\n    }\r\n    const { display, title, custom, defaultSelected } = options;\r\n    const { height, columns, width } = display;\r\n    const cleanups: CleanUpFunc[] = [];\r\n    const objURL = (blob: Blob) => {\r\n      const url = URL.createObjectURL(blob);\r\n      cleanups.push(() => URL.revokeObjectURL(url));\r\n      return url;\r\n    };\r\n\r\n    try {\r\n      const customImage = signal<CustomImageResult | null>(null);\r\n      const getCustomImage = async () => {\r\n        if (custom) {\r\n          const single = custom.single;\r\n          if (single != null) {\r\n            const url = this.fs.createURL(currentSite, single);\r\n            const uploadedFile = await this.fs.read(url);\r\n            if (uploadedFile) {\r\n              const { blob } = uploadedFile;\r\n              const blobURL = objURL(blob);\r\n              const image: ImageFile = {\r\n                blob: uploadedFile.blob,\r\n                blobURL,\r\n                // TODO 自定义图片的 dist URL 处理\r\n                distURL: url.toString(),\r\n                filename: single,\r\n                resourceURL: url,\r\n              };\r\n              customImage.set({\r\n                type: \"custom\",\r\n                image,\r\n              });\r\n              return image;\r\n            }\r\n          }\r\n        }\r\n        customImage.set(null);\r\n        return null;\r\n      };\r\n\r\n      const candidateImages = await loading(\r\n        (async () => {\r\n          const imageFiles = await this.host.getImages(candidates.map((candidate) => candidate.url));\r\n          return imageFiles.map<CandidateResult<T>>((file, i) => ({\r\n            type: \"basic\",\r\n            candidate: candidates[i]!,\r\n            image: file,\r\n          }));\r\n        })(),\r\n        <div>正在下载图片……</div>\r\n      );\r\n      await getCustomImage();\r\n      const savedCustomImage = customImage();\r\n      const selectedBasicImage =\r\n        candidateImages.find((item) => item.candidate.url.href === defaultSelected?.href) ?? null;\r\n      const selectedURL = defaultSelected?.href;\r\n      const selected = signal<PickImageResult<T> | null>(\r\n        selectedURL\r\n          ? savedCustomImage?.image?.resourceURL.href === selectedURL\r\n            ? savedCustomImage\r\n            : selectedBasicImage\r\n          : null\r\n      );\r\n\r\n      const renderPickImageItem = (pickResult: PickImageResult<T>) => (\r\n        <div\r\n          class=\"item\"\r\n          class:selected={computed(() => selected() === pickResult)}\r\n          onClick={() => {\r\n            selected.set(pickResult);\r\n          }}\r\n        >\r\n          <img src={pickResult.image.blobURL}></img>\r\n        </div>\r\n      );\r\n      const renderCustomPicker = (custom: CustomImageOptions) => {\r\n        const clipper = new ImageClipper();\r\n        const { single, clip } = custom;\r\n        const renderSinglePicker = (path: string) => {\r\n          const input = element(\"input\");\r\n          const handleChange = async () => {\r\n            let file: Blob | null | undefined = input.files?.item(0);\r\n            if (!file) {\r\n              return;\r\n            }\r\n            if (clip) {\r\n              const bitmap = await createImageBitmap(file);\r\n              file = await clipper.clip(bitmap, clip.config, clip.canvas);\r\n              bitmap.close();\r\n            }\r\n            const url = this.fs.createURL(currentSite, path);\r\n            await this.fs.upload(file, url);\r\n            await getCustomImage();\r\n            selected.set(customImage());\r\n          };\r\n          return (\r\n            <div>\r\n              <h3>自定义图片</h3>\r\n              {clipper}\r\n              <div class=\"row\">\r\n                <div class=\"col\">\r\n                  <input type=\"file\" ref={input} class=\"form-control\" accept=\"image/*\" onChange={handleChange}></input>\r\n                </div>\r\n              </div>\r\n              <Show when={customImage} fallback={() => <div>（在上面选择文件添加自定义图片）</div>}>\r\n                {(result) => {\r\n                  return (\r\n                    <div\r\n                      class=\"custom-image cells\"\r\n                      var:item-height={`${height}px`}\r\n                      var:grid-columns={`${columns}`}\r\n                      var:item-width={`${width}px`}\r\n                    >\r\n                      {renderPickImageItem(result)}\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Show>\r\n            </div>\r\n          );\r\n        };\r\n\r\n        if (single) {\r\n          return renderSinglePicker(single);\r\n        }\r\n        return nil;\r\n      };\r\n\r\n      const renderImages = () => {\r\n        const items = candidateImages.map(renderPickImageItem);\r\n        return (\r\n          <div\r\n            class=\"image-picker cells\"\r\n            var:item-height={`${height}px`}\r\n            var:grid-columns={`${columns}`}\r\n            var:item-width={`${width}px`}\r\n          >\r\n            {items}\r\n          </div>\r\n        );\r\n      };\r\n\r\n      const imageFile = await this.imagePicker.showPicker<PickImageResult<T>>((done, cancel) => {\r\n        return [\r\n          <div slot=\"content\">\r\n            <h2>{title}</h2>\r\n            {custom ? (\r\n              <>\r\n                {renderCustomPicker(custom)}\r\n                <h3>基本图片</h3>\r\n              </>\r\n            ) : (\r\n              nil\r\n            )}\r\n            {renderImages()}\r\n          </div>,\r\n          <div slot=\"footer\">\r\n            <button\r\n              class=\"btn btn-primary\"\r\n              disabled={computed(() => !selected())}\r\n              onClick={() => {\r\n                const selectedImage = selected();\r\n                if (selectedImage) {\r\n                  done(selectedImage);\r\n                } else {\r\n                  cancel();\r\n                }\r\n              }}\r\n            >\r\n              选择\r\n            </button>\r\n            <button\r\n              class=\"btn btn-secondary\"\r\n              onClick={() => {\r\n                cancel();\r\n              }}\r\n            >\r\n              取消\r\n            </button>\r\n          </div>,\r\n        ];\r\n      });\r\n      return imageFile;\r\n    } finally {\r\n      cleanups.forEach((clean) => clean());\r\n    }\r\n  };\r\n\r\n  exportAsImageFile: HostAPI[\"exportAsImage\"] = async (data, options) => {\r\n    const url = URL.createObjectURL(data);\r\n    const { filename = url.toString(), autoDownload = true } = options ?? {};\r\n    try {\r\n      if (autoDownload) {\r\n        download(url, filename);\r\n      }\r\n      await this.downloadModal.showPicker<boolean>((done) => [\r\n        <div slot=\"content\">\r\n          {autoDownload ? (\r\n            <>\r\n              <p>如果图片没有自动下载，请点击下面的链接打开图片手动保存。</p>\r\n              <div>\r\n                <a href={url} target=\"_blank\">\r\n                  {filename}\r\n                </a>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p>点击下方链接下载图片：</p>\r\n              <div>\r\n                <a href={url} download={filename}>\r\n                  {filename}\r\n                </a>\r\n              </div>\r\n              <p>点击下方链接在新页面预览图片：</p>\r\n              <div>\r\n                <a href={url} target=\"_blank\">\r\n                  {filename}\r\n                </a>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>,\r\n        <div slot=\"footer\">\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            onClick={() => {\r\n              done(true);\r\n            }}\r\n          >\r\n            完成\r\n          </button>\r\n        </div>,\r\n      ]);\r\n    } finally {\r\n      URL.revokeObjectURL(url);\r\n    }\r\n  };\r\n}\r\n\r\nexport const PlayerB30Route: Route = {\r\n  path: \"/b30\",\r\n  title: \"b30\",\r\n  setup() {\r\n    const page = new PlayerB39();\r\n    const width = window.innerWidth;\r\n    if (width < 800) {\r\n      cssVar(document.body, \"inner-width\", `${width}`);\r\n    }\r\n    return page;\r\n  },\r\n};\r\n","import { create } from \"sheetly\";\nexport let text = \"form{max-width:48em}help-tip p{max-width:30em;text-align:initial;word-break:break-all;white-space:initial}.input-group-text:has(input#hd){gap:.25em}.action{margin:0}.b30-container{display:flex;overflow:auto}.ios-issue{color:var(--bs-danger)}iframe{width:100vw;height:100vh}.image-picker{max-height:600px;overflow-y:scroll}.cells{display:grid;grid-template-columns:repeat(var(--grid-columns),var(--item-width));gap:.5em}.item{box-sizing:content-box;border:.125em transparent solid;user-select:none}.item img{width:var(--item-width);height:var(--item-height);object-fit:cover}.item.selected{border-color:var(--bs-primary);width:var(--item-width);height:var(--item-height)}[slot=footer] button{margin-left:.5em}\";\nexport const sheet = create(text, import.meta.url);\n","import { bootstrap } from \"../../styles\";\r\nimport { Component, HyplateElement, element } from \"hyplate\";\r\nimport { sheet } from \"../fancy-dialog/style.css.js\";\r\nimport type { JSXChildNode } from \"hyplate/types\";\r\nimport { FancyDialog, alert } from \"../fancy-dialog\";\r\nimport { formatError } from \"../../../utils/format\";\r\n\r\n@Component({\r\n  tag: \"loading-message\",\r\n  styles: [bootstrap, sheet],\r\n})\r\nclass Loading extends HyplateElement {\r\n  dialog = element(\"dialog\");\r\n  content: JSXChildNode | null = null;\r\n  error = new FancyDialog();\r\n  override render() {\r\n    return (\r\n      <>\r\n        {this.error}\r\n        <dialog ref={this.dialog} onCancel={(e) => e.preventDefault()}>\r\n          {this.content}\r\n        </dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const loading = async <T extends unknown>(promise: PromiseLike<T>, message: JSXChildNode): Promise<T> => {\r\n  const loading = new Loading();\r\n  loading.content = message;\r\n  document.body.appendChild(loading);\r\n  loading.dialog.showModal();\r\n  try {\r\n    const result = await promise;\r\n    return result;\r\n  } catch (error) {\r\n    await loading.error.showAlert(<p>出现错误：{formatError(error)}</p>);\r\n    throw error;\r\n  } finally {\r\n    loading.dialog.close();\r\n    document.body.removeChild(loading);\r\n  }\r\n};\r\n","import { CompleteSignal, Task, future } from \"./future\";\r\nimport { createInvokeCapture } from \"./invoke-capture\";\r\nimport { deserialize, serialize } from \"./transfer\";\r\nimport { uuid } from \"./uuid\";\r\n\r\nexport interface BaseMessage {\r\n  __arcaea_toolbelt_msg: true;\r\n  id: string;\r\n}\r\n\r\nconst createMessage = <T extends BaseMessage>(id: string, others: Omit<T, keyof BaseMessage>): T =>\r\n  ({\r\n    __arcaea_toolbelt_msg: true,\r\n    id,\r\n    ...others,\r\n  } as T);\r\n\r\nexport enum MessageType {\r\n  Ping = \"ping\",\r\n  Request = \"request\",\r\n  Response = \"response\",\r\n  Error = \"error\",\r\n}\r\n\r\nexport interface PingMessage extends BaseMessage {\r\n  type: MessageType.Ping;\r\n}\r\n\r\nexport interface RequestMessage<T> extends BaseMessage {\r\n  type: MessageType.Request;\r\n  body: T;\r\n}\r\n\r\nexport interface ResponseMessage<T> extends BaseMessage {\r\n  type: MessageType.Response;\r\n  body: T;\r\n}\r\n\r\nexport interface ErrorMessage extends BaseMessage {\r\n  type: MessageType.Error;\r\n  error: any;\r\n}\r\n\r\nexport type AsyncMethod = (...args: any[]) => Promise<any>;\r\n\r\nexport interface AsyncAPIs {\r\n  [property: string]: AsyncMethod | AsyncAPIs;\r\n}\r\n\r\nexport interface Invoke {\r\n  type: \"invoke\";\r\n  path: string[];\r\n  args: any[];\r\n}\r\n\r\nexport const isInvoke = (obj: unknown): obj is Invoke => !!(obj && (obj as Partial<Invoke>).type === \"invoke\");\r\n\r\nexport type Message = PingMessage | RequestMessage<any> | ResponseMessage<any> | ErrorMessage;\r\n\r\nexport interface MessageHub {\r\n  start(handler: (data: any) => void): MessagePort;\r\n}\r\n\r\nexport interface MessagePort {\r\n  post(content: any): void;\r\n  stop(): void;\r\n}\r\n\r\nexport const isMessage = (obj: unknown): obj is Message =>\r\n  !!(obj && (obj as Partial<BaseMessage>).__arcaea_toolbelt_msg);\r\n\r\nexport class TaskPool {\r\n  #pool = new Map<string, Task<any>>();\r\n  create(specialId?: string) {\r\n    const id = specialId ?? uuid();\r\n    const task = future<any>();\r\n    this.#pool.set(id, task);\r\n    return { id, task };\r\n  }\r\n  done(id: string, value: any) {\r\n    this.#pick(id)?.done(value);\r\n  }\r\n\r\n  abort(id: string, reason?: any) {\r\n    this.#pick(id)?.abort(reason);\r\n  }\r\n\r\n  #pick(id: string) {\r\n    const task = this.#pool.get(id);\r\n    if (!task) {\r\n      console.error(`Task id ${id} does not exist.`);\r\n    }\r\n    return task;\r\n  }\r\n}\r\n\r\nexport interface WindowConnection {\r\n  input: Window;\r\n  output: Window;\r\n}\r\n\r\ntype ReceiveHandler = (data: any) => void;\r\n\r\nexport class WindowMessageHub implements MessageHub {\r\n  constructor(public readonly connect: () => WindowConnection) {}\r\n\r\n  start(handler: ReceiveHandler): MessagePort {\r\n    return new WindowMessagePort(this.connect(), handler);\r\n  }\r\n}\r\n\r\nexport class WindowMessagePort implements MessagePort {\r\n  #handler;\r\n  constructor(public readonly connection: WindowConnection, handler: ReceiveHandler) {\r\n    const { input } = this.connection;\r\n    this.#handler = (event: MessageEvent) => {\r\n      handler(deserialize(event.data));\r\n    };\r\n    input.addEventListener(\"message\", this.#handler);\r\n  }\r\n\r\n  post(content: any): void {\r\n    const { output } = this.connection;\r\n    output.postMessage(serialize(content), \"*\");\r\n  }\r\n  stop(): void {\r\n    const { input } = this.connection;\r\n    input.removeEventListener(\"message\", this.#handler);\r\n  }\r\n}\r\n\r\nexport interface RPCConnection<Host extends AsyncAPIs> {\r\n  pool: TaskPool;\r\n  api: Host;\r\n  stop(): void;\r\n}\r\n\r\nexport class RPC<Client extends AsyncAPIs, Host extends AsyncAPIs> {\r\n  constructor(\r\n    public readonly options: {\r\n      hub: MessageHub;\r\n      impl: Client;\r\n    }\r\n  ) {}\r\n\r\n  start(): RPCConnection<Host> {\r\n    const pool = new TaskPool();\r\n    const pingId = \"ping\";\r\n    const {\r\n      task: { promise: connected },\r\n    } = pool.create(pingId);\r\n    const msg = createMessage<PingMessage>(pingId, { type: MessageType.Ping });\r\n    const ping = () => {\r\n      port.post(msg);\r\n    };\r\n    let conected = false;\r\n    const pong = () => {\r\n      if (!conected) {\r\n        conected = true;\r\n        ping();\r\n      }\r\n    };\r\n    const pingTimer = setInterval(ping, 100);\r\n    const port = this.options.hub.start(async (data) => {\r\n      if (!isMessage(data)) return;\r\n      switch (data.type) {\r\n        case MessageType.Ping:\r\n          pong();\r\n          clearInterval(pingTimer);\r\n          pool.done(pingId, data);\r\n          break;\r\n        case MessageType.Request:\r\n          await this.onRequest(data, port);\r\n          break;\r\n        case MessageType.Response:\r\n          await this.onResponse(data, pool);\r\n          break;\r\n        case MessageType.Error:\r\n        default:\r\n          await this.onError(data, pool);\r\n          break;\r\n      }\r\n    });\r\n\r\n    return {\r\n      pool,\r\n      api: createInvokeCapture(async (path, args) => {\r\n        await connected;\r\n        const { id: taskId, task } = pool.create();\r\n        const message = createMessage<RequestMessage<Invoke>>(taskId, {\r\n          type: MessageType.Request,\r\n          body: {\r\n            type: \"invoke\",\r\n            args,\r\n            path,\r\n          },\r\n        });\r\n        port.post(message);\r\n        return task.promise;\r\n      }) as Host,\r\n      stop() {\r\n        clearInterval(pingTimer);\r\n        port.stop();\r\n        pool.abort(pingId);\r\n      },\r\n    };\r\n  }\r\n\r\n  protected async onRequest(data: RequestMessage<any>, port: MessagePort) {\r\n    const { body, id } = data;\r\n    if (isInvoke(body)) {\r\n      try {\r\n        let target: any = this.options.impl;\r\n        let prev: any = undefined;\r\n        const { path, args } = body;\r\n        for (const property of path) {\r\n          prev = target;\r\n          target = Reflect.get(target, property);\r\n        }\r\n        const result = await Reflect.apply(target, prev, args);\r\n        const message = createMessage<ResponseMessage<any>>(id, {\r\n          type: MessageType.Response,\r\n          body: result,\r\n        });\r\n        port.post(message);\r\n      } catch (error) {\r\n        port.post(\r\n          createMessage<ErrorMessage>(id, {\r\n            type: MessageType.Error,\r\n            error: error,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  protected async onResponse(data: ResponseMessage<any>, pool: TaskPool) {\r\n    pool.done(data.id, data.body);\r\n  }\r\n\r\n  protected async onError(data: ErrorMessage, pool: TaskPool) {\r\n    pool.abort(data.id, data.error);\r\n  }\r\n}\r\n","export interface Task<T> {\r\n  promise: Promise<T>;\r\n  done(result: T): void;\r\n  abort(reason?: any): void;\r\n}\r\n\r\nexport interface CompleteSignal {\r\n  promise: Promise<void>;\r\n  done(): void;\r\n  abort(reason?: any): void;\r\n}\r\n\r\nexport const future: {\r\n  (): CompleteSignal;\r\n  <T>(): Task<T>;\r\n} = () => {\r\n  let done: any, abort: any;\r\n  const promise = new Promise<any>((resolve, reject) => {\r\n    done = resolve;\r\n    abort = reject;\r\n  });\r\n  return {\r\n    promise,\r\n    get done() {\r\n      return done;\r\n    },\r\n    get abort() {\r\n      return abort;\r\n    },\r\n  };\r\n};\r\n","export const createInvokeCapture = (handler: (path: string[], args: any[]) => any) => {\r\n  const createProxy = (path: string[]): any =>\r\n    new Proxy(function noop() {}, {\r\n      get(_target, property) {\r\n        if (typeof property === \"symbol\") throw new Error(\"Cannot get symbol property.\");\r\n        return createProxy([...path, property]);\r\n      },\r\n      apply(_target, _this, argArray) {\r\n        return handler(path, argArray);\r\n      },\r\n    });\r\n  return createProxy([]);\r\n};\r\n","export const serialize = (value: any): any => {\r\n  if (typeof value !== \"object\" || value == null) {\r\n    return value;\r\n  }\r\n  if (value instanceof URL) {\r\n    return {\r\n      _url: value.href,\r\n    };\r\n  }\r\n  if (Array.isArray(value)) {\r\n    return value.map((item) => serialize(item));\r\n  }\r\n  const proto = Object.getPrototypeOf(value);\r\n  if (proto === Object.prototype || proto == null) {\r\n    const cloned = Object.create(proto);\r\n    for (const [key, val] of Object.entries(value)) {\r\n      cloned[key] = serialize(val);\r\n    }\r\n    return cloned;\r\n  }\r\n  return value;\r\n};\r\n\r\nexport const deserialize = (value: any): any => {\r\n  if (typeof value !== \"object\" || value == null) {\r\n    return value;\r\n  }\r\n  if (typeof value._url === 'string') {\r\n    return new URL(value._url);\r\n  }\r\n  if (Array.isArray(value)) {\r\n    return value.map((item) => deserialize(item));\r\n  }\r\n  const proto = Object.getPrototypeOf(value);\r\n  if (proto === Object.prototype || proto == null) {\r\n    const cloned = Object.create(proto);\r\n    for (const [key, val] of Object.entries(value)) {\r\n      cloned[key] = deserialize(val);\r\n    }\r\n    return cloned;\r\n  }\r\n  return value;\r\n};\r\n","export const uuid =\r\n  crypto.randomUUID?.bind(crypto) ??\r\n  (() => {\r\n    const now = Date.now();\r\n    const random = Math.floor(Math.random() * 0xffffffff);\r\n    return `${now.toString(16)}-${random.toString(16)}`;\r\n  });\r\n","import { Injectable } from \"classic-di\";\r\nimport { CharacterData, CharacterImage } from \"../models/character\";\r\nimport {\r\n  FileExportOptions,\r\n  HostAPI,\r\n  ImageCandidate,\r\n  ImageFile,\r\n  PickImageOptions,\r\n  PickImageResult,\r\n} from \"./generator-api\";\r\nimport {\r\n  $AssetsCacheService,\r\n  $AssetsResolver,\r\n  $CharacterService,\r\n  $ChartService,\r\n  $CoreDataService,\r\n  $FileStorage,\r\n  $Gateway,\r\n  $PreferenceService,\r\n  AssetsCacheService,\r\n  AssetsResolver,\r\n  CharacterService,\r\n  ChartService,\r\n  CoreDataService,\r\n  FileStorageService,\r\n  Gateway,\r\n  PreferenceService,\r\n} from \"./declarations\";\r\nimport { Grade, difficulties } from \"../models/music-play\";\r\nimport { managedBlobURL } from \"../utils/url\";\r\nimport { protocol } from \"../models/data\";\r\n\r\n@Injectable({\r\n  requires: [\r\n    $CoreDataService,\r\n    $AssetsResolver,\r\n    $CharacterService,\r\n    $ChartService,\r\n    $AssetsCacheService,\r\n    $PreferenceService,\r\n    $FileStorage,\r\n    $Gateway,\r\n  ] as const,\r\n})\r\nexport class HostAPIImpl implements HostAPI {\r\n  site = \"\";\r\n\r\n  constructor(\r\n    private readonly core: CoreDataService,\r\n    private readonly resolver: AssetsResolver,\r\n    private readonly character: CharacterService,\r\n    private readonly chart: ChartService,\r\n    private readonly cache: AssetsCacheService,\r\n    private readonly preference: PreferenceService,\r\n    private readonly fs: FileStorageService,\r\n    private readonly gateway: Gateway\r\n  ) {}\r\n\r\n  getSongList(): Promise<any> {\r\n    return this.core.getSongList();\r\n  }\r\n  getPackList(): Promise<any> {\r\n    return this.core.getPackList();\r\n  }\r\n  getAllCharacters(): Promise<CharacterData[]> {\r\n    return this.character.getAllCharacters();\r\n  }\r\n  async getPreference(): Promise<any> {\r\n    const preference = await this.preference.get();\r\n    return Reflect.get(preference, this.site);\r\n  }\r\n  async savePreference(preference: any): Promise<void> {\r\n    await this.preference.update({\r\n      [this.site]: preference,\r\n    });\r\n  }\r\n  async resolveAssets(paths: string[]): Promise<URL[]> {\r\n    return paths.map((path) => this.resolver.resolve(path));\r\n  }\r\n\r\n  async resolveCovers(\r\n    query: { songId: string; difficulty: number; highQuality?: boolean | undefined }[]\r\n  ): Promise<URL[]> {\r\n    const data = await this.chart.getSongIndex();\r\n    return query.map((q) => {\r\n      const { songId, difficulty, highQuality } = q;\r\n      const song = data[songId];\r\n      const chart = song?.charts.find((chart) => chart.difficulty === difficulties[difficulty]);\r\n      if (!song || !chart) throw new Error(`Unknown song or difficulty: songId=${songId}, difficulty=${difficulty}`);\r\n      return this.resolver.resolveCover(chart, song, !!highQuality);\r\n    });\r\n  }\r\n  async resolveCharacterImages(query: CharacterImage[]): Promise<URL[]> {\r\n    return query.map((q) => this.resolver.resoveCharacterImage(q));\r\n  }\r\n  async resolvePotentialBadge(rating: number): Promise<URL> {\r\n    return this.resolver.resolvePotentialBadge(rating);\r\n  }\r\n  async resolveGradeImgs(grades: Grade[]): Promise<URL[]> {\r\n    return grades.map((grade) => this.resolver.resolveGradeImg(grade));\r\n  }\r\n  async resolveBackgrounds(): Promise<URL[]> {\r\n    return [\r\n      this.resolver.resolve(\"img/bg_light.jpg\"),\r\n      ...Array.from({ length: 9 }, (_, i) => this.resolver.resolve(`img/world/1080/${i}.jpg`)),\r\n      this.resolver.resolve(\"img/world/1080/1001.jpg\"),\r\n    ];\r\n  }\r\n  async getImages(resources: URL[]): Promise<ImageFile[]> {\r\n    return Promise.all(\r\n      resources.map(async (resourceURL): Promise<ImageFile> => {\r\n        const pathname = resourceURL.toString().slice(protocol.length);\r\n        const fragments = pathname.split(\"/\");\r\n        if (fragments[2] === \"vfs\") {\r\n          const file = await this.fs.read(resourceURL);\r\n          if (!file) {\r\n            throw new Error(`Resource ${resourceURL.href} not found.`);\r\n          }\r\n          const { blob, url } = file;\r\n          return {\r\n            blob: blob,\r\n            blobURL: managedBlobURL(blob),\r\n            distURL: url,\r\n            filename: fragments.at(-1)!,\r\n            resourceURL,\r\n          };\r\n        }\r\n        const filename = fragments.findLast((fragment) => !!fragment)!;\r\n        const dist = await this.gateway.dynamicProxy(resourceURL);\r\n        const imageCache = await this.cache.cachedGet(dist);\r\n        return {\r\n          filename,\r\n          resourceURL,\r\n          distURL: dist.href,\r\n          blob: imageCache.blob,\r\n          blobURL: imageCache.blobURL,\r\n        };\r\n      })\r\n    );\r\n  }\r\n  pickImage<T extends ImageCandidate>(candidates: T[], options: PickImageOptions): Promise<PickImageResult<T> | null> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  exportAsImage(file: Blob, options: FileExportOptions): Promise<void> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n}\r\n","const blobURLRegistry = new FinalizationRegistry<string>((url) => {\r\n  console.debug(`Revoking Object URL: ${url}`);\r\n  return URL.revokeObjectURL(url);\r\n});\r\n\r\nexport const managedBlobURL = (blob: Blob): string => {\r\n  const url = URL.createObjectURL(blob);\r\n  blobURLRegistry.register(blob, url);\r\n  return url;\r\n};","import { sheet as dialogSheet } from \"../fancy-dialog/style.css.js\";\r\nimport { sheet } from \"./style.css.js\";\r\nimport { Component, HyplateElement, element } from \"hyplate\";\r\nimport { bootstrap } from \"../../styles\";\r\nimport { ClipConfig, ImageClipperCanvasController, Size } from \"../../../utils/image-clip\";\r\n\r\nexport\r\n@Component({\r\n  tag: \"image-clipper\",\r\n  styles: [bootstrap, dialogSheet, sheet],\r\n})\r\nclass ImageClipper extends HyplateElement {\r\n  dialog = element(\"dialog\");\r\n  canvas = element(\"canvas\");\r\n  controller = new ImageClipperCanvasController(this.canvas);\r\n\r\n  override render() {\r\n    return (\r\n      <dialog ref={this.dialog} onCancel={(e) => e.preventDefault()}>\r\n        <div class=\"modal-content\">\r\n          <canvas ref={this.canvas}></canvas>\r\n          <p>电脑操作：鼠标拖动可移动图片，按住Ctrl+鼠标拖动可放缩，也可滚轮放缩</p>\r\n          <div class=\"actions\">\r\n            <button type=\"button\" class=\"btn btn-primary\" onClick={() => this.dialog.close()}>\r\n              裁剪\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </dialog>\r\n    );\r\n  }\r\n\r\n  clip(image: ImageBitmap, clipConfig: ClipConfig, canvasSize: Size) {\r\n    return new Promise<Blob>((resolve) => {\r\n      this.canvas.width = canvasSize.width;\r\n      this.canvas.height = canvasSize.height;\r\n      this.controller.setImage(image);\r\n      this.controller.setClip(clipConfig);\r\n      const stop = this.controller.start();\r\n      this.dialog.onclose = async () => {\r\n        stop();\r\n        const blob = await this.controller.clip();\r\n        resolve(blob);\r\n      };\r\n      this.dialog.showModal();\r\n      const rect = this.dialog.getBoundingClientRect();\r\n      const renderWidth = rect.width - 32,\r\n        renderHeight = rect.height - 32;\r\n      const widthZoom = renderWidth / canvasSize.width,\r\n        heightZoom = renderHeight / canvasSize.height;\r\n      const canvaseStyleSize: Size =\r\n        widthZoom < heightZoom\r\n          ? { width: renderWidth, height: canvasSize.height * widthZoom }\r\n          : { width: canvasSize.width * heightZoom, height: renderHeight };\r\n      this.canvas.style.width = `${canvaseStyleSize.width}px`;\r\n      this.canvas.style.height = `${canvaseStyleSize.height}px`;\r\n    });\r\n  }\r\n}\r\n","import { create } from \"sheetly\";\nexport let text = \"div.actions{display:flex;flex-direction:row-reverse}dialog{width:fit-content}div.modal-content{display:flex;flex-direction:column;align-items:center}\";\nexport const sheet = create(text, import.meta.url);\n","//#region typedefs\r\n\r\ntype DeepPartial<T> = T extends object\r\n  ?\r\n      | {\r\n          [K in keyof T]?: DeepPartial<T[K]>;\r\n        }\r\n      | undefined\r\n  : T | undefined | null;\r\n\r\nexport type RenderContext = CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;\r\nexport interface Vecter2D {\r\n  x: number;\r\n  y: number;\r\n}\r\nexport type Position = Vecter2D;\r\n\r\nexport interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface Rectangle {\r\n  position: Position;\r\n  size: Vecter2D;\r\n}\r\n\r\nexport interface ImageSource {\r\n  bitmap: ImageBitmap;\r\n  area: Rectangle;\r\n}\r\n\r\nexport interface EditingImageTransform {\r\n  position: Position;\r\n  scale: number;\r\n}\r\n\r\nexport type DrawMode = \"frame\" | \"batch\" | \"sync\";\r\n\r\nexport type BackgroundOptions = {\r\n  type: \"grid\";\r\n} & TransparentGridOptions;\r\n\r\nexport interface MaskStyle {\r\n  fillStyle: string;\r\n}\r\n\r\nexport interface BoundOptions {\r\n  /**\r\n   * When set to true, controller will adjust the clipping area\r\n   * to prevent it from containing contents outside of the source image.\r\n   * @default true\r\n   */\r\n  clip: boolean;\r\n  /**\r\n   * When set to true, controller will only trigger changes\r\n   * if the event point is inside the image area.\r\n   * This option is ignored when resizing with mouse.\r\n   * @default true\r\n   */\r\n  image: boolean;\r\n  /**\r\n   * The range of scale.\r\n   */\r\n  scale: {\r\n    /**\r\n     * @default 0\r\n     */\r\n    min: number;\r\n    /**\r\n     * @default 16\r\n     */\r\n    max: number;\r\n  };\r\n}\r\n\r\nexport interface TransparentGridOptions {\r\n  /**\r\n   * The color of first cell.\r\n   */\r\n  color1: string;\r\n  color2: string;\r\n  /**\r\n   * The grid cell length (both width and height).\r\n   * @default 16\r\n   */\r\n  length: number;\r\n}\r\n\r\nexport interface ClipConfig {\r\n  /**\r\n   * The rectangle area to extract as image.\r\n   * The origin is the center of canvas.\r\n   */\r\n  area: Rectangle;\r\n  /**\r\n   * Clip path.\r\n   * The origin is the center of canvas.\r\n   */\r\n  clipPath: string;\r\n}\r\n\r\nexport interface Options {\r\n  /**\r\n   * \"frame\": redraw on every animation frame.\r\n   * \"sync\": redraw on every event.\r\n   * \"batch\": batch redraws in events in next animation frame.\r\n   */\r\n  mode: DrawMode;\r\n  bound: BoundOptions;\r\n  /**\r\n   * Defines the transparent part as background.\r\n   * Default to draw grid.\r\n   */\r\n  background: BackgroundOptions;\r\n  /**\r\n   * Configures the mask style.\r\n   */\r\n  mask: MaskStyle;\r\n  /**\r\n   * The clip path options.\r\n   */\r\n  clip: ClipConfig;\r\n}\r\n\r\ninterface MouseSnapshot {\r\n  image: EditingImageTransform;\r\n  start: Position;\r\n  point: Position;\r\n}\r\n\r\ninterface TouchSnapshot {\r\n  image: EditingImageTransform;\r\n  touches: Position[];\r\n}\r\n//#endregion\r\n\r\n//#region vector utils\r\nexport const zero: Vecter2D = Object.freeze({ x: 0, y: 0 });\r\n\r\nconst inRange = (value: number, min: number, max: number) => min <= value && value <= max;\r\n\r\nconst contains = (area: Rectangle, point: Vecter2D) => {\r\n  const { position, size } = area;\r\n  return inRange(point.x, position.x, position.x + size.x) && inRange(point.y, position.y, position.y + size.y);\r\n};\r\n\r\nexport const bound = (value: number, min: number, max: number) => Math.max(min, Math.min(max, value));\r\n\r\nexport const boundPoint = (v: Vecter2D, min: Vecter2D, max: Vecter2D): Vecter2D => ({\r\n  x: bound(v.x, min.x, max.x),\r\n  y: bound(v.y, min.y, max.y),\r\n});\r\n\r\nexport const expand = (v: Vecter2D): [number, number] => [v.x, v.y];\r\n\r\nexport const point = (v: Vecter2D) => `${v.x},${v.y}`;\r\n\r\nexport const fromSize = (size: Size): Vecter2D => ({\r\n  x: size.width,\r\n  y: size.height,\r\n});\r\n\r\nconst clone = structuredClone;\r\n\r\nconst patchDeep = <T>(value: DeepPartial<T>, defaults: T): T => {\r\n  if (value == null) {\r\n    return defaults;\r\n  }\r\n  if (value == null || typeof value !== \"object\" || Array.isArray(value)) {\r\n    // @ts-expect-error\r\n    return value;\r\n  }\r\n  // @ts-expect-error\r\n  return Object.fromEntries(\r\n    // @ts-expect-error\r\n    Object.entries(defaults).map(([k, v]) => [k, patchDeep(value[k], v)])\r\n  );\r\n};\r\n\r\nexport const add = (a: Vecter2D, b: Vecter2D): Vecter2D => ({\r\n  x: a.x + b.x,\r\n  y: a.y + b.y,\r\n});\r\n\r\nexport const mult = (v: Vecter2D, k: number): Vecter2D => ({\r\n  x: v.x * k,\r\n  y: v.y * k,\r\n});\r\n\r\nexport const div = (v: Vecter2D, k: number): Vecter2D => ({\r\n  x: v.x / k,\r\n  y: v.y / k,\r\n});\r\n\r\nexport const average = (...points: Vecter2D[]): Vecter2D =>\r\n  div(\r\n    points.reduce((prev, curr) => add(prev, curr)),\r\n    points.length\r\n  );\r\n\r\nexport const zoom = (v: Vecter2D, factor: Vecter2D): Vecter2D => ({\r\n  x: v.x * factor.x,\r\n  y: v.y * factor.y,\r\n});\r\n\r\nexport const sub = (a: Vecter2D, b: Vecter2D) => add(a, mult(b, -1));\r\n\r\nexport const radius = (v: Vecter2D) => Math.hypot(v.x, v.y);\r\n\r\nconst getMouseOffset = (mouse: MouseEvent): Position => ({\r\n  x: mouse.offsetX,\r\n  y: mouse.offsetY,\r\n});\r\n\r\nconst getTouchOffset = (touch: Touch): Position => {\r\n  const target = touch.target;\r\n  const offset = {\r\n    x: touch.pageX,\r\n    y: touch.pageY,\r\n  };\r\n  if (!(target instanceof HTMLElement)) {\r\n    return offset;\r\n  }\r\n  const rect = target.getBoundingClientRect();\r\n  return sub(offset, rect);\r\n};\r\n\r\n//#endregion\r\n\r\nexport class ImageClipperCanvasController {\r\n  /**\r\n   * Generate rectangle clip area\r\n   * @param canvasSize canvas 2D size\r\n   * @param rectSize default to half of canvas size\r\n   */\r\n  static rect(canvasSize: Vecter2D, rectSize?: Vecter2D): ClipConfig {\r\n    rectSize ??= div(canvasSize, 2);\r\n    const halfRectSize = div(rectSize, 2);\r\n    const rectStart = mult(halfRectSize, -1);\r\n    const clipPath = `m\\\r\n ${point(rectStart)}\\\r\n ${rectSize.x},0\\\r\n 0,${rectSize.y}\\\r\n ${-rectSize.x},0\\\r\n z`;\r\n    return {\r\n      area: {\r\n        position: rectStart,\r\n        size: rectSize,\r\n      },\r\n      clipPath,\r\n    };\r\n  }\r\n  static diamond(width: number): ClipConfig {\r\n    const rectSize: Vecter2D = { x: width, y: width };\r\n    const halfRectSize = div(rectSize, 2);\r\n    const position = mult(halfRectSize, -1);\r\n    const clipPath = `m\\\r\n 0,${-halfRectSize.y}\\\r\n ${halfRectSize.x},${halfRectSize.y}\\\r\n ${-halfRectSize.x},${halfRectSize.y}\\\r\n ${-halfRectSize.x},${-halfRectSize.y}\\\r\n z`;\r\n    return {\r\n      area: {\r\n        position,\r\n        size: rectSize,\r\n      },\r\n      clipPath,\r\n    };\r\n  }\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  clipConfig: ClipConfig;\r\n  background: ImageData | null = null;\r\n  source: ImageSource | null = null;\r\n  transform: EditingImageTransform;\r\n  options: Options;\r\n  readonly mode: DrawMode;\r\n  private af: ReturnType<typeof window.requestAnimationFrame> = -1;\r\n  private mouseSnapshot: MouseSnapshot | null = null;\r\n  private touchSnapshot: TouchSnapshot | null = null;\r\n  constructor(canvas: HTMLCanvasElement, options?: DeepPartial<Options>) {\r\n    this.canvas = canvas;\r\n    this.context = canvas.getContext(\"2d\")!;\r\n    this.options = patchDeep<Options>(options, {\r\n      background: {\r\n        type: \"grid\",\r\n        color1: \"rgba(0,0,0,0.2)\",\r\n        color2: \"#ffffff\",\r\n        length: 16,\r\n      },\r\n      bound: {\r\n        clip: true,\r\n        image: true,\r\n        scale: {\r\n          min: 0,\r\n          max: 16,\r\n        },\r\n      },\r\n      clip: ImageClipperCanvasController.rect(fromSize(canvas)),\r\n      mask: {\r\n        fillStyle: \"rgba(0,0,0,0.5)\",\r\n      },\r\n      mode: \"batch\",\r\n    });\r\n    this.clipConfig = this.options.clip;\r\n    this.mode = this.options.mode;\r\n    this.transform = {\r\n      position: clone(zero),\r\n      scale: 1,\r\n    };\r\n  }\r\n\r\n  //#region computed properties\r\n  get baseZoom(): Vecter2D {\r\n    const { width, height } = this.canvas.getBoundingClientRect();\r\n    return {\r\n      x: this.canvas.width / width,\r\n      y: this.canvas.height / height,\r\n    };\r\n  }\r\n\r\n  get imageArea(): Rectangle | null {\r\n    const {\r\n      transform: { position, scale },\r\n      source,\r\n    } = this;\r\n    if (!source) {\r\n      return null;\r\n    }\r\n    const {\r\n      area: { size },\r\n    } = source;\r\n    return {\r\n      position,\r\n      size: mult(size, scale),\r\n    };\r\n  }\r\n\r\n  get clipArea(): Rectangle {\r\n    const { area } = this.clipConfig;\r\n    return {\r\n      ...area,\r\n      position: add(area.position, div(fromSize(this.canvas), 2)),\r\n    };\r\n  }\r\n  //#endregion\r\n\r\n  //#region settings, immutable updates\r\n  setClip(config: ClipConfig) {\r\n    this.clipConfig = config;\r\n    this.schedule();\r\n  }\r\n  setImage(bitmap: ImageBitmap, area?: Rectangle) {\r\n    this.source = {\r\n      bitmap,\r\n      area: area ?? {\r\n        position: zero,\r\n        size: fromSize(bitmap),\r\n      },\r\n    };\r\n    this.boundPosition();\r\n    this.schedule();\r\n  }\r\n  setBackground(backgound: BackgroundOptions) {\r\n    this.options.background = backgound;\r\n    this.background = this.createBackground();\r\n    this.schedule();\r\n  }\r\n  //#endregion\r\n\r\n  //#region draws\r\n  draw() {\r\n    const { context } = this;\r\n    this.scoped(context, this.clearCanvas);\r\n    this.scoped(context, this.drawBackground);\r\n    this.scoped(context, this.drawImage);\r\n    this.scoped(context, this.drawMask);\r\n  }\r\n\r\n  scoped(context: RenderContext, draw: (context: RenderContext) => void) {\r\n    context.save();\r\n    draw(context);\r\n    context.restore();\r\n  }\r\n\r\n  clearCanvas = (context: RenderContext) => {\r\n    const { width, height } = this.canvas;\r\n    context.clearRect(0, 0, width, height);\r\n  };\r\n\r\n  drawBackground = (context: RenderContext) => {\r\n    context.putImageData((this.background ??= this.createBackground()), 0, 0);\r\n  };\r\n\r\n  #drawGridBackground(context: RenderContext) {\r\n    let {\r\n      options: { background },\r\n    } = this;\r\n    if (background.type === \"grid\") {\r\n      // draw grid backgound\r\n      const { width, height } = this.canvas;\r\n      const { color1, color2, length } = background;\r\n      const maxColumn = width / length,\r\n        maxRow = height / length;\r\n      for (let row = 0; row < maxRow; row++) {\r\n        for (let column = 0; column < maxColumn; column++) {\r\n          context.fillStyle = (row + column) % 2 ? color2 : color1;\r\n          context.fillRect(column * length, row * length, length, length);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  drawImage = (ctx: RenderContext) => {\r\n    const { source } = this;\r\n    if (!source) {\r\n      return;\r\n    }\r\n    const { position, scale } = this.transform;\r\n    const { area, bitmap } = source;\r\n    ctx.drawImage(\r\n      bitmap,\r\n      ...expand(area.position),\r\n      ...expand(area.size),\r\n      ...expand(position),\r\n      ...expand(mult(area.size, scale))\r\n    );\r\n  };\r\n\r\n  drawMask = (context: RenderContext) => {\r\n    const { width, height } = this.canvas;\r\n    const path2d = new Path2D();\r\n    path2d.rect(0, 0, width, height);\r\n    path2d.addPath(this.createClip());\r\n    context.clip(path2d, \"evenodd\");\r\n    context.fillStyle = this.options.mask.fillStyle;\r\n    context.fillRect(0, 0, width, height);\r\n  };\r\n\r\n  createClip() {\r\n    const { clipPath } = this.clipConfig;\r\n    const path2d = new Path2D();\r\n    const canvasCenter = div(fromSize(this.canvas), 2);\r\n    path2d.addPath(new Path2D(`M ${point(canvasCenter)} ${clipPath}`));\r\n    return path2d;\r\n  }\r\n\r\n  createBackground() {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = this.canvas.width;\r\n    canvas.height = this.canvas.height;\r\n    const context = canvas.getContext(\"2d\")!;\r\n    this.#drawGridBackground(context);\r\n    return context.getImageData(0, 0, canvas.width, canvas.height);\r\n  }\r\n\r\n  move(d: Vecter2D) {\r\n    // Bound movement\r\n    Object.assign(this.transform.position, add(this.transform.position, d));\r\n    this.boundPosition();\r\n  }\r\n\r\n  zoom(center: Position, scale: number) {\r\n    const { transform } = this;\r\n    // dest = src * scale + position\r\n    const sourcePostion = div(sub(center, transform.position), transform.scale);\r\n    const scaleBound = this.options.bound.scale;\r\n    const newScale = bound(scale, scaleBound.min, scaleBound.max);\r\n    transform.scale = newScale;\r\n    // position = dest - src * scale\r\n    this.transform.position = sub(center, mult(sourcePostion, newScale));\r\n    this.boundPosition();\r\n  }\r\n\r\n  boundPosition() {\r\n    if (!this.options.bound.clip) {\r\n      return;\r\n    }\r\n    const {\r\n      source,\r\n      transform: { position, scale },\r\n    } = this;\r\n    if (!source) {\r\n      return;\r\n    }\r\n    const clip = this.clipArea;\r\n    const { area: src } = source;\r\n    const minScale = Math.max(clip.size.y / src.size.y, clip.size.x / src.size.y);\r\n    this.transform.scale = Math.max(scale, minScale);\r\n    const minBound = sub(add(clip.position, clip.size), mult(src.size, this.transform.scale));\r\n    const maxBound = clip.position;\r\n    Object.assign(position, boundPoint(position, minBound, maxBound));\r\n  }\r\n  //#endregion\r\n\r\n  //#region events\r\n  start() {\r\n    const subscribe = <K extends keyof HTMLElementEventMap>(\r\n      event: K,\r\n      handler: (event: HTMLElementEventMap[K]) => void\r\n    ) => {\r\n      this.canvas.addEventListener(event, handler);\r\n      return () => {\r\n        this.canvas.removeEventListener(event, handler);\r\n      };\r\n    };\r\n    const subscriptions = [\r\n      subscribe(\"mousedown\", this.handleMouseDown),\r\n      subscribe(\"mouseup\", this.handleMouseUp),\r\n      subscribe(\"mousemove\", this.handleMouseMove),\r\n      subscribe(\"wheel\", this.handleWheel),\r\n      subscribe(\"touchstart\", this.handleTouchChange),\r\n      subscribe(\"touchend\", this.handleTouchChange),\r\n      subscribe(\"touchmove\", this.handleTouchMove),\r\n    ];\r\n    switch (this.mode) {\r\n      case \"frame\": {\r\n        const frame = () => {\r\n          this.draw();\r\n          this.af = requestAnimationFrame(frame);\r\n        };\r\n        this.af = requestAnimationFrame(frame);\r\n        subscriptions.push(() => {\r\n          cancelAnimationFrame(this.af);\r\n        });\r\n        break;\r\n      }\r\n      case \"sync\": {\r\n        this.draw();\r\n        break;\r\n      }\r\n      case \"batch\":\r\n      default: {\r\n        subscriptions.push(() => {\r\n          const af = this.af;\r\n          if (~af) {\r\n            return;\r\n          }\r\n          cancelAnimationFrame(af);\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    return () => {\r\n      for (const unsubscribe of [...subscriptions].reverse()) {\r\n        unsubscribe();\r\n        subscriptions.pop();\r\n      }\r\n    };\r\n  }\r\n\r\n  schedule() {\r\n    switch (this.mode) {\r\n      case \"frame\":\r\n        break;\r\n      case \"sync\":\r\n        this.draw();\r\n        break;\r\n      case \"batch\":\r\n      default:\r\n        this.batch();\r\n        break;\r\n    }\r\n  }\r\n\r\n  batch() {\r\n    if (~this.af) {\r\n      return;\r\n    }\r\n    this.af = requestAnimationFrame(this.frame);\r\n  }\r\n\r\n  private frame = () => {\r\n    this.draw();\r\n    this.af = -1;\r\n  };\r\n\r\n  private handleMouseDown = (e: MouseEvent) => {\r\n    const { imageArea } = this;\r\n    if (!imageArea) {\r\n      return;\r\n    }\r\n    const clickPoint = this.getClickPoint(e);\r\n    if (this.options.bound.image && !contains(imageArea, clickPoint)) {\r\n      return;\r\n    }\r\n    this.mouseSnapshot = {\r\n      image: clone(this.transform),\r\n      start: clickPoint,\r\n      point: clickPoint,\r\n    };\r\n  };\r\n\r\n  private handleMouseUp = () => {\r\n    this.mouseSnapshot = null;\r\n  };\r\n\r\n  private handleMouseMove = (e: MouseEvent) => {\r\n    const { mouseSnapshot } = this;\r\n    if (!mouseSnapshot) {\r\n      return;\r\n    }\r\n    const { imageArea } = this;\r\n    if (!imageArea) {\r\n      return;\r\n    }\r\n    const clickPoint = this.getClickPoint(e);\r\n    if (e.ctrlKey) {\r\n      // scale center is the center of canvas\r\n      const center = div(fromSize(this.canvas), 2);\r\n      const initOffset = sub(mouseSnapshot.start, center);\r\n      const initR = radius(initOffset);\r\n      const currentOffset = sub(clickPoint, center);\r\n      const currentR = radius(currentOffset);\r\n      this.zoom(center, (mouseSnapshot.image.scale * currentR) / initR);\r\n    } else {\r\n      if (this.options.bound.image && !contains(imageArea, clickPoint)) {\r\n        return;\r\n      }\r\n      this.move(sub(clickPoint, mouseSnapshot.point));\r\n    }\r\n    this.mouseSnapshot = {\r\n      ...mouseSnapshot,\r\n      point: clickPoint,\r\n    };\r\n    this.schedule();\r\n  };\r\n\r\n  private handleTouchChange = (e: TouchEvent) => {\r\n    if (e.touches.length) {\r\n      const touches = this.getTouchPoints(e);\r\n      this.touchSnapshot = {\r\n        image: clone(this.transform),\r\n        touches,\r\n      };\r\n    } else {\r\n      this.touchSnapshot = null;\r\n    }\r\n  };\r\n\r\n  private handleTouchMove = (e: TouchEvent) => {\r\n    const { imageArea } = this;\r\n    if (!imageArea) {\r\n      return;\r\n    }\r\n    const touches = this.getTouchPoints(e);\r\n    if (this.options.bound.image && touches.every((touch) => !contains(imageArea, touch))) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const { touchSnapshot: touchChangeSnapshot } = this;\r\n    if (!touchChangeSnapshot) {\r\n      return;\r\n    }\r\n    if (touches.length === 1) {\r\n      const touch = touches[0]!;\r\n      this.move(sub(touch, touchChangeSnapshot.touches[0]!));\r\n    } else {\r\n      const [a1, b1] = touches;\r\n      const [a2, b2] = touchChangeSnapshot.touches;\r\n      if (!(a1 && a2 && b1 && b2)) {\r\n        return;\r\n      }\r\n      const c1 = average(a1, b1);\r\n      const c2 = average(a2, b2);\r\n      const movement = sub(c1, c2);\r\n      const scale = radius(sub(a1, b1)) / radius(sub(a2, b2));\r\n      this.zoom(average(c1, c2), scale * touchChangeSnapshot.image.scale);\r\n      this.move(movement);\r\n    }\r\n    this.touchSnapshot = {\r\n      image: clone(this.transform),\r\n      touches,\r\n    };\r\n    this.schedule();\r\n  };\r\n\r\n  private handleWheel = (e: WheelEvent) => {\r\n    const imageArea = this.imageArea;\r\n    if (!imageArea) {\r\n      return;\r\n    }\r\n    if (this.options.bound.image && !contains(imageArea, this.getClickPoint(e))) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const { deltaY } = e;\r\n    if (deltaY == null) {\r\n      // not supported\r\n      return;\r\n    }\r\n    const scale = deltaY < 0 ? 1.5 : 1 / 1.5;\r\n    this.zoom(this.getClickPoint(e), scale * this.transform.scale);\r\n    this.schedule();\r\n  };\r\n\r\n  private getClickPoint(e: MouseEvent) {\r\n    return zoom(getMouseOffset(e), this.baseZoom);\r\n  }\r\n\r\n  private getTouchPoints(e: TouchEvent) {\r\n    const { baseZoom } = this;\r\n    return Array.from(e.touches).map((touch) => zoom(getTouchOffset(touch), baseZoom));\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region methods\r\n  async clip(options?: ImageEncodeOptions) {\r\n    const canvas = new OffscreenCanvas(...expand(fromSize(this.canvas)));\r\n    const context = canvas.getContext(\"2d\")!;\r\n    const path2d = this.createClip();\r\n    const { clipArea } = this;\r\n    context.clip(path2d);\r\n    this.drawImage(context);\r\n    const exportImageData = context.getImageData(...expand(clipArea.position), ...expand(clipArea.size));\r\n    const exportBitmap = await createImageBitmap(exportImageData);\r\n    const exportCanvas = new OffscreenCanvas(...expand(clipArea.size));\r\n    exportCanvas.getContext(\"bitmaprenderer\")!.transferFromImageBitmap(exportBitmap);\r\n    const blob = await exportCanvas.convertToBlob(options);\r\n    exportBitmap.close();\r\n    return blob;\r\n  }\r\n  //#endregion\r\n}\r\n","import { ProfilePage } from \"../../components/profile\";\r\nimport { Route } from \"../router\";\r\n\r\nexport const ProfileRoute: Route = {\r\n  path: \"/profile\",\r\n  title: \"存档\",\r\n  setup() {\r\n    return new ProfilePage();\r\n  },\r\n};\r\n","import { bootstrap } from \"../../styles\";\r\nimport { sheet } from \"./style.css.js\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport {\r\n  $AssetsResolver,\r\n  $ChartService,\r\n  $Gateway,\r\n  $MusicPlayService,\r\n  $ProfileService,\r\n  AssetsResolver,\r\n  BestStatistics,\r\n  ChartService,\r\n  Gateway,\r\n  MusicPlayService,\r\n  ProfileService,\r\n} from \"../../../services/declarations\";\r\nimport { FancyDialog, alert, confirm } from \"../fancy-dialog\";\r\nimport { AutoRender, Component, Future, HyplateElement, computed, effect, element, nil, signal } from \"hyplate\";\r\nimport { Profile } from \"../../../models/profile\";\r\nimport { loading } from \"../loading\";\r\nimport { delay } from \"../../../utils/time\";\r\nimport type { FC, JSXChildNode } from \"hyplate/types\";\r\nimport { ClearRank, Difficulty, formatRating, parseRating } from \"../../../models/music-play\";\r\nimport { PotentialBadge } from \"../potential-badge\";\r\nimport { RouteLink } from \"../route-link\";\r\nimport { HelpTip } from \"../help-tip\";\r\n~RouteLink;\r\n~HelpTip;\r\nexport\r\n@Component({\r\n  tag: \"profile-page\",\r\n  styles: [bootstrap, sheet],\r\n})\r\nclass ProfilePage extends HyplateElement {\r\n  @Inject($AssetsResolver)\r\n  accessor resolver!: AssetsResolver;\r\n  @Inject($Gateway)\r\n  accessor gateway!: Gateway;\r\n  @Inject($ProfileService)\r\n  accessor profileService!: ProfileService;\r\n  @Inject($ChartService)\r\n  accessor chart!: ChartService;\r\n  @Inject($MusicPlayService)\r\n  accessor musicPlay!: MusicPlayService;\r\n\r\n  createProfileDialog = element(\"dialog\");\r\n  editProfileDialog = element(\"dialog\");\r\n  switchProfileDialog = element(\"dialog\");\r\n  importProfileDialog = element(\"dialog\");\r\n  importSt3Dialog = element(\"dialog\");\r\n  editPtt = element(\"input\");\r\n  profileStats = new FancyDialog();\r\n\r\n  greet = signal<Profile | null>(null);\r\n\r\n  override render() {\r\n    this.updateGreet();\r\n    return (\r\n      <Future promise={this.musicPlay.getStatistics()}>\r\n        {({ maximumPotential }) => {\r\n          return this._render(maximumPotential);\r\n        }}\r\n      </Future>\r\n    );\r\n  }\r\n  _render(maximumPotential: number) {\r\n    return (\r\n      <>\r\n        <AutoRender>\r\n          {() => {\r\n            const profile = this.greet();\r\n            return (\r\n              <>\r\n                <div class=\"row m-3\" id=\"greet\">\r\n                  <div class=\"col\">\r\n                    {profile\r\n                      ? [\r\n                          `当前存档：${profile.username}`,\r\n                          <PotentialBadge potential={+profile.potential}></PotentialBadge>,\r\n                        ]\r\n                      : \"未选择存档\"}\r\n                  </div>\r\n                </div>\r\n                {profile\r\n                  ? [\r\n                      <div class=\"row m-3\">\r\n                        {this.profileStats}\r\n                        <button type=\"button\" class=\"btn btn-primary\" onClick={() => this.showProfileStats(profile)}>\r\n                          存档统计\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-outline-secondary update-profile\"\r\n                          onClick={() => this.updateProfile(profile)}\r\n                        >\r\n                          修改存档\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-outline-secondary import-scores\"\r\n                          onClick={() => this.importSt3(profile)}\r\n                        >\r\n                          导入st3\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-outline-secondary export-profile\"\r\n                          onClick={() => this.exportProfile(profile)}\r\n                        >\r\n                          导出存档为JSON\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" onClick={() => this.deleteProfile(profile)}>\r\n                          删除存档\r\n                        </button>\r\n                      </div>,\r\n                    ]\r\n                  : nil}\r\n              </>\r\n            );\r\n          }}\r\n        </AutoRender>\r\n        <div class=\"row m-3\">\r\n          <button type=\"button\" class=\"btn btn-outline-secondary create-profile\" onClick={this.createProfile}>\r\n            创建存档\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-outline-secondary switch-profile\" onClick={this.switchProfile}>\r\n            选择存档\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-outline-secondary import-profile\" onClick={this.importProfile}>\r\n            导入JSON存档\r\n          </button>\r\n        </div>\r\n        <div class=\"row m-3\">\r\n          <p>\r\n            存档用于保存谱面成绩，进行\r\n            <route-link path=\"/b30\">b30</route-link>的计算和一些相关统计，以及保存角色数据进行爬梯相关计算。\r\n          </p>\r\n          <p>\r\n            本站支持解析Arcaea本地存档<code>st3</code>文件并导入成绩到存档。关于如何获取<code>st3</code>文件，可参考\r\n            <a href=\"docs/mumu-adb.html\" target=\"_blank\">\r\n              使用MuMu模拟器和adb获取存档\r\n            </a>\r\n            ，或者\r\n            <a href=\"https://space.bilibili.com/171403897\" target=\"_blank\">\r\n              RTE\r\n            </a>\r\n            的视频\r\n            <a href=\"https://www.bilibili.com/video/BV1kp4y1F7Jw/\" target=\"_blank\">\r\n              BV1kp4y1F7Jw\r\n            </a>\r\n            。\r\n          </p>\r\n          <p>\r\n            本站也支持<route-link path=\"/chart-ptt\">手动录入成绩</route-link>。\r\n            <strong>存档的数据全部保存在浏览器内</strong>，在清除浏览器缓存后，存档内的数据将会永远丢失。因此\r\n            <strong>若通过手动录入谱面成绩，请自行定期导出JSON进行备份</strong>\r\n            ，否则可能会出现需要重新录入的麻烦。\r\n          </p>\r\n          <p>\r\n            本工具有一个配套的脚本，可以用于在{this.renderArcaeaOfficialLink()}\r\n            获取一些信息，包括获取搭档数据、Web API查分（需订阅Arcaea Online）等。\r\n          </p>\r\n          <p>\r\n            关于此脚本更详细的使用方法，请参考\r\n            <a href=\"docs/plugin-usage.html\" target=\"_blank\">\r\n              使用说明\r\n            </a>\r\n            ，下面是简单的使用说明：\r\n          </p>\r\n          <p>\r\n            在电脑上，使用<code>Chrome/Edge</code>浏览器打开\r\n            {this.renderArcaeaOfficialLink()}\r\n            并登录，按F12打开开发者工具，找到控制台（Console），复制并执行以下脚本代码即可调用此脚本。\r\n          </p>\r\n          <div>\r\n            <blockquote id=\"the-script\">\r\n              import(\"{new URL(\"services/cross-site-script.js\", process.env.BASE_URI).href}\");\r\n            </blockquote>\r\n          </div>\r\n          <p>\r\n            脚本执行后左下角会出现一个悬浮按钮，点击按钮弹出插件弹框，根据弹框内提示操作即可。关闭弹框后可通过\r\n            <kbd>Ctrl + B</kbd>重新唤起弹框。\r\n          </p>\r\n          <p>若需要频繁使用此脚本，可以使用油猴插件实现在访问Arcaea官网时自动执行。</p>\r\n          <p>若要在手机上执行此脚本，可以参考这篇文章：</p>\r\n          <p>\r\n            <a href=\"https://www.zhihu.com/question/411017015\" target=\"_blank\">\r\n              https://www.zhihu.com/question/411017015\r\n            </a>\r\n          </p>\r\n        </div>\r\n        <dialog ref={this.createProfileDialog} id=\"create-profile\">\r\n          <form>\r\n            <div class=\"h4\">创建存档</div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"username\" class=\"form-label\">\r\n                用户名（仅用于区分存档和b30生成）\r\n              </label>\r\n              <input class=\"form-control\" id=\"username\" name=\"username\" required />\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"potential\" class=\"form-label\">\r\n                潜力值\r\n              </label>\r\n              <input\r\n                class=\"form-control\"\r\n                id=\"potential\"\r\n                name=\"potential\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min={0}\r\n                max={this.profileService.formatPotential(maximumPotential)}\r\n                required\r\n              />\r\n            </div>\r\n            {this.renderFooter()}\r\n          </form>\r\n        </dialog>\r\n        <dialog ref={this.editProfileDialog} id=\"edit-profile\">\r\n          <form>\r\n            <div class=\"h4\">修改存档</div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"ptt\" class=\"form-label\">\r\n                潜力值\r\n              </label>\r\n              <input\r\n                ref={this.editPtt}\r\n                class=\"form-control\"\r\n                id=\"ptt\"\r\n                name=\"ptt\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min={0}\r\n                max={this.profileService.formatPotential(maximumPotential)}\r\n                required\r\n              />\r\n            </div>\r\n            {this.renderFooter()}\r\n          </form>\r\n        </dialog>\r\n        <dialog ref={this.switchProfileDialog} id=\"switch-profile\">\r\n          <form>\r\n            <div class=\"h4\">选择存档</div>\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <select class=\"form-select\" name=\"profile\" required></select>\r\n              </div>\r\n            </div>\r\n            {this.renderFooter()}\r\n          </form>\r\n        </dialog>\r\n        <dialog ref={this.importProfileDialog} id=\"import-profile\">\r\n          <form>\r\n            <div class=\"h4\">导入存档</div>\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <input type=\"file\" class=\"form-control\" accept=\".json\" name=\"file\" />\r\n              </div>\r\n            </div>\r\n            {this.renderFooter()}\r\n          </form>\r\n        </dialog>\r\n        <dialog ref={this.importSt3Dialog} id=\"import-scores\">\r\n          <form>\r\n            <div class=\"h4\">从Arcaea本地存档st3文件导入成绩</div>\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <input type=\"file\" class=\"form-control\" name=\"file\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n              <div class=\"col-auto\">\r\n                <span class=\"form-text\">\r\n                  已知问题1：st3内只有谱面最高等级的通关类型信息，没有最佳成绩当次的通关类型信息。通关类型从高到低的顺序是：\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <span class=\"form-text\">\r\n                  {this.renderClearImg(ClearRank.PureMemory)}\r\n                  {\">\"}\r\n                  {this.renderClearImg(ClearRank.FullRecall)}\r\n                  {\">\"}\r\n                  {this.renderClearImg(ClearRank.HardClear)}\r\n                  {\">\"}\r\n                  {this.renderClearImg(ClearRank.NormalClear)}\r\n                  {\">\"}\r\n                  {this.renderClearImg(ClearRank.EasyClear)}\r\n                  {\">\"}\r\n                  {this.renderClearImg(ClearRank.TrackLost)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-auto\">\r\n                <span class=\"form-text\">\r\n                  例如有一个谱面最佳成绩是9990000分0-1，实际通关类型应当为NC（\r\n                  {this.renderClearImg(ClearRank.NormalClear)}\r\n                  ），但先前曾经9980000分4-0全连过，st3存档内的数据将会是FR（\r\n                  {this.renderClearImg(ClearRank.FullRecall)}\r\n                  ），从而可能导致b30里的通关显示存在一些小瑕疵。\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n              <div class=\"col-auto\">\r\n                <span class=\"form-text\">\r\n                  已知问题2：st3内的成绩时间并非精确时间戳，而是除以了1000的若干次方的整数部分，和实际时间可能会有最多一百万秒（约11.57天）的差距。\r\n                </span>\r\n              </div>\r\n            </div>\r\n            {this.renderFooter()}\r\n          </form>\r\n        </dialog>\r\n      </>\r\n    );\r\n  }\r\n\r\n  createProfile = () => {\r\n    this.openFormModal(this.createProfileDialog, async (data) => {\r\n      const username = data.get(\"username\") as string;\r\n      const ptt = +data.get(\"potential\")!;\r\n      if (!isNaN(ptt)) {\r\n        await this.profileService.createOrUpdateProfile(username, ptt);\r\n        await this.profileService.useProfile(username);\r\n        await this.updateGreet();\r\n      }\r\n    });\r\n  };\r\n\r\n  async updateProfile(currentProfile: Profile) {\r\n    this.editPtt.value = currentProfile.potential;\r\n    this.openFormModal(this.editProfileDialog, async (data) => {\r\n      const ptt = +data.get(\"ptt\")!;\r\n      if (!isNaN(ptt)) {\r\n        await this.profileService.createOrUpdateProfile(currentProfile.username, ptt);\r\n      }\r\n      this.updateGreet();\r\n    });\r\n  }\r\n\r\n  switchProfile = async () => {\r\n    const profiles = await this.profileService.getProfileList();\r\n    if (!profiles.length) {\r\n      if (await confirm(\"当前没有存档，是否前往创建？\")) {\r\n        this.createProfile();\r\n      }\r\n      return;\r\n    }\r\n    const profile = await this.profileService.getProfile();\r\n    const select = this.switchProfileDialog.querySelector('select[name=\"profile\"]')!;\r\n    select.innerHTML = profiles.map((p) => `<option>${p}</option>`).join(\"\");\r\n    select.value = profile?.username ?? \"\";\r\n    this.openFormModal(this.switchProfileDialog, async (data) => {\r\n      const profile = data.get(\"profile\");\r\n      if (profile && typeof profile === \"string\") {\r\n        await this.profileService.useProfile(profile);\r\n        this.updateGreet();\r\n      }\r\n    });\r\n  };\r\n\r\n  async exportProfile(profile: Profile) {\r\n    await this.profileService.exportProfile(profile);\r\n  }\r\n\r\n  importProfile = () => {\r\n    this.openFormModal(this.importProfileDialog, async (data) => {\r\n      const file = data.get(\"file\");\r\n      if (file instanceof File) {\r\n        await this.profileService.importProfile(file);\r\n      }\r\n    });\r\n  };\r\n\r\n  async importSt3(profile: Profile) {\r\n    this.openFormModal(this.importSt3Dialog, async (data) => {\r\n      const file = data.get(\"file\");\r\n      if (file instanceof File) {\r\n        const message = signal(\"\");\r\n        const result = await loading(\r\n          (async () => {\r\n            const result = await this.profileService.importDB(file, profile, (msg) => message.set(msg));\r\n            await delay(300);\r\n            return result;\r\n          })(),\r\n          <div>{message}</div>\r\n        );\r\n        const { count, difficulties, skipped } = result;\r\n        alert(\r\n          <div>\r\n            <p>\r\n              成功导入：\r\n              {Object.entries(difficulties).map(([key, value]) => (\r\n                <>\r\n                  {value}个<span style:color={`var(--${key})`}>{key.toUpperCase()}</span>{\" \"}\r\n                </>\r\n              ))}\r\n            </p>\r\n            {skipped.length ? <p>跳过：</p> : nil}\r\n            {skipped.map((msg) => (\r\n              <p>{msg}</p>\r\n            ))}\r\n            <p>共{count}个成绩</p>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  async showProfileStats(profile: Profile) {\r\n    const { ratings } = await this.chart.getStatistics();\r\n    const Desc: FC<{ label: JSXChildNode; content: string | number; style?: string }> = ({ label, content, style }) => {\r\n      return (\r\n        <div class=\"row\" style={style ?? null}>\r\n          <div class=\"col\">{label}</div>\r\n          <div class=\"col\">{content}</div>\r\n        </div>\r\n      );\r\n    };\r\n    type TabDifficulty = Difficulty | null;\r\n    const displayOrder: TabDifficulty[] = [\r\n      Difficulty.Past,\r\n      Difficulty.Present,\r\n      Difficulty.Future,\r\n      Difficulty.Beyond,\r\n      null,\r\n    ];\r\n    const Stat: FC<{ stat: BestStatistics }> = ({ stat }) => {\r\n      const descriptsions = [\r\n        <Desc label=\"游玩总数\" content={stat.total}></Desc>,\r\n        <Desc label=\"Clear\" content={stat.clear}></Desc>,\r\n        <Desc label=\"Full Recall\" content={stat.fr} style=\"color: #a470b5;\"></Desc>,\r\n        <Desc label=\"Pure Memory\" content={stat.pm} style=\"color: #40c4c5;\"></Desc>,\r\n      ];\r\n      if (stat.max) {\r\n        descriptsions.push(<Desc label=\"理论值\" content={stat.max} style=\"text-shadow: 1px 1px #0f7185dd;\"></Desc>);\r\n      }\r\n      const percentage = (rate: number) => (isNaN(rate) ? \"-\" : `${(rate * 100).toFixed(4)}%`);\r\n      descriptsions.push(\r\n        <Desc\r\n          label={\r\n            <span>\r\n              EX以上P率<help-tip>EX以上的总分数（PM按照1000W算）/谱面数量*1000W</help-tip>\r\n            </span>\r\n          }\r\n          content={percentage(stat.acc)}\r\n        ></Desc>\r\n      );\r\n      if (stat.detailed) {\r\n        const hideNoNoteResult = \"手动录入的无判定信息的成绩不会计入\";\r\n        descriptsions.push(\r\n          <Desc\r\n            label={\r\n              <span>\r\n                大P总数\r\n                <help-tip>{hideNoNoteResult}</help-tip>\r\n              </span>\r\n            }\r\n            content={stat.perfect}\r\n          ></Desc>,\r\n          <Desc\r\n            label={\r\n              <span>\r\n                小P总数\r\n                <help-tip>{hideNoNoteResult}</help-tip>\r\n              </span>\r\n            }\r\n            content={stat.great}\r\n          ></Desc>,\r\n          <Desc\r\n            label={\r\n              <span>\r\n                大P准度<help-tip>大P数占总物量数的比例，{hideNoNoteResult}</help-tip>\r\n              </span>\r\n            }\r\n            content={percentage(stat.pacc)}\r\n          ></Desc>\r\n        );\r\n        if (stat.rest <= 1e5) {\r\n          descriptsions.push(<Desc label=\"距游玩谱面全理论\" content={stat.rest}></Desc>);\r\n        }\r\n      }\r\n      return <div>{descriptsions}</div>;\r\n    };\r\n    const Tab: FC<{ difficulty: TabDifficulty }> = ({ difficulty }) => {\r\n      return (\r\n        <span\r\n          role=\"tab\"\r\n          class=\"tab\"\r\n          class:active={computed(() => difficulty === currentDifficulty())}\r\n          var:difficulty-color={difficulty && `var(--${difficulty})`}\r\n          onClick={() => currentDifficulty.set(difficulty)}\r\n        >\r\n          {difficulty ? difficulty.toUpperCase() : \"全部\"}\r\n        </span>\r\n      );\r\n    };\r\n    const currentDifficulty = signal<TabDifficulty>(Difficulty.Future);\r\n    const currentRating = signal(\"\");\r\n    const currentStats = signal<BestStatistics | null>(null);\r\n    const showPotential = signal(true);\r\n    const cleanup = effect(() => {\r\n      const difficulty = currentDifficulty() || undefined;\r\n      const rating = currentRating();\r\n      this.profileService\r\n        .getProfileStatistics(profile, {\r\n          difficulty,\r\n          rating: rating ? parseRating(rating) : void 0,\r\n        })\r\n        .then((stas) => {\r\n          currentStats.set(stas);\r\n        });\r\n    });\r\n    const { potential, username } = profile;\r\n    await this.profileStats.showAlert(\r\n      <div slot=\"content\">\r\n        <h2>存档统计</h2>\r\n        <div class=\"user\">\r\n          {username}\r\n          <potential-badge\r\n            title=\"点击切换潜力值显示\"\r\n            potential={computed(() => (showPotential() ? +potential : -1))}\r\n            onClick={() => showPotential.update((show) => !show)}\r\n          ></potential-badge>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          {displayOrder.map((difficulty) => (\r\n            <Tab difficulty={difficulty}></Tab>\r\n          ))}\r\n        </div>\r\n        <div class=\"input-group mb-3\">\r\n          <label for=\"rating\" class=\"input-group-text\">\r\n            等级\r\n          </label>\r\n          <select h-model={currentRating} class=\"form-select\" name=\"rating\" id=\"rating\">\r\n            <option value=\"\">全部</option>\r\n            {ratings.map((rating) => {\r\n              const ratingText = formatRating(rating);\r\n              return <option value={ratingText}>{ratingText}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div class=\"stats\">\r\n          <AutoRender>\r\n            {() => {\r\n              const stat = currentStats();\r\n              if (!stat) {\r\n                return nil;\r\n              }\r\n              return <Stat stat={stat}></Stat>;\r\n            }}\r\n          </AutoRender>\r\n        </div>\r\n      </div>,\r\n      true\r\n    );\r\n    cleanup();\r\n  }\r\n\r\n  async deleteProfile(profile: Profile) {\r\n    if (!(await confirm(\"删除操作不可撤销，是否继续？\"))) {\r\n      return;\r\n    }\r\n    await this.profileService.deleteProfile(profile.username);\r\n    await this.updateGreet();\r\n  }\r\n\r\n  private renderClearImg(clear: ClearRank) {\r\n    return <img src={this.gateway.direct(this.resolver.resolveClearImg(clear)).href} class=\"inline-img\"></img>;\r\n  }\r\n\r\n  private renderArcaeaOfficialLink() {\r\n    return (\r\n      <a href=\"https://arcaea.lowiro.com/zh/\" target=\"_blank\">\r\n        Arcaea官网\r\n      </a>\r\n    );\r\n  }\r\n\r\n  private renderFooter() {\r\n    return (\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary cancel\">\r\n          取消\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-primary confirm\">\r\n          确认\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private openFormModal(modal: HTMLDialogElement, onConfirm: (data: FormData) => Promise<void>) {\r\n    const form = modal.querySelector(\"form\")!;\r\n    const confirmBtn = modal.querySelector(\"button.confirm\")!;\r\n    const cancelBtn = modal.querySelector(\"button.cancel\")!;\r\n    const handleSubmit = async () => {\r\n      if (!form.reportValidity()) {\r\n        return;\r\n      }\r\n      await onConfirm(new FormData(form));\r\n      modal.close();\r\n    };\r\n    form.onsubmit = (e) => {\r\n      e.preventDefault();\r\n      handleSubmit();\r\n    };\r\n    cancelBtn.onclick = () => {\r\n      modal.close();\r\n    };\r\n    confirmBtn.onclick = handleSubmit;\r\n    modal.showModal();\r\n  }\r\n\r\n  private async updateGreet() {\r\n    const migrate = await this.profileService.checkMigration();\r\n    if (migrate) await migrate();\r\n    const profile = await this.profileService.getProfile();\r\n    this.greet.set(profile);\r\n  }\r\n}\r\n","import { create } from \"sheetly\";\nexport let text = \"dialog{border-width:var(--bs-border-width);border-radius:var(--bs-border-radius);border-color:var(--bs-border-color);box-shadow:var(--bs-box-shadow);--bs-modal-footer-gap:4px}blockquote{padding:8px;border-radius:4px;background-color:var(--bs-gray-200)}.cross-site-script>div>div{margin:8px 0}.modal-footer{margin:.5em 0}.inline-img{width:3em;height:3em}#greet>.col{display:flex;align-items:center}#the-script{overflow-x:auto;white-space:pre;user-select:all}.user{display:flex;align-items:center}.user potential-badge{cursor:pointer}.tab{color:var(--difficulty-color);cursor:pointer;margin-right:.25em}.tab.active{border-bottom:.125em solid var(--difficulty-color,var(--bs-body-color))}.stats{width:300px;height:250px}\";\nexport const sheet = create(text, import.meta.url);\n","import { Attribute, Component, HyplateElement, computed } from \"hyplate\";\r\nimport type { GlobalAttributes, Signal } from \"hyplate/types\";\r\nimport { bootstrap } from \"../../styles\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport { $Router, Router } from \"../../pages/router\";\r\n\r\nexport interface RouteLinkProps {}\r\n\r\nexport\r\n@Component({\r\n  tag: \"route-link\",\r\n  styles: [bootstrap],\r\n})\r\nclass RouteLink extends HyplateElement {\r\n  @Attribute(\"path\")\r\n  accessor path!: Signal<string | null>;\r\n  @Inject($Router)\r\n  accessor router!: Router;\r\n  override render() {\r\n    return (\r\n      <a\r\n        href={computed(() => `#${this.path()}`)}\r\n        onClick={(e) => {\r\n          if (e.ctrlKey) {\r\n            return;\r\n          }\r\n          const path = this.path();\r\n          if (!path) {\r\n            return;\r\n          }\r\n          this.router.navigate(this.router.matchRoute(path));\r\n        }}\r\n      >\r\n        <slot></slot>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      \"route-link\": JSXAttributes<RouteLinkProps & GlobalAttributes, RouteLink>;\r\n    }\r\n  }\r\n}\r\n","import { ChartQuery } from \"../../components/chart-query\";\r\nimport { Route } from \"../router\";\r\n\r\nexport const ChartsRoute: Route = {\r\n  path: \"/query-charts\",\r\n  title: `定数查谱`,\r\n  setup() {\r\n    return new ChartQuery();\r\n  },\r\n};\r\n","import { bootstrap } from \"../../styles\";\r\nimport { sheet } from \"./style.css.js\";\r\nimport { $ChartService, ChartService, ChartStatistics, SearchResult } from \"../../../services/declarations\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport { FancyDialog } from \"../fancy-dialog\";\r\nimport { ChartInfo } from \"../chart-info\";\r\nimport { Component, For, Future, HyplateElement, noop, signal, watch } from \"hyplate\";\r\nimport { TransitionToggle } from \"../../../utils/experimental\";\r\nimport { $Router, Router } from \"../../pages/router\";\r\n\r\nexport type ChartQueryParams = \"min\" | \"max\";\r\n\r\nexport\r\n@Component({\r\n  tag: \"chart-query\",\r\n  styles: [bootstrap, sheet],\r\n})\r\nclass ChartQuery extends HyplateElement {\r\n  @Inject($ChartService)\r\n  accessor chartService!: ChartService;\r\n  @Inject($Router)\r\n  accessor router!: Router;\r\n\r\n  info = new FancyDialog();\r\n\r\n  min = signal(NaN);\r\n  max = signal(NaN);\r\n  results = signal<[string, SearchResult[]][]>([]);\r\n\r\n  override render() {\r\n    this.effect(() => {\r\n      const { max: _max, min: _min } = this.router.parseQuery<ChartQueryParams>();\r\n      const max = +_max!,\r\n        min = +_min!;\r\n      if (min >= 0) {\r\n        this.min.set(min);\r\n        if (max >= min) {\r\n          this.max.set(max);\r\n          this.query();\r\n        }\r\n      }\r\n      return noop;\r\n    });\r\n\r\n    this.effect(() =>\r\n      watch(this.min, (min) => {\r\n        // 包括NaN的情况\r\n        if (!(this.max() >= min)) {\r\n          this.max.set(min);\r\n        }\r\n      })\r\n    );\r\n\r\n    return <Future promise={this.chartService.getStatistics()}>{(stats) => this._render(stats)}</Future>;\r\n  }\r\n\r\n  _render({ maximumConstant, minimumConstant }: ChartStatistics) {\r\n    const component = this;\r\n    return (\r\n      <>\r\n        {this.info}\r\n        <form\r\n          class=\"chart-query-form m-3\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            this.query();\r\n          }}\r\n        >\r\n          <div class=\"input-group my-3\">\r\n            <input\r\n              name=\"min-constant\"\r\n              type=\"number\"\r\n              min={minimumConstant}\r\n              max={maximumConstant}\r\n              step=\"0.1\"\r\n              placeholder={minimumConstant.toFixed(1)}\r\n              class=\"form-control input\"\r\n              h-model:number={this.min}\r\n              keypress-submit\r\n            />\r\n            <div class=\"input-group-text\">≤ 定数 ≤</div>\r\n            <input\r\n              name=\"max-constant\"\r\n              type=\"number\"\r\n              min={minimumConstant}\r\n              max={maximumConstant}\r\n              step=\"0.1\"\r\n              placeholder={maximumConstant.toFixed(1)}\r\n              class=\"form-control input\"\r\n              h-model:number={this.max}\r\n              keypress-submit\r\n            />\r\n          </div>\r\n          <div class=\"my-3\">\r\n            <button type=\"button\" class=\"btn btn-primary query me-2\" onClick={this.query}>\r\n              查询\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary roll\" onClick={this.roll}>\r\n              roll一个\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div class=\"result-table\">\r\n          <For of={this.results}>\r\n            {([constant, results]) => {\r\n              return (\r\n                <div class=\"p-3 border\">\r\n                  <div class=\"result-item row\">\r\n                    <div class=\"constant col-2\">{constant}</div>\r\n                    <div class=\"charts col-10\">\r\n                      {results.map((result) => (\r\n                        <div\r\n                          class=\"cover-container\"\r\n                          var:difficulty={`var(--${result.difficulty})`}\r\n                          onClick={async function () {\r\n                            const toggle = new TransitionToggle({\r\n                              name: \"song-cover\",\r\n                              main: this,\r\n                              show: async (hide) => {\r\n                                component.info.showConfirm(\r\n                                  <ChartInfo\r\n                                    chart={result.chart}\r\n                                    song={result.song}\r\n                                    chartService={component.chartService}\r\n                                  />,\r\n                                  (done) => (\r\n                                    <button\r\n                                      class=\"btn btn-primary\"\r\n                                      onClick={async () => {\r\n                                        await hide(() => {\r\n                                          done();\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      确认\r\n                                    </button>\r\n                                  )\r\n                                );\r\n                              },\r\n                            });\r\n                            toggle.startViewTransition();\r\n                          }}\r\n                        >\r\n                          <img class=\"cover\" loading=\"lazy\" src={result.cover} />\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            }}\r\n          </For>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  getFormModel = () => {\r\n    const min = this.min(),\r\n      max = this.max();\r\n    return {\r\n      min: isNaN(min) ? -Infinity : min,\r\n      max: isNaN(max) ? Infinity : max,\r\n    };\r\n  };\r\n  query = async () => {\r\n    const { min, max } = this.getFormModel();\r\n    this.router.updateQuery<ChartQueryParams>({\r\n      min: min.toFixed(1),\r\n      max: max.toFixed(1),\r\n    });\r\n    const charts = await this.chartService.queryChartsByConstant(min, max);\r\n    this.setResults(charts);\r\n  };\r\n  roll = async () => {\r\n    const { min, max } = this.getFormModel();\r\n    const chart = await this.chartService.roll(min, max);\r\n    if (chart) {\r\n      this.setResults([chart]);\r\n    } else {\r\n      this.setResults([]);\r\n    }\r\n  };\r\n  setResults = (charts: SearchResult[]) => {\r\n    const groups = charts.reduce<Record<string, SearchResult[]>>((map, result) => {\r\n      (map[result.constant.toFixed(1)] ??= []).push(result);\r\n      return map;\r\n    }, {});\r\n    this.results.set(Object.entries(groups));\r\n  };\r\n}\r\n","import { create } from \"sheetly\";\nexport let text = \".input{max-width:7rem}.result-item{box-sizing:border-box}.cover-container{border:8px solid var(--difficulty);cursor:pointer}.cover-container img.cover{width:64px;height:64px}.charts{display:flex;flex-wrap:wrap;gap:1rem}\";\nexport const sheet = create(text, import.meta.url);\n","import { sheet } from \"./style.css.js\";\r\nimport { bootstrap } from \"../../styles\";\r\nimport { Chart, Song } from \"../../../models/music-play\";\r\nimport { element, mount } from \"hyplate\";\r\nimport type { FC } from \"hyplate/types\";\r\nimport { addSheet } from \"sheetly\";\r\nimport { ChartService } from \"../../../services/declarations\";\r\n\r\nexport const ChartInfo: FC<{ song: Song; chart: Chart; chartService: ChartService }> = ({\r\n  chart,\r\n  song,\r\n  chartService,\r\n}) => {\r\n  const container = element(\"div\");\r\n  const shadow = container.attachShadow({ mode: \"open\" });\r\n  addSheet([bootstrap, sheet], shadow);\r\n  mount(\r\n    <>\r\n      <div class=\"cover-layout\">\r\n        <div class=\"cover-container\">\r\n          <img class=\"cover\" src={chartService.getCover(chart, song)} />\r\n        </div>\r\n      </div>\r\n      <div class=\"row my-3\">\r\n        <div class=\"col\">\r\n          <div>\r\n            名称：<span class=\"name\">{chartService.getName(chart, song)}</span>\r\n          </div>\r\n          <div>\r\n            等级：\r\n            <span class=\"level\">\r\n              {chart.difficulty} {`${chart.level}${chart.plus ? \"+\" : \"\"}`}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            定数：<span class=\"constant\">{chart.constant.toFixed(1)}</span>\r\n          </div>\r\n          <div>\r\n            曲包：<span class=\"pack\">{song.pack}</span>\r\n          </div>\r\n          <div>\r\n            bpm：<span class=\"bpm\">{chartService.getBPM(chart, song)}</span>\r\n          </div>\r\n          <div>\r\n            note数：<span class=\"notes\">{chart.note}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>,\r\n    shadow\r\n  );\r\n  return <div ref={container} var:difficulty={`var(--${chart.difficulty})`}></div>;\r\n};\r\n","import { create } from \"sheetly\";\nexport let text = \".cover-layout{display:flex;justify-content:center}.cover-container{view-transition-name:song-cover;border:8px solid var(--difficulty)}.cover{width:128px;height:128px}\";\nexport const sheet = create(text, import.meta.url);\n","import { style } from \"hyplate\";\r\nimport { PromiseOr } from \"./misc\";\r\nimport { future } from \"./future\";\r\n\r\nexport const startViewTransition = (callback: ViewTransitionCallback, document = window.document): ViewTransition => {\r\n  if (document.startViewTransition) {\r\n    return document.startViewTransition(callback);\r\n  } else {\r\n    const finished = future();\r\n    const ready = future();\r\n    const updated = future();\r\n    queueMicrotask(async () => {\r\n      try {\r\n        await callback();\r\n        updated.done();\r\n        ready.done();\r\n        finished.done();\r\n      } catch (error) {\r\n        updated.abort(error);\r\n        ready.abort(error);\r\n        finished.abort(error);\r\n      }\r\n    });\r\n    return {\r\n      finished: finished.promise,\r\n      ready: ready.promise,\r\n      updateCallbackDone: updated.promise,\r\n      skipTransition() {\r\n        const message = new DOMException(\"Transition was skipped\");\r\n        ready.abort(message);\r\n        updated.done();\r\n        finished.done();\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nexport type ViewTransitionElement = HTMLElement | MathMLElement | SVGElement;\r\n\r\nconst vtn = \"viewTransitionName\";\r\n\r\ntype HideInTransitionCallback = () => PromiseOr<void>;\r\n\r\nexport interface TransitionToggleOptions {\r\n  name?: string;\r\n  main: ViewTransitionElement;\r\n  show: (\r\n    hideInTransition: (callback: HideInTransitionCallback) => Promise<void>\r\n  ) => PromiseOr<ViewTransitionElement | void>;\r\n}\r\n\r\ntype StyleRestore = Partial<CSSStyleDeclaration>;\r\n\r\nexport class TransitionToggle {\r\n  #transitionName;\r\n  #options;\r\n  #hasTransitionName;\r\n  constructor(options: TransitionToggleOptions) {\r\n    this.#hasTransitionName = !!options.name;\r\n    this.#transitionName = options?.name ?? `transition-pair-${crypto.randomUUID()}`;\r\n    this.#options = options;\r\n  }\r\n\r\n  get transitionName() {\r\n    return this.#transitionName;\r\n  }\r\n\r\n  async startViewTransition() {\r\n    const { main, show } = this.#options;\r\n    const mainRestore = this.#touch(main);\r\n    const document = main.ownerDocument;\r\n    const hideFuture = future();\r\n    const vt = startViewTransition(async () => {\r\n      this.#fade(main);\r\n      const hideInTransition = async (hide: HideInTransitionCallback) => {\r\n        let shadowRestore: StyleRestore | undefined;\r\n        if (shadow) {\r\n          shadowRestore = this.#touch(shadow);\r\n        }\r\n        try {\r\n          const vt2 = startViewTransition(async () => {\r\n            if (shadow) {\r\n              this.#fade(shadow);\r\n            }\r\n            this.#recover(main, mainRestore);\r\n            this.#show(main);\r\n            await hide();\r\n          }, document);\r\n          await vt2.updateCallbackDone;\r\n          await vt2.ready;\r\n          await vt2.finished;\r\n          hideFuture.done();\r\n        } catch (error) {\r\n          hideFuture.abort(error);\r\n        } finally {\r\n          this.#recover(main, mainRestore);\r\n          if (shadow && shadowRestore) {\r\n            this.#recover(shadow, shadowRestore);\r\n          }\r\n        }\r\n      };\r\n      const shadow = await show(hideInTransition);\r\n      if (shadow) {\r\n        this.#show(shadow);\r\n      } else {\r\n        if (!this.#hasTransitionName) {\r\n          vt.skipTransition();\r\n          throw new Error(\"Transition Toggle: options.show() should return a shadow element.\");\r\n        }\r\n      }\r\n    }, document);\r\n    await vt.updateCallbackDone;\r\n    await vt.ready;\r\n    await vt.finished;\r\n    return hideFuture;\r\n  }\r\n\r\n  #touch(main: ViewTransitionElement) {\r\n    const visibility = main.style.visibility;\r\n    const name = main.style[vtn];\r\n    style(main, vtn, this.#transitionName);\r\n    return {\r\n      visibility,\r\n      [vtn]: name,\r\n    };\r\n  }\r\n\r\n  #fade(main: ViewTransitionElement) {\r\n    style(main, vtn, \"none\");\r\n    style(main, \"visibility\", \"hidden\");\r\n  }\r\n\r\n  #show(shadow: ViewTransitionElement) {\r\n    style(shadow, vtn, this.transitionName);\r\n  }\r\n\r\n  #recover(main: ViewTransitionElement, restore: StyleRestore) {\r\n    Object.assign(main.style, restore);\r\n  }\r\n}\r\n","import { WorldModeCalculator } from \"../../components/world-map-calculator\";\r\nimport { Route } from \"../router\";\r\n\r\nexport const WorldModeRoute: Route = {\r\n  cahce: true,\r\n  path: \"/world-mode\",\r\n  title: \"世界模式\",\r\n  setup() {\r\n    return new WorldModeCalculator();\r\n  },\r\n};\r\n","import { sheet } from \"./style.css.js\";\r\nimport { bootstrap, title } from \"../../styles\";\r\nimport { WorldMapSelect } from \"../world-map-select\";\r\nimport { WorldMapNormal } from \"../world-map-normal\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport {\r\n  $ChartService,\r\n  $MusicPlayService,\r\n  $ProfileService,\r\n  $WorldModeService,\r\n  ChartService,\r\n  InverseProgressSolution,\r\n  MusicPlayService,\r\n  ProfileService,\r\n  WorldMapBonus,\r\n  type WorldModeService,\r\n} from \"../../../services/declarations\";\r\nimport { FancyDialog, alert, confirm } from \"../fancy-dialog\";\r\nimport { HyplateElement, Component, listen, signal, element, nil, computed, AutoRender, Future, noop } from \"hyplate\";\r\nimport { ChartInfo } from \"../chart-info\";\r\nimport { CharacterPicker, renderCharacterStepInput } from \"../character-picker\";\r\nimport { $Router, Router } from \"../../pages/router\";\r\nimport { CurrentProgress, NormalWorldMap } from \"../../../models/world-mode\";\r\nimport { truncate } from \"../../../utils/math\";\r\n\r\nexport type WorldModeParams = \"mapId\";\r\n\r\nconst NEW_MAP = \"新版梯\";\r\nconst LEGACY_MAP = \"遗产梯\";\r\n\r\nexport\r\n@Component({\r\n  tag: \"world-mode-calculator\",\r\n  styles: [bootstrap, sheet, title],\r\n})\r\nclass WorldModeCalculator extends HyplateElement {\r\n  @Inject($WorldModeService)\r\n  accessor worldMode!: WorldModeService;\r\n  @Inject($MusicPlayService)\r\n  accessor musicPlay!: MusicPlayService;\r\n  @Inject($ProfileService)\r\n  accessor profile!: ProfileService;\r\n  @Inject($ChartService)\r\n  accessor chart!: ChartService;\r\n  @Inject($Router)\r\n  accessor router!: Router;\r\n\r\n  select = new WorldMapSelect();\r\n  worldMap = new WorldMapNormal();\r\n  characterPicker = new CharacterPicker();\r\n  scoreController = new FancyDialog();\r\n\r\n  jumpForm = element(\"form\");\r\n  completed = signal(NaN);\r\n  rest = signal(NaN);\r\n  restMax = signal<number | null>(null);\r\n\r\n  calcForm = element(\"form\");\r\n  /**\r\n   * 用于正算\r\n   */\r\n  step = signal(NaN);\r\n  potential = signal(NaN);\r\n  /**\r\n   * 用于正算\r\n   */\r\n  worldType = signal(\"new\");\r\n  stamina = signal(\"1\");\r\n  fragment = signal(\"1\");\r\n  memoryx4 = signal(false);\r\n  progress = signal(NaN);\r\n\r\n  inverseProgressForm = element(\"form\");\r\n  /**\r\n   * 用于逆算\r\n   */\r\n  step2 = signal(NaN);\r\n  lowProgress = signal(NaN);\r\n  highProgress = signal(NaN);\r\n\r\n  /**\r\n   * 用于逆算，默认为空，逆算不显示任何带加成的方案\r\n   */\r\n  worldType2 = signal(\"\");\r\n  solutions = signal<InverseProgressSolution[]>([]);\r\n\r\n  override render() {\r\n    this.autorun(() => {\r\n      const selected = this.select.selected();\r\n      this.resetCalculation();\r\n      this.worldMap.setCurrentPlatform(null);\r\n      if (selected) {\r\n        this.worldMap.setMap(selected);\r\n        const worldType = selected.legacy ? \"legacy\" : \"new\";\r\n        this.worldType.set(worldType);\r\n        this.worldType2.set(worldType);\r\n      }\r\n    });\r\n\r\n    this.effect(() => {\r\n      const params = this.router.parseQuery<WorldModeParams>();\r\n      const { mapId } = params;\r\n      this.select.setMapId(mapId || null);\r\n      return noop;\r\n    });\r\n\r\n    this.autorun(() => {\r\n      this.storeParams();\r\n    });\r\n\r\n    this.effect(() =>\r\n      listen(this.worldMap)<number>(\"click-cell\", ({ detail: targetLevel }) => {\r\n        const completed = this.completed(),\r\n          rest = this.rest();\r\n        const contexts = this.#getMapCurrentPlatformContexts();\r\n        if (isNaN(completed) || isNaN(rest)) {\r\n          const rest = signal(NaN);\r\n          confirm(\r\n            <form>\r\n              <div>设置当前地图进度为第{targetLevel}个台阶：</div>\r\n              <div>\r\n                <label class=\"col-form-label\">阶梯内剩余进度</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  class=\"form-control\"\r\n                  type=\"number\"\r\n                  min={0.1}\r\n                  max={contexts[targetLevel - 1]!.platform.length}\r\n                  step={0.1}\r\n                  h-model:number={rest}\r\n                  keypress-submit\r\n                ></input>\r\n              </div>\r\n            </form>\r\n          ).then((confirmed) => {\r\n            if (confirmed) {\r\n              this.completed.set(targetLevel - 1);\r\n              this.rest.set(rest());\r\n              this.jumpPlatform();\r\n            }\r\n          });\r\n          return;\r\n        }\r\n\r\n        if (targetLevel < completed + 1) {\r\n          alert(\"此格已完成！\");\r\n          return;\r\n        }\r\n        const currentProgress = this.worldMap.currentProgress();\r\n        if (!currentProgress) {\r\n          alert(\"未确认设置进度\");\r\n          return;\r\n        }\r\n        const [low, high] = this.worldMode.computeProgressRange(\r\n          this.worldMap.currentMap()!,\r\n          currentProgress,\r\n          targetLevel\r\n        );\r\n        this.lowProgress.set(low);\r\n        this.highProgress.set(high);\r\n        this.inverseProgress();\r\n      })\r\n    );\r\n    this.effect(() => listen(this.calcForm)(\"change\", this.calculateProgress));\r\n    this.effect(() => listen(this.inverseProgressForm)(\"change\", this.inverseProgress));\r\n    return (\r\n      <Future promise={this.musicPlay.getStatistics()}>{(stats) => this._render(stats.maximumSinglePotential)}</Future>\r\n    );\r\n  }\r\n  _render(maximumSinglePotential: number) {\r\n    const isNotLegacy = computed(() => this.worldType() !== \"legacy\");\r\n    const isNotNew = computed(() => this.worldType() !== \"new\");\r\n    return (\r\n      <>\r\n        {this.characterPicker}\r\n        <fancy-dialog ref={this.scoreController} id=\"score-controller\"></fancy-dialog>\r\n        <div class=\"title mx-3\">选择地图</div>\r\n        {this.select}\r\n        {this.worldMap}\r\n        <div class=\"title mx-3\">设置地图当前进度</div>\r\n        <form ref={this.jumpForm} id=\"jump-platform\" class=\"mx-3\">\r\n          <div class=\"row\">\r\n            <div class=\"col-auto\">\r\n              <label for=\"complete\" class=\"col-form-label\">\r\n                已完成阶梯数\r\n              </label>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"number\"\r\n                h-model:number={this.completed}\r\n                name=\"complete\"\r\n                step=\"1\"\r\n                min=\"0\"\r\n                class=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <label for=\"progress\" class=\"col-form-label\">\r\n                阶梯内剩余进度\r\n              </label>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"number\"\r\n                h-model:number={this.rest}\r\n                name=\"progress\"\r\n                step=\"0.1\"\r\n                min=\"0\"\r\n                max={this.restMax}\r\n                class=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <button type=\"button\" name=\"jump\" class=\"btn btn-primary mx-1\" onClick={this.jumpPlatform}>\r\n                设为当前\r\n              </button>\r\n              <button type=\"button\" name=\"focus\" class=\"btn btn-secondary mx-1\" onClick={this.focusCurrent}>\r\n                跳转当前\r\n              </button>\r\n              <button type=\"button\" name=\"reset\" class=\"btn btn-danger mx-1\" onClick={this.restCurrentProgress}>\r\n                清空\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <AutoRender>\r\n          {() => {\r\n            const currentProgress = this.worldMap.currentProgress();\r\n            const currentMap = this.worldMap.currentMap();\r\n            if (!currentMap) {\r\n              return nil;\r\n            }\r\n            const { nextReward, total } = this.worldMode.computeRemainingProgress(\r\n              currentMap,\r\n              this.#getCalcProgress(currentMap, currentProgress)\r\n            );\r\n            return (\r\n              <div class=\"mx-3\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-auto\">\r\n                    {nextReward ? (\r\n                      <>\r\n                        {this.#renderHint(currentProgress)}距离下个主要奖励\r\n                        <img src={nextReward.img} width=\"32\" height=\"32\"></img>还剩\r\n                        {nextReward.remaining.distance}进度，\r\n                      </>\r\n                    ) : (\r\n                      nil\r\n                    )}\r\n                    距离爬完还剩{total.distance}进度。\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          }}\r\n        </AutoRender>\r\n        <div class=\"title mx-3\">正算步数（可计算打歌次数）</div>\r\n        <form ref={this.calcForm} id=\"calc-progress\" name=\"calc\" class=\"mx-3\">\r\n          <div class=\"row\">\r\n            <div class=\"col-auto\">\r\n              <label for=\"step\" class=\"col-form-label\">\r\n                角色Step\r\n              </label>\r\n            </div>\r\n            {renderCharacterStepInput(this.characterPicker, this.step, \"step\")}\r\n            <div class=\"col-auto\">\r\n              <label for=\"potential\" class=\"col-form-label\">\r\n                结算单曲ptt\r\n              </label>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"number\"\r\n                h-model:number={this.potential}\r\n                name=\"potential\"\r\n                step=\"any\"\r\n                id=\"potential\"\r\n                min=\"0\"\r\n                max={maximumSinglePotential}\r\n                class=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <AutoRender>\r\n              {() => {\r\n                const potential = this.potential();\r\n                if (isNaN(potential)) return nil;\r\n                const playResult = this.worldMode.computePlayResult(potential);\r\n                return (\r\n                  <div class=\"col-auto col-form-label\">\r\n                    游玩结果：{truncate(playResult, 1)}（{playResult}）\r\n                  </div>\r\n                );\r\n              }}\r\n            </AutoRender>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-auto\">世界类型</div>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <div class=\"input-group-text\">\r\n              <div class=\"form-check\">\r\n                <input\r\n                  type=\"radio\"\r\n                  class=\"form-check-input\"\r\n                  id=\"new-world\"\r\n                  value=\"new\"\r\n                  h-model={this.worldType}\r\n                ></input>\r\n                <label class=\"form-check-label\" for=\"new-world\">\r\n                  {NEW_MAP}\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"input-group-text\">\r\n              <div class=\"form-check\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  h-model:boolean={this.memoryx4}\r\n                  disabled={isNotNew}\r\n                  name=\"memory-x4\"\r\n                  id=\"memory-x4\"\r\n                  class=\"form-check-input\"\r\n                />\r\n                <label for=\"memory-x4\" class=\"form-check-label\">\r\n                  源韵强化 (x4)\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"input-group my-3\">\r\n            <div class=\"input-group-text\">\r\n              <div class=\"form-check\">\r\n                <input\r\n                  type=\"radio\"\r\n                  class=\"form-check-input\"\r\n                  id=\"legacy-world\"\r\n                  value=\"legacy\"\r\n                  h-model={this.worldType}\r\n                ></input>\r\n                <label class=\"form-check-label\" for=\"legacy-world\">\r\n                  {LEGACY_MAP}\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <label for=\"fragment\" class=\"input-group-text\">\r\n              残片加成\r\n            </label>\r\n            <select h-model={this.fragment} disabled={isNotLegacy} name=\"fragment\" id=\"fragment\" class=\"form-select\">\r\n              <option value=\"1\">无</option>\r\n              <option value=\"1.1\">100 (x1.1)</option>\r\n              <option value=\"1.25\">250 (x1.25)</option>\r\n              <option value=\"1.5\">500 (x1.5)</option>\r\n            </select>\r\n            <label for=\"stamina\" class=\"input-group-text\">\r\n              消耗体力\r\n            </label>\r\n            <select h-model={this.stamina} disabled={isNotLegacy} name=\"stamina\" id=\"stamina\" class=\"form-select\">\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"6\">6</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-auto\">\r\n              <span class=\"calc-result\">\r\n                进度：\r\n                {computed(() => {\r\n                  const progress = this.progress();\r\n                  if (isNaN(progress)) {\r\n                    return \"-\";\r\n                  }\r\n                  return `${truncate(progress, 1)}（${progress}）`;\r\n                })}\r\n              </span>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <button\r\n                type=\"button\"\r\n                name=\"calc\"\r\n                class=\"btn btn-primary\"\r\n                onClick={this.focusProgressResult}\r\n                disabled={computed(() => isNaN(this.progress()) || !this.worldMap.currentProgress())}\r\n              >\r\n                查看结果格子\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <AutoRender>\r\n            {() => {\r\n              const progress = this.progress();\r\n              const currentProgress = this.worldMap.currentProgress();\r\n              const currentMap = this.worldMap.currentMap();\r\n              if (isNaN(progress) || !currentMap) {\r\n                return nil;\r\n              }\r\n              const { nextReward, total } = this.worldMode.computeRemainingProgress(\r\n                currentMap,\r\n                this.#getCalcProgress(currentMap, currentProgress)\r\n              );\r\n              return (\r\n                <div class=\"row\">\r\n                  <div class=\"col-auto\">\r\n                    {this.#renderHint(currentProgress)}以此进度结算，\r\n                    {nextReward ? (\r\n                      <>\r\n                        到下个主要奖励<img src={nextReward.img} width=\"32\" height=\"32\"></img>还需要打\r\n                        {Math.ceil(nextReward.remaining.distance / progress)}次，\r\n                      </>\r\n                    ) : (\r\n                      nil\r\n                    )}\r\n                    爬完还需要打歌{Math.ceil(total.distance / progress)}次。\r\n                  </div>\r\n                </div>\r\n              );\r\n            }}\r\n          </AutoRender>\r\n        </form>\r\n        <div class=\"title mx-3\">逆算潜力值（控分精准降落）</div>\r\n        <form ref={this.inverseProgressForm} id=\"anti-progress\" class=\"mx-3\">\r\n          <div>\r\n            <div class=\"row\">\r\n              <div class=\"col-auto\">地图类型</div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-auto\">\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    class=\"form-check-input\"\r\n                    id=\"new-world-2\"\r\n                    value=\"new\"\r\n                    h-model={this.worldType2}\r\n                  ></input>\r\n                  <label class=\"form-check-label\" for=\"new-world-2\">\r\n                    {NEW_MAP}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    class=\"form-check-input\"\r\n                    id=\"legacy-world-2\"\r\n                    value=\"legacy\"\r\n                    h-model={this.worldType2}\r\n                  ></input>\r\n                  <label class=\"form-check-label\" for=\"legacy-world-2\">\r\n                    {LEGACY_MAP}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-auto\">\r\n              <label class=\"col-form-label\" for=\"anti-progress-step\">\r\n                角色step\r\n              </label>\r\n            </div>\r\n            {renderCharacterStepInput(this.characterPicker, this.step2, \"step2\")}\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-auto\">\r\n              <label class=\"col-form-label\">期望前进步数</label>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"number\"\r\n                h-model:number={this.lowProgress}\r\n                name=\"low\"\r\n                step=\"0.1\"\r\n                min=\"0\"\r\n                class=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"col-auto\">~</div>\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"number\"\r\n                h-model:number={this.highProgress}\r\n                name=\"high\"\r\n                step=\"0.1\"\r\n                min=\"0\"\r\n                class=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"col-auto\">（设置当前地图进度后，点击要降落的格子可自动计算期望前进步数）</div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-auto\">\r\n              <AutoRender>\r\n                {() => {\r\n                  const solutions = this.solutions();\r\n                  const worldType = this.worldType2();\r\n                  return (\r\n                    <div class=\"solutions\">\r\n                      {solutions\r\n                        .filter(({ world }) => !world || world.type === worldType)\r\n                        .map(({ invalidMessage, highPtt, lowPtt, pmRange, world }) => {\r\n                          const bonus = world ? (\r\n                            world.type === \"legacy\" ? (\r\n                              <div>\r\n                                使用加成：{world.fragment > 1 ? `残片x${world.fragment}` : \"\"}\r\n                                {world.stamina > 1 ? `体力x${world.stamina}` : \"\"}\r\n                              </div>\r\n                            ) : world.x4 ? (\r\n                              <div>使用源韵强化x4</div>\r\n                            ) : (\r\n                              nil\r\n                            )\r\n                          ) : (\r\n                            <div>不使用加成</div>\r\n                          );\r\n                          return (\r\n                            <div class=\"solution\">\r\n                              {bonus}\r\n                              {invalidMessage ? (\r\n                                <div>{invalidMessage}</div>\r\n                              ) : (\r\n                                <>\r\n                                  <div>\r\n                                    结算潜力值范围：{lowPtt.toFixed(4)} ~ {highPtt.toFixed(4)}\r\n                                  </div>\r\n                                  {pmRange ? (\r\n                                    <div>\r\n                                      相当于PM {pmRange[0]} ~ {pmRange[1]}{\" \"}\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-secondary\"\r\n                                        onClick={async () => {\r\n                                          const result = await this.chart.roll(...pmRange);\r\n                                          if (!result) {\r\n                                            return alert(\"未找到给定定数范围内的谱面\");\r\n                                          }\r\n                                          alert(\r\n                                            <ChartInfo\r\n                                              chart={result.chart}\r\n                                              song={result.song}\r\n                                              chartService={this.chart}\r\n                                            ></ChartInfo>\r\n                                          );\r\n                                        }}\r\n                                      >\r\n                                        roll一个\r\n                                      </button>\r\n                                    </div>\r\n                                  ) : (\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-secondary\"\r\n                                      onClick={async () => {\r\n                                        const charts = await this.chart.queryChartsByConstant(lowPtt - 2, highPtt - 1);\r\n                                        this.scoreController.showAlert(\r\n                                          charts.map((chart) => {\r\n                                            const { constant, cover, difficulty, title } = chart;\r\n                                            const lowScore = Math.max(\r\n                                              this.musicPlay.ex,\r\n                                              this.musicPlay.inverseScore(lowPtt, constant)\r\n                                            );\r\n                                            const highScore = this.musicPlay.inverseScore(highPtt, constant);\r\n                                            const note = chart.chart.note;\r\n                                            const maxFar = this.musicPlay.computeFar(lowScore, note, true);\r\n                                            const minFar = this.musicPlay.computeFar(highScore, note, false);\r\n                                            return (\r\n                                              <div class=\"m-3\" slot=\"content\">\r\n                                                <div class=\"row my-1\">\r\n                                                  <div class=\"col-auto\">\r\n                                                    <img\r\n                                                      src={cover}\r\n                                                      width={80}\r\n                                                      height={80}\r\n                                                      style:border={`0.25em solid var(--${difficulty})`}\r\n                                                      title={title}\r\n                                                    ></img>\r\n                                                  </div>\r\n                                                  <div class=\"col-auto\">\r\n                                                    <div class=\"row\" style:height=\"2em\">\r\n                                                      {title}\r\n                                                    </div>\r\n                                                    <div class=\"row\" style:font-size=\"0.5em\">\r\n                                                      {chart.song.pack}\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                  <div class=\"col-auto\">\r\n                                                    分数 {lowScore} ~ {highScore}\r\n                                                  </div>\r\n                                                  <div class=\"col-auto\">\r\n                                                    Far {minFar} ~ {maxFar}\r\n                                                  </div>\r\n                                                </div>\r\n                                              </div>\r\n                                            );\r\n                                          }),\r\n                                          true\r\n                                        );\r\n                                      }}\r\n                                    >\r\n                                      控分\r\n                                    </button>\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              </AutoRender>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n\r\n  storeParams() {\r\n    const selected = this.select.selected();\r\n    this.router.updateQuery<WorldModeParams>({\r\n      mapId: selected?.id || null,\r\n    });\r\n  }\r\n\r\n  resetCalculation() {\r\n    this.completed.set(NaN);\r\n    this.rest.set(NaN);\r\n    this.lowProgress.set(NaN);\r\n    this.highProgress.set(NaN);\r\n    this.fragment.set(\"1\");\r\n    this.memoryx4.set(false);\r\n  }\r\n\r\n  restCurrentProgress = () => {\r\n    this.completed.set(NaN);\r\n    this.rest.set(NaN);\r\n    this.worldMap.setCurrentPlatform(null);\r\n  };\r\n\r\n  jumpPlatform = () => {\r\n    const completed = this.completed();\r\n    const rest = this.rest();\r\n    const platformLength = this.#getMapCurrentPlatformContexts()[completed]?.platform.length ?? null;\r\n    this.restMax.set(platformLength);\r\n    if (!this.jumpForm.reportValidity()) {\r\n      return;\r\n    }\r\n    this.worldMap.setCurrentPlatform({\r\n      level: completed + 1,\r\n      progress: rest,\r\n    });\r\n  };\r\n\r\n  focusCurrent = () => {\r\n    if (!this.jumpForm.reportValidity()) {\r\n      return;\r\n    }\r\n    this.worldMap.focusLevel(this.completed() + 1);\r\n  };\r\n\r\n  calculateProgress = () => {\r\n    if (!this.calcForm.reportValidity()) {\r\n      this.progress.set(NaN);\r\n      return;\r\n    }\r\n    const fragment = +this.fragment(),\r\n      potential = this.potential(),\r\n      step = this.step(),\r\n      x4 = this.memoryx4(),\r\n      worldType = this.worldType(),\r\n      stamina = +this.stamina();\r\n    try {\r\n      const bonus: WorldMapBonus | null =\r\n        worldType === \"new\"\r\n          ? { type: \"new\", x4 }\r\n          : worldType === \"legacy\"\r\n          ? {\r\n              type: \"legacy\",\r\n              fragment,\r\n              stamina,\r\n            }\r\n          : null;\r\n      const result = this.worldMode.computeProgress(step, potential, bonus);\r\n      this.progress.set(result);\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        alert(error.message);\r\n      }\r\n      this.progress.set(NaN);\r\n    }\r\n  };\r\n\r\n  focusProgressResult = () => {\r\n    this.calculateProgress();\r\n    const progress = this.progress();\r\n    if (!progress) {\r\n      return;\r\n    }\r\n    const reached = this.worldMap.currentProgress();\r\n    if (!reached) {\r\n      return;\r\n    }\r\n    const platforms = this.#getMapCurrentPlatformContexts();\r\n    let reachedIndex = reached.level;\r\n    if (progress < reached.progress) {\r\n      this.worldMap.focusLevel(reachedIndex);\r\n      return;\r\n    }\r\n    let context = platforms[reachedIndex];\r\n    for (\r\n      let rest = progress - reached.progress;\r\n      context && rest > 0;\r\n      reachedIndex++, context = platforms[reachedIndex]\r\n    ) {\r\n      rest -= context.platform.length;\r\n    }\r\n    if (!context) {\r\n      // 到顶了\r\n      alert(\"爬到顶了\");\r\n    } else {\r\n      this.worldMap.focusLevel(reachedIndex);\r\n    }\r\n  };\r\n\r\n  inverseProgress = async () => {\r\n    if (!this.inverseProgressForm.reportValidity()) {\r\n      return;\r\n    }\r\n    const step = this.step2();\r\n    const low = this.lowProgress();\r\n    const high = this.highProgress();\r\n    this.solutions.set(await this.worldMode.inverseProgress(step, [low, high]));\r\n  };\r\n\r\n  /**\r\n   * 用索引level-1拿到\r\n   */\r\n  #getMapCurrentPlatformContexts() {\r\n    return [...this.worldMap.platforms()].reverse();\r\n  }\r\n\r\n  #renderHint(currentProgress: CurrentProgress | null) {\r\n    if (currentProgress) {\r\n      return \"\";\r\n    }\r\n    return \"未设置地图当前进度。若从头开始爬梯，\";\r\n  }\r\n\r\n  #getCalcProgress(worldMap: NormalWorldMap, currentProgress: CurrentProgress | null) {\r\n    return currentProgress ?? { level: 1, progress: worldMap.platforms[1]!.length };\r\n  }\r\n}\r\n","import { create } from \"sheetly\";\nexport let text = \"main{margin:1em 1em 0 1em}.row>.col-auto{margin-bottom:1em}world-map-select{display:block;margin:1em 1em}input[type=number]{max-width:6em}select#fragment{min-width:8em}select#stamina{min-width:6em}.solutions{display:grid;grid-template-columns:1fr 1fr;gap:1em}.solution{border:1px solid var(--bs-border-color);padding:.5em;border-radius:var(--bs-border-radius)}#score-controller::part(modal-root){width:24em}\";\nexport const sheet = create(text, import.meta.url);\n","import { sheet } from \"./style.css.js\";\r\nimport { bootstrap } from \"../../styles\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport { $WorldModeService, WorldModeService } from \"../../../services/declarations\";\r\nimport { Chapter, NormalWorldMap, RewardType } from \"../../../models/world-mode\";\r\nimport { Component, For, HyplateElement, computed, noop, signal, watch } from \"hyplate\";\r\nimport type { Mountable } from \"hyplate/types\";\r\n\r\nexport\r\n@Component({\r\n  tag: \"world-map-select\",\r\n  styles: [bootstrap, sheet],\r\n})\r\nclass WorldMapSelect extends HyplateElement {\r\n  @Inject($WorldModeService)\r\n  accessor worldmode!: WorldModeService;\r\n\r\n  longtermMaps = signal<Chapter[]>([]);\r\n  eventMaps = signal<NormalWorldMap[]>([]);\r\n  selected = signal<NormalWorldMap | null>(null);\r\n  longtermSelected = signal(\"\");\r\n  eventSelected = signal(\"\");\r\n  showObsolete = signal(false);\r\n\r\n  #dataFetched = false;\r\n  #initMapId: string | null = null;\r\n\r\n  override render(): Mountable<any> {\r\n    this.fetchMapData();\r\n    this.effect(() =>\r\n      watch(this.longtermSelected, (value) => {\r\n        if (value) {\r\n          this.eventSelected.set(\"\");\r\n          this.selected.set(\r\n            this.longtermMaps()\r\n              .flatMap((c) => c.maps)\r\n              .find((m) => m.id === value) ?? null\r\n          );\r\n        }\r\n      })\r\n    );\r\n    this.effect(() =>\r\n      watch(this.eventSelected, (value) => {\r\n        if (value) {\r\n          this.longtermSelected.set(\"\");\r\n          this.selected.set(this.eventMaps().find((m) => m.id === value) ?? null);\r\n        }\r\n      })\r\n    );\r\n    const eventMaps = computed(() => {\r\n      const showObsolete = this.showObsolete();\r\n      const now = Date.now();\r\n      return this.eventMaps().filter((e) => {\r\n        if (showObsolete) return true;\r\n        const expire = e.expire;\r\n        if (!expire) return false;\r\n        return expire > now;\r\n      });\r\n    });\r\n    return (\r\n      <>\r\n        <div class=\"row\">\r\n          <div class=\"col-auto\">\r\n            <div class=\"form-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                h-model:boolean={this.showObsolete}\r\n                name=\"show-obsolete\"\r\n                id=\"show-obsolete\"\r\n                class=\"form-check-input\"\r\n              ></input>\r\n              <label for=\"show-obsolete\" class=\"form-check-label\">\r\n                显示已关闭的活动地图\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <select class=\"form-select\" name=\"longterm\" h-model={this.longtermSelected}>\r\n              <option value=\"\">--常驻地图--</option>\r\n              <For of={this.longtermMaps}>\r\n                {(item) => (\r\n                  <optgroup label={item.chapter}>{item.maps.map((map) => this.renderMapOption(map))}</optgroup>\r\n                )}\r\n              </For>\r\n            </select>\r\n          </div>\r\n          <div class=\"col\">\r\n            <select class=\"form-select\" name=\"event\" h-model={this.eventSelected}>\r\n              <option value=\"\">--活动地图--</option>\r\n              <For of={eventMaps}>{(item) => this.renderMapOption(item)}</For>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  async fetchMapData(): Promise<void> {\r\n    const [chapterData, maps] = await Promise.all([this.worldmode.getLongtermMaps(), this.worldmode.getEventMaps()]);\r\n    this.longtermMaps.set(chapterData);\r\n    this.eventMaps.set(maps);\r\n    this.#dataFetched = true;\r\n    const mapId = this.#initMapId;\r\n    if (mapId) {\r\n      this.updateSelectValue(chapterData, maps, mapId);\r\n    }\r\n  }\r\n\r\n  setMapId(mapId: string | null) {\r\n    if (this.#dataFetched) {\r\n      queueMicrotask(() => {\r\n        this.updateSelectValue(this.longtermMaps(), this.eventMaps(), mapId);\r\n      });\r\n    } else {\r\n      this.#initMapId = mapId;\r\n    }\r\n  }\r\n\r\n  private renderMapOption(map: NormalWorldMap) {\r\n    const rewards = this.worldmode.getMapRewards(map);\r\n    const buf: string[] = [];\r\n    if (RewardType.Character in rewards) {\r\n      buf.push(`搭档 ${rewards[RewardType.Character]!.join('，')}`);\r\n    }\r\n    if (RewardType.Song in rewards) {\r\n      buf.push(`曲目 ${rewards[RewardType.Song]!.join('，')}`);\r\n    }\r\n    if (RewardType.Background in rewards) {\r\n      buf.push(`背景 ${rewards[RewardType.Background]!}`);\r\n    }\r\n    return (\r\n      <option value={map.id} title={map.id}>\r\n        {map.id}\r\n        {buf.length ? ` (奖励：${buf.join(\" \")})` : \"\"}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  private updateSelectValue(longtermMaps: Chapter[], eventMaps: NormalWorldMap[], id: string | null) {\r\n    if (!id) {\r\n      this.clearSelectValues();\r\n      return;\r\n    }\r\n    const longtermMap = longtermMaps.flatMap((c) => c.maps).find((map) => map.id === id);\r\n    if (longtermMap) {\r\n      this.longtermSelected.set(id);\r\n      return;\r\n    }\r\n    const eventMap = eventMaps.find((map) => map.id === id);\r\n    if (eventMap) {\r\n      this.eventSelected.set(id);\r\n      return;\r\n    }\r\n    this.clearSelectValues();\r\n  }\r\n\r\n  private clearSelectValues() {\r\n    this.longtermSelected.set(\"\");\r\n    this.eventSelected.set(\"\");\r\n  }\r\n}\r\n","import { create } from \"sheetly\";\nexport let text = \"\";\nexport const sheet = create(text, import.meta.url);\n","import { sheet } from \"./style.css.js\";\r\nimport { bootstrap } from \"../../styles\";\r\nimport { CurrentProgress, MapPlatform, NormalWorldMap, PlatformType, RewardType } from \"../../../models/world-mode\";\r\nimport { alert } from \"../fancy-dialog\";\r\nimport { Component, For, HyplateElement, computed, element, nil, signal } from \"hyplate\";\r\nimport type { CleanUpFunc, WritableSignal } from \"hyplate/types\";\r\nimport { Inject } from \"../../../services/di\";\r\nimport { $AssetsResolver, $Gateway, AssetsResolver, Gateway } from \"../../../services/declarations\";\r\n\r\nconst specialPlatformImages: Record<\r\n  PlatformType,\r\n  {\r\n    banner: string;\r\n    main: string;\r\n  }\r\n> = {\r\n  [PlatformType.FixedSpeed]: {\r\n    banner: \"img/step_banner_speedrestrict.png\",\r\n    main: \"img/step_tile_speedrestrict.png\",\r\n  },\r\n  [PlatformType.Random]: {\r\n    banner: \"img/step_banner_random.png\",\r\n    main: \"img/step_tile_random.png\",\r\n  },\r\n  [PlatformType.Restriction]: {\r\n    banner: \"img/step_banner_restrict.png\",\r\n    main: \"img/step_tile_restrict.png\",\r\n  },\r\n  [PlatformType.Stamina]: {\r\n    banner: \"img/step_banner_plusstamina.png\",\r\n    main: \"img/step_tile_plusstamina.png\",\r\n  },\r\n};\r\n\r\nconst defaultPlatformImage = \"img/step_tile.png\";\r\nconst currentPlatformImage = \"img/step_tile_current.png\";\r\n\r\ninterface PlatformContext {\r\n  cell: HTMLDivElement;\r\n  platform: MapPlatform;\r\n  level: number;\r\n  highlighted: WritableSignal<boolean>;\r\n}\r\n\r\nexport\r\n@Component({\r\n  tag: \"world-map-normal\",\r\n  styles: [bootstrap, sheet],\r\n})\r\nclass WorldMapNormal extends HyplateElement {\r\n  @Inject($AssetsResolver)\r\n  accessor resolver!: AssetsResolver;\r\n  @Inject($Gateway)\r\n  accessor gateway!: Gateway;\r\n  platformsContainer = element(\"div\");\r\n\r\n  bg = signal(\"\");\r\n  bgY = signal(\"\");\r\n  currentMap = signal<NormalWorldMap | null>(null);\r\n  platforms = signal<PlatformContext[]>([]);\r\n  currentProgress = signal<CurrentProgress | null>(null);\r\n  #cleanupHighlight: CleanUpFunc | null = null;\r\n  override render() {\r\n    return (\r\n      <div class=\"panel-root\">\r\n        <div class=\"bg\" style:background-image={this.bg} style:background-position-y={this.bgY}></div>\r\n        <div\r\n          ref={this.platformsContainer}\r\n          class=\"platforms\"\r\n          onScroll={() => {\r\n            requestAnimationFrame(() => {\r\n              const { scrollTop, scrollHeight, clientHeight } = this.platformsContainer;\r\n              this.bgY.set(`${(scrollTop / (scrollHeight - clientHeight)) * 100}%`);\r\n            });\r\n          }}\r\n        >\r\n          <For of={this.platforms}>\r\n            {({ cell, highlighted, level, platform }) => {\r\n              const offset = 5 - Math.abs(((level - 1) % 10) - 5);\r\n              cell.style.left = `${((offset * 100) / 6).toFixed(6)}%`;\r\n              const { special, length, reward } = platform;\r\n              return (\r\n                <div class=\"level\">\r\n                  <div\r\n                    ref={cell}\r\n                    class=\"cell\"\r\n                    data-level={level}\r\n                    class:highlighted={highlighted}\r\n                    onClick={(e) => {\r\n                      this.dispatchEvent(new CustomEvent(\"click-cell\", { detail: level }));\r\n                    }}\r\n                  >\r\n                    <img\r\n                      class=\"platform-img\"\r\n                      src={computed(() => {\r\n                        const currentProgress = this.currentProgress();\r\n                        if (currentProgress?.level === level) {\r\n                          return this.assets(currentPlatformImage);\r\n                        }\r\n                        return this.assets(special ? specialPlatformImages[special.type]!.main : defaultPlatformImage);\r\n                      })}\r\n                    />\r\n                    <span class=\"length text-banner\">\r\n                      {computed(() => {\r\n                        const currentProgress = this.currentProgress();\r\n                        if (currentProgress?.level === level) {\r\n                          return `${currentProgress.progress.toFixed(1)}/${length}`;\r\n                        }\r\n                        return length;\r\n                      })}\r\n                    </span>\r\n                    {special ? (\r\n                      <img\r\n                        class=\"banner\"\r\n                        src={this.assets(specialPlatformImages[special.type].banner)}\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          const { type } = special;\r\n                          const renderRange = (range: string | string[], message: string) => (\r\n                            <>\r\n                              {message}：<br />\r\n                              {(typeof range === \"string\" ? [range] : range).map((song) => (\r\n                                <>\r\n                                  {song}\r\n                                  <br />\r\n                                </>\r\n                              ))}\r\n                            </>\r\n                          );\r\n                          switch (special.type) {\r\n                            case PlatformType.FixedSpeed:\r\n                              alert(`限速 ≤ ${special.max}`);\r\n                              break;\r\n                            case PlatformType.Random:\r\n                              alert(renderRange(special.range, \"随机范围\"));\r\n                              break;\r\n                            case PlatformType.Restriction:\r\n                              alert(renderRange(special.range, \"限制范围\"));\r\n                              break;\r\n                            case PlatformType.Stamina:\r\n                              break;\r\n                            default:\r\n                              throw new Error(`未知台阶类型： ${type}`);\r\n                          }\r\n                        }}\r\n                      ></img>\r\n                    ) : (\r\n                      nil\r\n                    )}\r\n                    {special?.type === PlatformType.Stamina ? <span class=\"stamina-count\">+{special.count}</span> : nil}\r\n                    {(() => {\r\n                      if (!reward) {\r\n                        return nil;\r\n                      }\r\n                      switch (reward.type) {\r\n                        case RewardType.Character:\r\n                        case RewardType.Background:\r\n                        case RewardType.Song:\r\n                          return <img class=\"reward\" referrerpolicy=\"no-referrer\" src={reward.img}></img>;\r\n                        case RewardType.Item: {\r\n                          if (reward.name === \"残片\") {\r\n                            return (\r\n                              <>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"fragment\">\r\n                                  <rect\r\n                                    x=\"4\"\r\n                                    y=\"4\"\r\n                                    width=\"16\"\r\n                                    height=\"16\"\r\n                                    transform=\"rotate(45 12 12)\"\r\n                                    fill=\"#164864\"\r\n                                  ></rect>\r\n                                  <rect\r\n                                    x=\"6\"\r\n                                    y=\"6\"\r\n                                    rx=\"1\"\r\n                                    ry=\"1\"\r\n                                    width=\"12\"\r\n                                    height=\"12\"\r\n                                    transform=\"rotate(45 12 12)\"\r\n                                    fill=\"#0e2840\"\r\n                                    filter=\"blur(1px)\"\r\n                                  ></rect>\r\n                                </svg>\r\n                                <span class=\"fragment-count\">{reward.count}</span>\r\n                                <span class=\"fragment-banner\">{reward.name}</span>\r\n                              </>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <>\r\n                                <img src={reward.img} referrerpolicy=\"no-referrer\" class=\"reward item\"></img>\r\n                                <span class=\"item-info text-banner\">\r\n                                  {reward.name} × {reward.count}\r\n                                </span>\r\n                              </>\r\n                            );\r\n                          }\r\n                        }\r\n                      }\r\n                    })()}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }}\r\n          </For>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  setMap(map: NormalWorldMap) {\r\n    this.currentMap.set(map);\r\n    const platforms = map.platforms;\r\n    const platformsContext = Object.keys(platforms)\r\n      .sort((a, b) => +b - +a)\r\n      .reduce<PlatformContext[]>((result, key) => {\r\n        const platform = platforms[+key];\r\n        if (!platform) {\r\n          return result;\r\n        }\r\n        const level = +key;\r\n        result.push({\r\n          cell: element(\"div\"),\r\n          level,\r\n          highlighted: signal(false),\r\n          platform,\r\n        });\r\n        return result;\r\n      }, []);\r\n    this.platforms.set(platformsContext);\r\n    const chapter = +map.id[0]! || 0;\r\n    this.bg.set(`url(${JSON.stringify(this.assets(`img/world/${chapter}.jpg`))})`);\r\n    this.platformsContainer.lastElementChild!.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  setCurrentPlatform(current: CurrentProgress | null) {\r\n    this.currentProgress.set(current);\r\n  }\r\n\r\n  focusLevel(level: number) {\r\n    const targetRef = this.findPlatform(level);\r\n    if (targetRef) {\r\n      targetRef.cell.scrollIntoView({ behavior: \"smooth\" });\r\n      this.highlightLevel(level);\r\n    }\r\n  }\r\n\r\n  highlightLevel(level: number) {\r\n    const targetRef = this.findPlatform(level);\r\n    if (targetRef) {\r\n      this.#cleanupHighlight?.();\r\n      this.#cleanupHighlight = () => {\r\n        this.#cleanupHighlight = null;\r\n        targetRef.highlighted.set(false);\r\n        cancelAnimationFrame(animationFrame);\r\n        clearTimeout(timer);\r\n      };\r\n      const timer = setTimeout(this.#cleanupHighlight, 3000);\r\n      const animationFrame = requestAnimationFrame(() => {\r\n        targetRef.highlighted.set(true);\r\n      });\r\n    }\r\n  }\r\n\r\n  private findPlatform(level: number) {\r\n    const platforms = this.platforms();\r\n    return platforms[platforms.length - level];\r\n  }\r\n\r\n  private assets(path: string) {\r\n    return this.gateway.direct(this.resolver.resolve(path)).href;\r\n  }\r\n}\r\n","import { create } from \"sheetly\";\nexport let text = \".panel-root{max-width:100%;overflow-x:auto;position:relative;--text-mask:linear-gradient(90deg, transparent, rgba(0, 0, 0, 0.53125) 50%, transparent 100%)}.bg{min-width:600px;max-width:800px;width:100%;height:100%;background-size:cover;position:absolute;z-index:-1}.platforms{min-width:600px;max-width:800px;max-height:500px;overflow-y:auto;padding:32px;backdrop-filter:blur(1px)}.level{position:relative;height:4em}.platform-img{width:6em}.cell{position:absolute;cursor:pointer}.highlighted{animation-name:flash;animation-duration:3s;animation-timing-function:ease-out;animation-delay:0s}@keyframes flash{from{background-color:rgba(0,0,0,.53125)}}.text-banner{background-image:var(--text-mask)}.length{position:absolute;display:inline-block;bottom:0;left:0;width:100%;text-align:center;font-weight:600;font-size:.8em;color:#fff;text-shadow:#00000088}.banner{position:absolute;width:120px;top:0;left:0;transform:translate(-16%,-70%);cursor:help}.stamina-count{position:absolute;top:0;left:0;color:#fff;font-size:.8em;transform:translate(-30%,-100%)}.reward{position:absolute;left:0;top:-3em;width:6em;height:6em;transform-origin:50% 50%;transform:scale(.75)}.reward.item{top:-2em;left:1em;width:4em;height:4em}.item-info{position:absolute;left:0;font-size:.75em;top:2em;color:#fff;font-weight:600;width:8em;display:inline-block;text-align:center}svg.fragment{width:64px;position:absolute;left:1em;top:-2em}.fragment-count{position:absolute;text-align:center;color:#fff;left:0;top:-.8em;width:100%}.fragment-banner{position:absolute;left:0;font-size:.5em;top:.8em;color:#fff;font-weight:600;width:100%;display:inline-block;text-align:center;background-image:var(--text-mask)}\";\nexport const sheet = create(text, import.meta.url);\n","import { Injectable } from \"classic-di\";\r\nimport {\r\n  $AssetsCacheService,\r\n  $AssetsService,\r\n  $Gateway,\r\n  AssetsCacheService,\r\n  AssetsService,\r\n  Gateway,\r\n} from \"./declarations\";\r\n\r\n@Injectable({\r\n  requires: [$Gateway, $AssetsCacheService] as const,\r\n  implements: $AssetsService,\r\n})\r\nexport class AssetsServiceImpl implements AssetsService {\r\n  constructor(private readonly gateway: Gateway, private readonly cache: AssetsCacheService) {}\r\n\r\n  async getAssets(url: URL, init?: RequestInit): Promise<string> {\r\n    const dist = await this.gateway.dynamicProxy(url);\r\n    const imageCache = await this.cache.cachedGet(dist, init);\r\n    return imageCache.blobURL;\r\n  }\r\n}\r\n","import { Injectable } from \"classic-di\";\r\nimport {\r\n  $AssetsCacheService,\r\n  $Database,\r\n  AppDatabaseContext,\r\n  AssetsCacheService,\r\n  Gateway,\r\n  ImageMemoryCache,\r\n} from \"./declarations\";\r\nimport { CachedHttpGetClient, migrateOldCaches } from \"./cache\";\r\nimport { future } from \"../utils/future\";\r\nimport { DataProvider, MemoryCache } from \"../utils/memory-cache\";\r\nimport { PromiseOr } from \"../utils/misc\";\r\n\r\n@Injectable({\r\n  requires: [$Database],\r\n  implements: $AssetsCacheService,\r\n})\r\nexport class AssetsCacheServiceImpl implements AssetsCacheService, DataProvider<[URL, RequestInit], ImageMemoryCache> {\r\n  #cache = new MemoryCache(this);\r\n  #client: CachedHttpGetClient;\r\n  #migrated = future();\r\n\r\n  constructor(private readonly database: AppDatabaseContext) {\r\n    this.#client = new CachedHttpGetClient(database);\r\n    this.#migrate();\r\n  }\r\n\r\n  key(input: URL, init?: RequestInit | undefined): string {\r\n    return input.toString();\r\n  }\r\n  async alloc(input: URL, init?: RequestInit | undefined): Promise<ImageMemoryCache> {\r\n    const res = await this.#client.fetch(input, init);\r\n    const blob = await res.blob();\r\n    return { blob, blobURL: URL.createObjectURL(blob) };\r\n  }\r\n\r\n  free(data: ImageMemoryCache): PromiseOr<void> {\r\n    URL.revokeObjectURL(data.blobURL);\r\n  }\r\n\r\n  async cachedGet(url: URL, init?: RequestInit | undefined): Promise<ImageMemoryCache> {\r\n    const imageCache = await this.#cache.get(url, init);\r\n    return imageCache;\r\n  }\r\n\r\n  cacheUsage(): Promise<number> {\r\n    return this.#client.cacheUsage();\r\n  }\r\n\r\n  async clearCache(): Promise<void> {\r\n    await this.#client.clear();\r\n    await this.#cache.clear();\r\n  }\r\n\r\n  async #migrate() {\r\n    await migrateOldCaches(\"assets-image-cache\", this.database);\r\n    this.#migrated.done();\r\n  }\r\n}\r\n","import { moveData, openDB, requestToPromise } from \"../utils/indexed-db\";\r\nimport { sum } from \"../utils/math\";\r\nimport { once } from \"../utils/misc\";\r\nimport { getNow } from \"../utils/time\";\r\nimport { CacheDBContext } from \"./declarations\";\r\n\r\nexport interface HttpGetCache {\r\n  url: string;\r\n  time?: Date;\r\n  blob: Blob;\r\n}\r\n\r\nexport type CreateClientInit = string | CacheDBContext;\r\n\r\nexport class DefaultCacheDBContext implements CacheDBContext {\r\n  constructor(private readonly name: string) {}\r\n  caches = \"caches\";\r\n  getDB = once(() => this.#createDB());\r\n\r\n  async transaction(stores: string[], mode?: IDBTransactionMode | undefined): Promise<IDBTransaction> {\r\n    const db = await this.getDB();\r\n    return db.transaction(stores, mode);\r\n  }\r\n  async objectStore(store: string, mode?: IDBTransactionMode | undefined): Promise<IDBObjectStore> {\r\n    const transaction = await this.transaction([store], mode);\r\n    return transaction.objectStore(store);\r\n  }\r\n\r\n  #createDB() {\r\n    return openDB(this.name, 1, (_, request) => {\r\n      const db = request.result;\r\n      db.createObjectStore(this.caches, { keyPath: \"url\" });\r\n    });\r\n  }\r\n}\r\n\r\nexport class CachedHttpGetClient {\r\n  dbContext: CacheDBContext;\r\n  constructor(init: CreateClientInit) {\r\n    this.dbContext = typeof init === \"string\" ? new DefaultCacheDBContext(init) : init;\r\n  }\r\n\r\n  async fetch(input: string | URL, init?: RequestInit, expireTime?: number): Promise<Response> {\r\n    const now = getNow();\r\n    const store = await this.#cacheStore();\r\n    const url = getURL(input);\r\n    const queryRequest: IDBRequest<HttpGetCache | null> = store.get(url);\r\n    const result = await requestToPromise(queryRequest);\r\n    if (result && (!result.time || +result.time + (expireTime ?? Infinity) > +now)) {\r\n      console.debug(`Found cached result for url: ${result.url}`);\r\n      return new Response(result.blob);\r\n    }\r\n    const response = await fetch(url, init);\r\n    const blob = await response.blob();\r\n    const cache: HttpGetCache = {\r\n      url,\r\n      blob,\r\n      time: getNow(),\r\n    };\r\n    const saveRequest = (await this.#cacheStore(\"readwrite\")).put(cache);\r\n    const savedKey = await requestToPromise(saveRequest);\r\n    if (savedKey) {\r\n      console.debug(`Cached request URL: ${saveRequest.result}`);\r\n    }\r\n    return new Response(blob);\r\n  }\r\n\r\n  async invalidateCache(input: string | URL): Promise<any> {\r\n    const store = await this.#cacheStore(\"readwrite\");\r\n    const url = getURL(input);\r\n    const deleteRequest = store.delete(url);\r\n    await requestToPromise(deleteRequest, { emitError: true });\r\n  }\r\n\r\n  async cacheUsage() {\r\n    const query: IDBRequest<HttpGetCache[]> = (await this.#cacheStore()).getAll();\r\n    const httpGetCaches = (await requestToPromise(query, { emitError: true })) ?? [];\r\n    const byteSize = sum(httpGetCaches.map((cache) => cache.blob.size));\r\n    return byteSize;\r\n  }\r\n\r\n  async clear() {\r\n    const store = await this.#cacheStore(\"readwrite\");\r\n    const request = store.clear();\r\n    await requestToPromise(request, { emitError: true });\r\n  }\r\n\r\n  #cacheStore(mode?: IDBTransactionMode) {\r\n    return this.dbContext.objectStore(this.dbContext.caches, mode);\r\n  }\r\n}\r\n\r\nexport const migrateOldCaches = async (oldName: string, to: CacheDBContext) => {\r\n  const databases = (await indexedDB.databases?.()) ?? [];\r\n  const old = databases.find((d) => d.name === oldName);\r\n  if (!old) {\r\n    return;\r\n  }\r\n  const oldClient = new DefaultCacheDBContext(oldName);\r\n  const oldDB = await oldClient.getDB();\r\n  await moveData(\r\n    {\r\n      db: oldDB,\r\n      store: oldClient.caches,\r\n    },\r\n    {\r\n      db: await to.getDB(),\r\n      store: to.caches,\r\n    }\r\n  );\r\n  oldDB.close();\r\n  await requestToPromise(indexedDB.deleteDatabase(oldName));\r\n};\r\n\r\nfunction getURL(input: string | URL) {\r\n  return input instanceof URL ? input.href : input;\r\n}\r\n","import { Injectable } from \"classic-di\";\r\nimport { $Database, $FileStorage, AppDatabaseContext, FileStorageService } from \"./declarations\";\r\nimport { UploadedFile } from \"../models/file\";\r\nimport { prefixWith, requestToPromise } from \"../utils/indexed-db\";\r\nimport { protocol } from \"../models/data\";\r\nimport { trimSlash } from \"../utils/string\";\r\n\r\n@Injectable({\r\n  requires: [$Database] as const,\r\n  implements: $FileStorage,\r\n})\r\nexport class FileStorageServiceImpl implements FileStorageService {\r\n  constructor(private readonly database: AppDatabaseContext) {}\r\n\r\n  createURL(site: URL, path: string): URL {\r\n    return new URL(`${protocol}//vfs/${site.origin}${trimSlash(site.pathname)}/${path}`);\r\n  }\r\n\r\n  async upload(file: Blob, url: URL): Promise<void> {\r\n    const store = await this.database.objectStore(this.database.files, \"readwrite\");\r\n    const uploadedFile: UploadedFile = {\r\n      blob: file,\r\n      url: url.href,\r\n    };\r\n    await requestToPromise(store.put(uploadedFile));\r\n  }\r\n\r\n  async list(url: URL): Promise<URL[]> {\r\n    const store = await this.database.objectStore(this.database.files);\r\n    const res = await requestToPromise(store.get(prefixWith(url.href)));\r\n    console.log(res);\r\n    return [];\r\n  }\r\n\r\n  async read(url: URL): Promise<UploadedFile | null> {\r\n    const store = await this.database.objectStore(this.database.files);\r\n    const request: IDBRequest<UploadedFile> = store.get(url.toString());\r\n    const file = await requestToPromise(request);\r\n    return file;\r\n  }\r\n\r\n}\r\n"],"names":[],"version":3,"file":"index.a114c4df.js.map"}