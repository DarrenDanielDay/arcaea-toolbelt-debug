{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKO,MAAM,4CAAW,CAAC;IACvB,SAAS,IAAI,CAAC,SAAS,GAAG;IAC1B,MAAM,OAAO,CAAA,GAAA,YAAA,EAAM;QACjB,SAAS;QACT,UAAU;QACV,KAAK,CAAA,MAAA,CAAQ;IACL,GAAE;IACZ,MAAM,OAAE,GAAG,WAAE,OAAO,YAAE,QAAQ,EAAE,GAAG;IACnC,MAAM,UAAU;QACd,IAAI,SAAS,CAAC,MAAM,CAAC,WAAW;IAClC;IACA,CAAA,GAAA,qBAAA,EAAe,UAAU;QACvB;IACF;IACA,QAAQ,OAAO,GAAG;QAChB,IAAI,SAAS,CAAC,MAAM,CAAC;IACvB;IACA,IAAI,gBAAgB,CAAC,gBAAgB,OAAO,CAAC,CAAC;QAC5C,KAAK,OAAO,GAAG;YACb;QACF;IACF;IACA,SAAS,gBAAgB,CAAC,OAAO,OAAO,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG;YACZ,MAAM,eAAe,CAAC,CAAC,SAAS,iBAAiB;YACjD,IAAI,cACF,SAAS,cAAc;iBAEvB,IAAI,iBAAiB,CAAC;gBAAE,cAAc;YAAM;QAEhD;IACF;AACF;;;;;;ACrCO,MAAM,4CAAiB,CAAC,OAAgB;IAC7C,MAAM,UAAU,CAAC;QACf,MAAM,OAAO,EAAE,YAAY;QAC3B,IAAI,CAAC,KAAK,QAAQ,CAAC,QACjB,QAAQ;IAEZ;IACA,OAAO,gBAAgB,CAAC,SAAS;IACjC,OAAO;QACL,OAAO,mBAAmB,CAAC,SAAS;IACtC;AACF;;;;;;;;;;;ACPO,MAAM,4CAAM,OAAO,GAAG;AAEtB,MAAM,4CACX,CAAmC,UACnC,CAAC,OACC,0CAA0C;QAC1C,OAAO,WAAW,CAAC,OAAO,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAK;gBAAC;gBAAK,KAAK,aAAa,CAAC;aAAO;AAU9F,MAAM,4CAAQ,IAAM,CAAA,GAAA,cAAA,EAAQ;AAE5B,MAAM,4CAAY,CAAC;IACxB,MAAM,QAAQ,UAAU,KAAK;IAC7B,IAAK,MAAM,OAAO,MAChB,IAAI,QAAQ,SAAS,QAAQ,YAAY;QACvC,wCAAwC;QACxC,MAAM,QAAQ,KAAK,CAAC,IAAI;QACxB,IAAI,OAAO,UAAU,YAAY,OAAO,UAAU,YAAY,OAAO,UAAU,WAC7E,CAAA,GAAA,WAAA,EAAK,WAAW,KAAK;IAEzB;AAEJ;AAEM,MAAO;IACX,SAAS,kBAAkB;IAC3B,gBAAgB,MAAM;IACtB,MAAM,EAAW,EAAE,OAAsB,EAAE,KAAc,EAAzD;QACE,IAAI,SAAS,cAAc,kBACzB,OAAO,CAAA,GAAA,aAAA,EAAO,IAAI,YAAY,CAAC;YAC7B,IAAI,EAAE,GAAG,CAAC,WAAW,OAAO,SAAS,GAAG,IAAI,EAAE;QAChD;IAEJ;AACD;AAED,CAAA,GAAA,wBAAA,EAAkB,IAAI;;;;;;;;AE/CtB,4BAAiB;;;ADGjB,CAAA,GAAA,eAAA,EAAS,CAAA,GAAA,gEAAA","sources":["src/docs/shared.ts","src/utils/click-elsewhere.ts","src/utils/component.ts","src/docs/plugin-usage/index.ts","node_modules/@parcel/runtime-js/lib/bundles/runtime-85de14e4c1ff09bc.js"],"sourcesContent":["import { clickElsewhere } from \"../utils/click-elsewhere\";\r\nimport { query } from \"../utils/component\";\r\nimport \"./shared.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport const docsPage = (content: string) => {\r\n  document.body.innerHTML = content;\r\n  const refs = query({\r\n    tocMenu: \"aside header\",\r\n    tocPanel: \"div.toc-wrapper\",\r\n    toc: `ul#toc`,\r\n  } as const)(document);\r\n  const { toc, tocMenu, tocPanel } = refs;\r\n  const hideToc = () => {\r\n    toc.classList.toggle(\"visible\", false);\r\n  };\r\n  clickElsewhere(tocPanel, () => {\r\n    hideToc();\r\n  });\r\n  tocMenu.onclick = () => {\r\n    toc.classList.toggle(\"visible\");\r\n  };\r\n  toc.querySelectorAll(\"li > a[href]\").forEach((link) => {\r\n    link.onclick = () => {\r\n      hideToc();\r\n    };\r\n  });\r\n  document.querySelectorAll(\"img\").forEach((img) => {\r\n    img.onclick = () => {\r\n      const isFullScreen = !!document.fullscreenElement;\r\n      if (isFullScreen) {\r\n        document.exitFullscreen();\r\n      } else {\r\n        img.requestFullscreen({ navigationUI: \"show\" });\r\n      }\r\n    };\r\n  });\r\n};\r\n","export const clickElsewhere = (panel: Element, onClick: (e: MouseEvent) => void) => {\r\n  const handler = (e: MouseEvent) => {\r\n    const path = e.composedPath();\r\n    if (!path.includes(panel)) {\r\n      onClick(e);\r\n    }\r\n  };\r\n  window.addEventListener(\"click\", handler);\r\n  return () => {\r\n    window.removeEventListener(\"click\", handler);\r\n  };\r\n};\r\n","import { ParseSelector } from \"typed-query-selector/parser\";\r\nimport { attr, element, listen, registerDirective } from \"hyplate\";\r\nimport type { ClassComponentInstance, CleanUpFunc, JSXDirective } from \"hyplate/types\";\r\n\r\nexport const css = String.raw;\r\n\r\nexport const query =\r\n  <T extends Record<string, string>>(queries: T): Query<T> =>\r\n  (host) =>\r\n    // @ts-expect-error Dynamic Implementation\r\n    Object.fromEntries(Object.entries(queries).map(([key, value]) => [key, host.querySelector(value)]));\r\n\r\nexport type Query<T extends Record<string, string>> = (host: ParentNode) => Refs<T>;\r\n\r\nexport type Refs<T extends Record<string, string>> = {\r\n  [K in keyof T]: ParseSelector<T[K]>;\r\n};\r\n\r\nexport type RefsOf<Q> = Q extends Query<infer T> ? Refs<T> : never;\r\n\r\nexport const input = () => element(\"input\");\r\n\r\nexport const syncProps = (component: ClassComponentInstance) => {\r\n  const props = component.props;\r\n  for (const key in props) {\r\n    if (key !== \"ref\" && key !== \"children\") {\r\n      // @ts-expect-error dynamic key property\r\n      const value = props[key];\r\n      if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\r\n        attr(component, key, value);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport class EnterSubmitDirective implements JSXDirective<boolean> {\r\n  prefix = \"keypress-submit\";\r\n  requireParams = false;\r\n  apply(el: Element, _params: string | null, input: boolean): void | CleanUpFunc {\r\n    if (input && el instanceof HTMLInputElement) {\r\n      return listen(el)(\"keypress\", (e) => {\r\n        if (e.key.toLowerCase() === \"enter\") el.form?.requestSubmit();\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nregisterDirective(new EnterSubmitDirective());\r\n\r\ndeclare module \"hyplate/types\" {\r\n  export interface ElementDirectives<E extends Element> {\r\n    \"keypress-submit\"?: boolean;\r\n  }\r\n}\r\n","import { docsPage } from \"../shared\";\r\nimport html from \"bundle-text:./index.html\";\r\n\r\ndocsPage(html);\r\n","module.exports = \"a1be83f02a491dc5\";"],"names":[],"version":3,"file":"plugin-usage.aad3aafa.js.map"}